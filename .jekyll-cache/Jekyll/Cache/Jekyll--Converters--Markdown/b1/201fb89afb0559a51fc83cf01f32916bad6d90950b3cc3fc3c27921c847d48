I":<h2 id="개요">개요</h2>

<p>대형 포탈이나 크고 작은 서비스를 통해 자신만의 블로그를 만들 수 있다. 이러한 서비스를 통한 블로그는 서비스와 연동된 계정과 버튼 클릭 몇 번으로 만들 수 있을 정도로 쉽고 간편하다. 하지만 이와 같은 블로그는 페이지의 기본 프레임이 정해져있고, 커스터마이징이라곤 단순 테마 크로마키에 그치기 때문에 제약이 많다.
자신만의 색깔이나 가치관을 담은 블로그를 만들기 위해선 이러한 서비스의 형태를 탈피해야 하는데, 이는 곧 자신이 직접 웹 페이지를 제작하고 이를 퍼블리싱하여 호스팅까지 해야한다는 엄청난 작업으로 이어진다. 어찌어찌 페이지 프레임을 제작한다 하더라도, CSS를 통한 디자인이나, JavaScript 같은 부가기능은 프레임 이상으로 어렵다. 어떻게든 이 작업을 완료한다고 해도 호스팅은 돈이 든다. DB까지 연동된다면 금액은 더욱 커진다.</p>

<figure>
	<a href="https://user-images.githubusercontent.com/50317129/90330531-5d5cf000-dfe8-11ea-8a25-c5c89fa05a42.png">
		<img src="https://user-images.githubusercontent.com/50317129/90330531-5d5cf000-dfe8-11ea-8a25-c5c89fa05a42.png" />
	</a>
</figure>

<p>GitHub를 이용하면 위와같은 문제의 대부분을 해결할 수 있다. Github는 <strong>github-pages</strong> 프로젝트를 통해 특정한 이름을 가진 <strong>Repository</strong> 내부의 파일들을 github.io의 도메인으로 퍼블리싱해준다. 즉, 무료로 웹 호스팅을 해주는 셈이다. 이렇게 규칙에 맞춰 Repository를 하나 만드는 것 만으로도 호스팅이라는 큰 난관 하나가 해결된다.</p>

<blockquote>
  <p>Github Repository: Github에서 관리되는 프로젝트의 단위로, 각 계정마다 여러개의 Repository를 마음대로 생성, 수정, 삭제할 수 있다.</p>
</blockquote>

<p>안타깝게도 이는 호스팅과정을 라이트하게 만들어준 것일 뿐, 실제 페이지를 퍼블리싱하기 위해선 어쩔 수 없이 웹 코딩이 필요하다. 이를 위해 Github는 <strong>Jekyll(지킬)</strong>이라는 프레임워크를 만들어 사용자들이 테마를 쉽게 만들고 이를 활용할 수 있는 환경을 제공하고 있다.</p>

<p>필자는 어느정도 웹 관련 지식이 있음에도 불구하고 Ruby와 Jekyll라는 다소 생소한 환경때문에 이를 이해하는데 다소 시간이 소요됐다. 이번 주제를 통해 웹에 있어서 나와 비슷한, 혹은 거의 전무한 지식을 가진 사람들에게 내가 이해한 것과 난 어떤식으로 이 블로그를 구축했는지에 대한 내용을 공유해보고자 한다.</p>

<hr />
<h2 id="jekyll란">Jekyll란?</h2>

<p>Jekyll. 처음엔 이걸 뭐라 불러야하나 했는데, 통상 지킬이라고 부르는 것 같다. 위에서도 잠깐 언급했듯이 Jekyll은 Github에서 만든 프레임워크다. Ruby 기반으로 제작된 텍스트 컴파일러라고 생각해도 무난할 것 같다. 페이지는 기본적인 웹의 형태와 동일하게, HTML, CSS, JavaScript로 이루어져 있다. 여기에 추가적으로 Liquid 템플릿 언어가 포함된다. 이렇게 작성된 파일들을 Jekyll 프레임워크에서 컴파일을 진행해여 실제 퍼블리싱 가능한 형태의 파일로 제공한다.</p>

<p>Jekyll은 <strong>정적 웹</strong> 환경을 위한 프레임워크다. 응답 제공 측면에서 웹을 나누면 크게 정적 웹(Static Web)과 동적 웹(Dynamic Web)으로 나뉜다.</p>

<h4 id="정적-웹">정적 웹</h4>

<ul>
  <li>요청에 따라 미리 저장된 페이지를 그대로 전달</li>
  <li>서버 단계에서의 동작이 생략되므로, 서버 사양에 대한 영향이 적음</li>
  <li>웹 제작이 훨씬 간편함</li>
  <li>속도가 빠름</li>
</ul>

<h4 id="동적-웹">동적 웹</h4>

<ul>
  <li>요청에 따라 데이터를 가공하여 전달</li>
  <li>DB연동을 통해 일괄적인 데이터 CRUD가 가능</li>
  <li>같은 페이지에서도 요청에 따라 다양한 내용으로 응답</li>
  <li>탄탄하고 대규모의 비즈니스 서비스를 제공하기 유용함</li>
</ul>

<p>우리가 흔히 접하는 웹은 보통 동적 웹이다. 동적 웹은 DB에 데이터를 저장하고, 이를 필요에 따라 호출하여 이를 가공해서 페이지에 표시하는 형태이다. DB의 존재로 인해 데이터를 실시간으로 CRUD가 가능하기 때문에 계정이나 페이지별로 접근권한을 두어 권한이 없는 사용자의 접근을 제한하는 형태의 웹을 만들때 유용하다. 보통 로그인이나 글 작성같이 사용자가 페이지를 통해 무언가 ‘활동’을 할 수 있다면 동적 웹으로 취급한다.</p>

<p>반대로 정적 웹은 단순히 보여</p>
:ET