<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Kapoo</title>
		<description>314159265359번째 알파카의 개발 낙서장</description>
		<link>https://rwb0104.github.io//</link>
		<atom:link href="https://rwb0104.github.io/feed.xml" rel="self" type="application/rss+xml"/>
		<pubDate>2021-05-26T14:36:57.000Z</pubDate>
		<lastBuildDate>2021-06-07T00:55:31.843Z</lastBuildDate>
	</channel>
	<item>
		<title>[JAVA] 백준 알고리즘 1000번 A + B</title>
		<description>두 정수 A와 B를 입력받은 다음, A + B를 출력하는 프로그램을 작성하시오.</description>
		<pubDate>2021-05-21T12:38:17.000Z</pubDate>
		<link>https://rwb0104.github.io/posts/2021/05/21/A1000/</link>
		<guid isPermaLink="true">https://rwb0104.github.io/posts/2021/05/21/A1000/</guid>
		<category>알고리즘</category>
		<category>알고리즘</category>
		<category>백준</category>
		<category>알고리즘</category>
		<category>JAVA(자바)</category>
		<category>BRONZE</category>
		<category>BRONZE V</category>
	</item>
	<item>
		<title>[JAVA] 백준 알고리즘 1001번 A - B</title>
		<description>두 정수 A와 B를 입력받은 다음, A - B를 출력하는 프로그램을 작성하시오.</description>
		<pubDate>2021-05-21T12:51:19.000Z</pubDate>
		<link>https://rwb0104.github.io/posts/2021/05/21/A1001/</link>
		<guid isPermaLink="true">https://rwb0104.github.io/posts/2021/05/21/A1001/</guid>
		<category>알고리즘</category>
		<category>알고리즘</category>
		<category>백준</category>
		<category>알고리즘</category>
		<category>JAVA(자바)</category>
		<category>BRONZE</category>
		<category>BRONZE V</category>
	</item>
	<item>
		<title>[JAVA] 백준 알고리즘 1002번 터렛</title>
		<description>조규현과 백승환은 터렛에 근무하는 직원이다. 하지만 워낙 존재감이 없어서 인구수는 차지하지 않는다. 다음은 조규현과 백승현의 사진이다.</description>
		<pubDate>2021-05-21T12:56:10.000Z</pubDate>
		<link>https://rwb0104.github.io/posts/2021/05/21/A1002/</link>
		<guid isPermaLink="true">https://rwb0104.github.io/posts/2021/05/21/A1002/</guid>
		<category>알고리즘</category>
		<category>알고리즘</category>
		<category>백준</category>
		<category>알고리즘</category>
		<category>JAVA(자바)</category>
		<category>SILVER</category>
		<category>SILVER IV</category>
	</item>
	<item>
		<title>[JAVA] 백준 알고리즘 1003번 피보나치 함수</title>
		<description>다음 소스는 N번째 피보나치 수를 구하는 C++ 함수이다.</description>
		<pubDate>2021-05-21T14:29:03.000Z</pubDate>
		<link>https://rwb0104.github.io/posts/2021/05/21/A1003/</link>
		<guid isPermaLink="true">https://rwb0104.github.io/posts/2021/05/21/A1003/</guid>
		<category>알고리즘</category>
		<category>알고리즘</category>
		<category>백준</category>
		<category>알고리즘</category>
		<category>JAVA(자바)</category>
		<category>SILVER</category>
		<category>SILVER III</category>
	</item>
	<item>
		<title>Jekyll에서 Next.js로</title>
		<description>Jekyll에서 Next.js로의 블로그 이동기</description>
		<pubDate>2021-05-21T06:09:33.000Z</pubDate>
		<link>https://rwb0104.github.io/posts/2021/05/21/jekyll-to-nextjs/</link>
		<guid isPermaLink="true">https://rwb0104.github.io/posts/2021/05/21/jekyll-to-nextjs/</guid>
		<category>잡담</category>
		<category>잡담</category>
		<category>React(리액트)</category>
		<category>Next.js</category>
		<category>개발 블로그</category>
		<category>Jekyll</category>
		<category>Next.js</category>
	</item>
	<item>
		<title>백준 알고리즘 시작하기</title>
		<description>코딩 테스트 및 개인 실력 향상을 위해 백준 알고리즘을 차례로 풀어보기로 했다. 그냥 풀기만 하면 분명히 나중에 어떻게 풀었는지 까먹을테니, 이해한 내용을 포스팅하며 풀이를 진행한다. 풀이의 규칙은 아래와 같다.</description>
		<pubDate>2021-05-21T12:22:31.000Z</pubDate>
		<link>https://rwb0104.github.io/posts/2021/05/21/start-beakjoon/</link>
		<guid isPermaLink="true">https://rwb0104.github.io/posts/2021/05/21/start-beakjoon/</guid>
		<category>알고리즘</category>
		<category>알고리즘</category>
		<category>백준</category>
		<category>알고리즘</category>
		<category>JAVA(자바)</category>
	</item>
	<item>
		<title>[JAVA] 백준 알고리즘 1004번 어린 왕자</title>
		<description>어린 왕자는 소혹성 B-664에서 자신이 사랑하는 한 송이 장미를 위해 살아간다. 어느 날 장미가 위험에 빠지게 된 것을 알게 된 어린 왕자는, 장미를 구하기 위해 은하수를 따라 긴 여행을 하기 시작했다. 하지만 어린 왕자의 우주선은 그렇게 좋지 않아서 행성계 간의 이동을 최대한 피해서 여행해야 한다. 아래의 그림은 어린 왕자가 펼쳐본 은하수 지도의 일부이다.</description>
		<pubDate>2021-05-22T12:42:23.000Z</pubDate>
		<link>https://rwb0104.github.io/posts/2021/05/22/A1004/</link>
		<guid isPermaLink="true">https://rwb0104.github.io/posts/2021/05/22/A1004/</guid>
		<category>알고리즘</category>
		<category>알고리즘</category>
		<category>백준</category>
		<category>알고리즘</category>
		<category>JAVA(자바)</category>
		<category>SILVER</category>
		<category>SILVER III</category>
	</item>
	<item>
		<title>도메인이란?</title>
		<description>도메인을 이해하기 위해선, IP에 대해 짚고 넘어가야 한다. 인터넷에 연결된 모든 디바이스(컴퓨터, 스마트폰, 공유기 등)는 고유한 12자리 숫자로 구성된 IP주소를 가진다. IP를 유동성으로 나누면 크게 유동 IP, 고정 IP로 분류할 수 있다. 유동 IP: 임의의 시점마다 IP주소가 갱신되는 IP. 갱신 주기는 일정하지 않음. 대부분의 인터넷 회선에 적용됨. 고정 IP: 회선에 고정된 IP를 부여하며, 해당 회선의 IP는 갱신되지 않음. 부가서비스 형태로 제공되며, 쇼핑몰이나 회사 등 지속적으로 시스템을 운영해야 할 경우 적합함. 우리가 원하는 장소에 방문하기 위해 주소를 찾듯이, 특정 서버에서 운영하는 웹 사이트를 방문하기 위해선 해당 서버의 주소인 IP가 필요하다.</description>
		<pubDate>2021-05-22T03:52:51.000Z</pubDate>
		<link>https://rwb0104.github.io/posts/2021/05/22/about-domain/</link>
		<guid isPermaLink="true">https://rwb0104.github.io/posts/2021/05/22/about-domain/</guid>
		<category>WEB</category>
		<category>WEB</category>
		<category>WEB(웹)</category>
		<category>Domain(도메인)</category>
	</item>
	<item>
		<title>Tomcat(톰캣) 콘솔창 한글 인코딩 깨짐 현상 해결하기</title>
		<description>톰캣을 구동하다보면 심심치않게 마주하는 오류(?)는 아니고 현상. Windows Console의 기본 인코딩과 Tomcat이 출력하는 인코딩이 서로 달라서 생긴다.</description>
		<pubDate>2021-05-22T03:52:51.000Z</pubDate>
		<link>https://rwb0104.github.io/posts/2021/05/22/tomcat-encoding-euckr/</link>
		<guid isPermaLink="true">https://rwb0104.github.io/posts/2021/05/22/tomcat-encoding-euckr/</guid>
		<category>WAS</category>
		<category>WAS</category>
		<category>WAS</category>
		<category>Tomcat(톰캣)</category>
		<category>Console(콘솔)</category>
	</item>
	<item>
		<title>Tomcat(톰캣) 현재 콘솔창에서 구동하기</title>
		<description>오늘도 어느때와 다름없이 톰캣을 구동하는 A씨. 어제까지만 해도 잘 되던 톰캣이 무슨 오류가 있는지 구동 중에 바로 꺼져버린다. 꺼지기 직전의 순간 무슨 오류가 뜬 거 같은데..... 너무 빨라서 도통 확인할 수가 없다. 할 수 없이 일일이 로그를 찾아보며 오류를 수정하는 A씨. 건드린 것도 없는데, 왜 이러는 걸까?</description>
		<pubDate>2021-05-26T07:32:16.000Z</pubDate>
		<link>https://rwb0104.github.io/posts/2021/05/26/tomcat-current-window/</link>
		<guid isPermaLink="true">https://rwb0104.github.io/posts/2021/05/26/tomcat-current-window/</guid>
		<category>WAS</category>
		<category>WAS</category>
		<category>WAS</category>
		<category>Tomcat(톰캣)</category>
		<category>Console(콘솔)</category>
	</item>
	<item>
		<title>URI? URL? URN? 리소스 식별자 구분하기</title>
		<description>우리가 인터넷 상에서 특정한 데이터에 접근할 때 URL이라는 것을 활용하여 접근한다. 원하는 자료의 URL을 얻으면, 브라우저 같은 HTTP 통신 프로그램에 해당 URL을 호출하여 응답을 얻는 것이다.</description>
		<pubDate>2021-05-28T18:30:17.000Z</pubDate>
		<link>https://rwb0104.github.io/posts/2021/05/29/uri-url-urn/</link>
		<guid isPermaLink="true">https://rwb0104.github.io/posts/2021/05/29/uri-url-urn/</guid>
		<category>WEB</category>
		<category>WEB</category>
		<category>WEB(웹)</category>
		<category>URI</category>
		<category>URL</category>
		<category>URN</category>
	</item>
	<item>
		<title>Unsupported major.minor version 에러 해결하기 (+Servlet 404 에러)</title>
		<description>간혹 JAVA 프로그램을 실행하다보면 Unsupported major.minor version 52(숫자는 class 버전에 따라 다름) 오류가 출력되면서 정상적으로 동작하지 않는 오류가 발생한다. Unsupported major.minor version 오류는 직역하면 "지원하지 않는 주/부 버전"이다. JAVA 버전관련 오류라고 보면 된다.</description>
		<pubDate>2021-05-29T17:16:35.000Z</pubDate>
		<link>https://rwb0104.github.io/posts/2021/05/30/unsupported-version-error/</link>
		<guid isPermaLink="true">https://rwb0104.github.io/posts/2021/05/30/unsupported-version-error/</guid>
		<category>JAVA</category>
		<category>JAVA</category>
		<category>JAVA</category>
		<category>WAS</category>
		<category>Tomcat(톰캣)</category>
		<category>오류 해결책</category>
	</item>
	<item>
		<title>[JAVA] 백준 알고리즘 1005번 ACM Craft</title>
		<description>서기 2012년! 드디어 2년간 수많은 국민들을 기다리게 한 게임 ACM Craft(Association of Construction Mananger Craft)가 발매되었다. 이 게임은 지금까지 나온 게임들과는 다르게 ACM Craft는 다이나믹한 게임 진행을 위해 건물을 짓는 순서가 정해져있지 않다. 즉, 첫 번째 게임과 두 번째 게임이 건물을 짓는 순서가 다를 수도 있다. 매 게임시작 시 건물을 짓는 순서가 주어진다. 또한 모든 건물은 각각 건설을 시작하여 완성이 될 때까지 Delay가 존재한다.</description>
		<pubDate>2021-05-31T16:27:56.000Z</pubDate>
		<link>https://rwb0104.github.io/posts/2021/06/01/A1005/</link>
		<guid isPermaLink="true">https://rwb0104.github.io/posts/2021/06/01/A1005/</guid>
		<category>알고리즘</category>
		<category>알고리즘</category>
		<category>백준</category>
		<category>알고리즘</category>
		<category>JAVA(자바)</category>
		<category>위상정렬</category>
		<category>GOLD</category>
		<category>GOLD III</category>
	</item>
	<item>
		<title>Compiler(컴파일러) & Interpreter(인터프리터)</title>
		<description>천공카드 이래로 지금까지 컴퓨터 언어는 무수히 많은 발전을 거듭했다. 현재에 이르러서는 개발된 언어끼리의 시너지가 일어나 하루가 멀다하고 새로운 언어, 개념이 생성되고 있다. 하지만 그 아무리 새로운 언어로 구현한 소프트웨어라 하더라도, 결과적으로 프로그램의 실행 주체는 컴퓨터에게 있다. 우리가 아무리 새로운 언어니, 프레임워크니, 기술이니 지지고 볶고 하더라도 결국은 컴퓨터가 알아먹을 수 있어야 실행된다는 얘기다. 글로벌 시대답게 초등학생도 1개 이상의 외국어를 하는 마당에, 안타깝게도 우리 컴퓨터는 개발 이래로 초지일관 기계어만을 고집한다. 한글, 영어는 고사하고 우리가 개발할 때 사용하는 프로그래밍 언어라고 하는 대부분의 언어들. 심지어 C언어 보다도 저수준인 어셈블리어 조차 컴퓨터 입장에서는 외계어와 다를 바 없다.</description>
		<pubDate>2021-06-03T08:25:23.000Z</pubDate>
		<link>https://rwb0104.github.io/posts/2021/06/03/compiler-interpreter/</link>
		<guid isPermaLink="true">https://rwb0104.github.io/posts/2021/06/03/compiler-interpreter/</guid>
		<category>CS</category>
		<category>CS</category>
		<category>Compiler(컴파일러)</category>
		<category>Interpreter(인터프리터)</category>
	</item>
	<item>
		<title>[JAVA] 백준 알고리즘 1006번 습격자 초라기</title>
		<description>초라기는 한국의 비밀국방기지(원타곤)를 습격하라는 임무를 받은 특급요원이다. 원타곤의 건물은 도넛 형태이며, 초라기는 효율적인 타격 포인트를 정하기 위해 구역을 아래와 같이 두 개의 원 모양으로 나누었다. (그림의 숫자는 각 구역의 번호이다.) 초라기는 각각 W명으로 구성된 특수소대를 다수 출동시켜 모든 구역에 침투시킬 예정이며, 각 구역 별로 적이 몇 명씩 배치되어 있는지는 초라기가 모두 알고 있다. 특수소대를 아래 조건에 따라 침투 시킬 수 있다.</description>
		<pubDate>2021-06-06T13:42:02.000Z</pubDate>
		<link>https://rwb0104.github.io/posts/2021/06/06/A1006/</link>
		<guid isPermaLink="true">https://rwb0104.github.io/posts/2021/06/06/A1006/</guid>
		<category>알고리즘</category>
		<category>알고리즘</category>
		<category>백준</category>
		<category>알고리즘</category>
		<category>JAVA(자바)</category>
		<category>DP(동적 계획법)</category>
		<category>PLATINUM</category>
		<category>PLATINUM III</category>
	</item>
	<item>
		<title>[Jekyll] GitHub Pages를 이용해 나만의 블로그 만들기 - 2. GitHub와 친해지기</title>
		<description>초라기는 한국의 비밀국방기지(원타곤)를 습격하라는 임무를 받은 특급요원이다. 원타곤의 건물은 도넛 형태이며, 초라기는 효율적인 타격 포인트를 정하기 위해 구역을 아래와 같이 두 개의 원 모양으로 나누었다. (그림의 숫자는 각 구역의 번호이다.) 초라기는 각각 W명으로 구성된 특수소대를 다수 출동시켜 모든 구역에 침투시킬 예정이며, 각 구역 별로 적이 몇 명씩 배치되어 있는지는 초라기가 모두 알고 있다. 특수소대를 아래 조건에 따라 침투 시킬 수 있다.</description>
		<pubDate>2021-06-07T13:42:02.000Z</pubDate>
		<link>https://rwb0104.github.io/posts/2021/06/07/jekyll-blog-github/</link>
		<guid isPermaLink="true">https://rwb0104.github.io/posts/2021/06/07/jekyll-blog-github/</guid>
		<category>Jekyll</category>
		<category>Jekyll</category>
		<category>GitHub Pages(깃허브 페이지)</category>
		<category>Jekyll(지킬)</category>
		<category>Blog(블로그)</category>
		<category>GitHub(깃허브)</category>
	</item>
	<item>
		<title>[Jekyll] GitHub Pages를 이용해 나만의 블로그 만들기 - 1. Jekyll이란?</title>
		<description>초라기는 한국의 비밀국방기지(원타곤)를 습격하라는 임무를 받은 특급요원이다. 원타곤의 건물은 도넛 형태이며, 초라기는 효율적인 타격 포인트를 정하기 위해 구역을 아래와 같이 두 개의 원 모양으로 나누었다. (그림의 숫자는 각 구역의 번호이다.) 초라기는 각각 W명으로 구성된 특수소대를 다수 출동시켜 모든 구역에 침투시킬 예정이며, 각 구역 별로 적이 몇 명씩 배치되어 있는지는 초라기가 모두 알고 있다. 특수소대를 아래 조건에 따라 침투 시킬 수 있다.</description>
		<pubDate>2021-06-07T13:42:02.000Z</pubDate>
		<link>https://rwb0104.github.io/posts/2021/06/07/jekyll-blog-start/</link>
		<guid isPermaLink="true">https://rwb0104.github.io/posts/2021/06/07/jekyll-blog-start/</guid>
		<category>Jekyll</category>
		<category>Jekyll</category>
		<category>GitHub Pages(깃허브 페이지)</category>
		<category>Jekyll(지킬)</category>
		<category>Blog(블로그)</category>
	</item>
</rss>