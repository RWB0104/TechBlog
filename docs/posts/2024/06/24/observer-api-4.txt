2:I[31253,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-d63fbd3836c70036.js","979","static/chunks/app/page-871c05277f892fb0.js"],""]
3:I[15441,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-d63fbd3836c70036.js","979","static/chunks/app/page-871c05277f892fb0.js"],"default"]
4:I[75713,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-d63fbd3836c70036.js","979","static/chunks/app/page-871c05277f892fb0.js"],"default"]
5:I[36032,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-d63fbd3836c70036.js","979","static/chunks/app/page-871c05277f892fb0.js"],"default"]
6:I[4816,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-d63fbd3836c70036.js","979","static/chunks/app/page-871c05277f892fb0.js"],""]
7:I[67425,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","377","static/chunks/377-5459304f76782ae9.js","48","static/chunks/48-d63fbd3836c70036.js","78","static/chunks/app/%5B...markdown%5D/page-ef63b75fe2dd90fc.js"],"default"]
8:I[28676,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","377","static/chunks/377-5459304f76782ae9.js","48","static/chunks/48-d63fbd3836c70036.js","78","static/chunks/app/%5B...markdown%5D/page-ef63b75fe2dd90fc.js"],"default"]
9:I[12168,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-d63fbd3836c70036.js","979","static/chunks/app/page-871c05277f892fb0.js"],""]
a:I[25737,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","377","static/chunks/377-5459304f76782ae9.js","48","static/chunks/48-d63fbd3836c70036.js","78","static/chunks/app/%5B...markdown%5D/page-ef63b75fe2dd90fc.js"],"default"]
b:I[50979,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","377","static/chunks/377-5459304f76782ae9.js","48","static/chunks/48-d63fbd3836c70036.js","78","static/chunks/app/%5B...markdown%5D/page-ef63b75fe2dd90fc.js"],"default"]
c:I[66560,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-d63fbd3836c70036.js","979","static/chunks/app/page-871c05277f892fb0.js"],""]
d:I[29936,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","377","static/chunks/377-5459304f76782ae9.js","48","static/chunks/48-d63fbd3836c70036.js","78","static/chunks/app/%5B...markdown%5D/page-ef63b75fe2dd90fc.js"],"default"]
f:I[64678,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","377","static/chunks/377-5459304f76782ae9.js","48","static/chunks/48-d63fbd3836c70036.js","78","static/chunks/app/%5B...markdown%5D/page-ef63b75fe2dd90fc.js"],"default"]
10:I[89791,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","377","static/chunks/377-5459304f76782ae9.js","48","static/chunks/48-d63fbd3836c70036.js","78","static/chunks/app/%5B...markdown%5D/page-ef63b75fe2dd90fc.js"],"default"]
11:I[5760,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-d63fbd3836c70036.js","979","static/chunks/app/page-871c05277f892fb0.js"],""]
12:I[98918,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-d63fbd3836c70036.js","979","static/chunks/app/page-871c05277f892fb0.js"],"default"]
13:I[21055,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-d63fbd3836c70036.js","979","static/chunks/app/page-871c05277f892fb0.js"],"default"]
14:I[44271,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-d63fbd3836c70036.js","979","static/chunks/app/page-871c05277f892fb0.js"],"default"]
15:I[95534,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","377","static/chunks/377-5459304f76782ae9.js","48","static/chunks/48-d63fbd3836c70036.js","78","static/chunks/app/%5B...markdown%5D/page-ef63b75fe2dd90fc.js"],"default"]
16:I[11494,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","377","static/chunks/377-5459304f76782ae9.js","48","static/chunks/48-d63fbd3836c70036.js","78","static/chunks/app/%5B...markdown%5D/page-ef63b75fe2dd90fc.js"],"default"]
17:I[35559,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","377","static/chunks/377-5459304f76782ae9.js","48","static/chunks/48-d63fbd3836c70036.js","78","static/chunks/app/%5B...markdown%5D/page-ef63b75fe2dd90fc.js"],"default"]
18:I[43439,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-d63fbd3836c70036.js","979","static/chunks/app/page-871c05277f892fb0.js"],"default"]
19:I[20140,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-d63fbd3836c70036.js","979","static/chunks/app/page-871c05277f892fb0.js"],""]
1a:I[42019,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-d63fbd3836c70036.js","979","static/chunks/app/page-871c05277f892fb0.js"],""]
1b:I[36139,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-d63fbd3836c70036.js","979","static/chunks/app/page-871c05277f892fb0.js"],""]
1c:I[94634,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-d63fbd3836c70036.js","979","static/chunks/app/page-871c05277f892fb0.js"],""]
1d:I[3812,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-d63fbd3836c70036.js","979","static/chunks/app/page-871c05277f892fb0.js"],""]
1e:I[20015,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-d63fbd3836c70036.js","979","static/chunks/app/page-871c05277f892fb0.js"],""]
1f:I[91417,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-d63fbd3836c70036.js","979","static/chunks/app/page-871c05277f892fb0.js"],""]
20:I[17186,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-d63fbd3836c70036.js","979","static/chunks/app/page-871c05277f892fb0.js"],""]
21:I[80560,[],""]
23:I[3602,[],""]
24:"$Sreact.suspense"
25:I[89696,["128","static/chunks/128-f15a9902e71a0cfb.js","622","static/chunks/622-c69f910e2c9609c0.js","965","static/chunks/965-368bab8011421292.js","185","static/chunks/app/layout-86ea2b89b83c3365.js"],"default"]
26:I[53327,["128","static/chunks/128-f15a9902e71a0cfb.js","622","static/chunks/622-c69f910e2c9609c0.js","965","static/chunks/965-368bab8011421292.js","185","static/chunks/app/layout-86ea2b89b83c3365.js"],"default"]
27:I[31798,["128","static/chunks/128-f15a9902e71a0cfb.js","622","static/chunks/622-c69f910e2c9609c0.js","965","static/chunks/965-368bab8011421292.js","185","static/chunks/app/layout-86ea2b89b83c3365.js"],"default"]
28:I[90085,["128","static/chunks/128-f15a9902e71a0cfb.js","622","static/chunks/622-c69f910e2c9609c0.js","965","static/chunks/965-368bab8011421292.js","185","static/chunks/app/layout-86ea2b89b83c3365.js"],"default"]
29:I[29459,["128","static/chunks/128-f15a9902e71a0cfb.js","622","static/chunks/622-c69f910e2c9609c0.js","965","static/chunks/965-368bab8011421292.js","185","static/chunks/app/layout-86ea2b89b83c3365.js"],"default"]
e:T310e,
# MutationObserver

![null](https://github.com/RWB0104/blog.itcode.dev/assets/50317129/c3a01a7f-d732-40c2-9768-557b04b58b2f)

`MutationObserver`는 DOM의 변화를 감지하는 옵저버다. DOM과 관련된 어떤 요소가 변하든지 감지할 수 있다. 이를테면, `width` 혹은 `padding` 같은 `style` 태그는 물론, `class`나 `id`, 자식 노드의 추가 등이 있다.

DOM의 변화를 감지한다는 특징으로 인해, DOM의 사이즈 변화를 감지하는 `ResizeObserver`를 대체할 수 있다.

``` typescript
const mo = new MutationObserver(callback);

mo.observe(tag, options);
```





## options

요소 등록 시 `options`를 전달하여 세부 옵션을 조정할 수 있다. `MutationObserverInit` 타입을 가진다.



### 속성 필터 (attributeFilter)

`attributeFilter`에 원하는 속성명을 배열로 지정하면, 해당 이름을 가진 속성의 변화만을 필터링하여 감지한다.

``` typescript
{
	// ...
	attributeFilter: [ 'id', 'class' ]
}
```

위와 같이 지정할 경우, `id` 및 `class`가 변할때만 옵저버가 감지한다. 만약 아무 값도 할당하지 않은 `undefined`일 경우, 모든 변화를 감지한다.



### 이전 속성값 (attributeOldValue)

`MutationObserver`는 DOM이 변화됐을 때 동작한다. 이 때, 상황에 따라 변화 이전의 값을 기반으로 로직을 구성하기도 하는데, 이 때 `attributeOldValue` 설정이 유용할 것이다.

``` typescript
{
	// ...
	attributeOldValue: true
}
```

위와 같이 지정할 경우, 속성 변화를 감지할 시, 변화 이전의 값도 같이 제공해준다. 이전 속성이 존재할 수 없는 첫 변화거나, 속성이 아닌 변화(자식 노드의 추가 등)일 경우 `null`이 반환된다.



### 속성 변화 감지 여부 (attributes)

DOM 속성 변화의 감지 여부를 지정한다.

``` typescript
{
	// ...
	attributes: true
}
```

`id`, `class`, `style` 같은 DOM의 속성 변화를 감지하고 싶을 경우, 해당 설정을 `true`로 지정해준다.

`attributeFilter` 혹은 `attributeOldValue`에 값이 지정된 경우, 해당 옵션을 생략할 수 있다.




### 텍스트 노드 변화 감지 여부 (characterData)

DOM의 텍스트 노드 변화(`node.value`)의 감지 여부를 지정한다.

``` typescript
{
	// ...
	characterData: true
}
```

DOM의 `textContent` 값이 바뀔 경우, 이를 감지한다.

``` typescript
function handleChange: ChangeEventHandler<HTMLInputElement> = (e) => {
	const tag = document.getElementById('target');

	if (tag?.firstChild?.textContent) {
		tag.firstChild.textContent = e.currentTarget.value;
	}
}
```

위와 같이 `tag.firstChild.textContent` 값이 변할 경우, `characterData` 이벤트가 감지된다.



### 이전 텍스트 노드 값 (characterDataOldValue)

`true`로 지정할 경우, `attributeOldValue`와 비슷하게 텍스트 노드 값 변화 시, 변화 이전의 값을 같이 반환해준다.

``` typescript
{
	// ...
	characterDataOldValue: true
}
```

이전 속성이 존재할 수 없는 첫 변화거나, 속성이 아닌 변화(자식 노드의 추가 등)일 경우 `null`이 반환된다.



### 자식 노드 변화 감지 여부 (childList)

대상 DOM에 자식 노드가 추가되거나 삭제될 경우를 감지한다.

``` typescript
{
	// ...
	childList: true
}
```

위와 같은 설정을 통해, 특정 DOM의 구조 변화를 능동적으로 감지할 수 있다.



### 하위 노드 변화 감지 여부 (subtree)

`subtree` 옵션으로 감지 범위를 하위 노드까지 확장할 수 있다.

``` typescript
{
	// ...
	subtree: true
}
```

위 옵션을 활성화하면, 하위 노드의 `attributes`, `characterData`, `childList` 변화까지 감지해준다. 감지 기준은 옵션에 할당한 부모의 기준과 동일하다.

예를들어, `attributes` 감지만 활성화하고 `subtree`를 적용하면, 자신 및 하위 노드 전체의 속성 변화 여부를 감지할 수 있다.





## callback

콜백 메서드를 통해 DOM 변화 시 동작할 로직을 지정할 수 있다. `MutationRecord` 타입을 가진다. 이를 코드로 표기하면 아래와 같다.

``` typescript
const mo = new MutationObserver((record) => {});
```



### 추가된 노드 (addedNodes)

`addedNodes`는 추가된 노드가 있을 경우, 이를 배열 형태로 반환한다. 노드 추가, 삭제와 관련된 `childList` 옵션이 활성화된 경우 반환된다.

``` html
<!-- 초기값 -->
<div id="target">
	
</div>

<!-- addedNodes 반환됨 -->
<div id="target">
	<p>just added!</p>
</div>
```

위 예시의 경우, `#target` 하위에 추가된 노드 `p`의 정보가 담긴다.

### 삭제된 노드 (removedNodes)

`removedNodes`는 삭제된 노드가 있을 경우, 이를 배열 형태로 반환한다. 조건은 `addedNodes`와 같다.

``` html
<!-- 초기값 -->
<div id="target">
	<p>just added!</p>
</div>

<!-- removedNodes 반환됨 -->
<div id="target">
	
</div>
```



### 변경된 속성명 (attributeName)

`attributeName`는 속성이 변경된 경우, 변경된 속성의 이름을 반환한다. 속성의 변화와 관련된 `attributes` 옵션이 활성화 된 경우 반환된다.

``` html
<!-- 초기값 -->
<div id="target">
	
</div>

<!-- attributeName 반환됨 -->
<div id="target" class="hi">
	
</div>
```

위 예시의 경우, `#target` 속성으로 추가된 속성명 `class`가 반환된다.



### 변경된 속성 네임스페이스 (attributeNamespace)

`attributeNamespace` 속성 네임스페이스가 변경된 경우, 변경된 속성 네임스페이스를 반환한다. 마찬가지로, `attributes` 옵션이 활성화 된 경우 반환된다.

변경된 속성이 네임스페이스를 가지고 있을 경우, 네임스페이스를 같이 반환한다고 이해하면 된다.

``` html
<!-- 초기값 -->
<div id="target">
	
</div>

<!-- attributeName 반환됨 -->
<div id="target" class="hi">
	
</div>
```

만약 `class` 생성 시 `setAttributeNS`를 통해 `ns`라는 네임스페이스로 묶어 생성한다면, 코드는 아래와 같이 구성된다.

``` typescript
tag.setAttributeNS("ns", "class", "hi");
```

위와 같은 예시에서, `attributeName`은 `class`를, `attributeNamespace`은 `ns`를 반환하게 된다.



### 변경된 태그의 다음 형제 태그 (nextSibling)

추가 혹은 제거된 노드의 다음 형제 DOM을 반환한다. 노드 추가, 삭제와 관련된 `childList` 옵션이 활성화된 경우 반환된다.



### 변경된 태그의 이전 형제 태그 (previousSibling)

추가 혹은 제거된 노드의 이전 형제 DOM을 반환한다.



### 변경 이전의 값 (oldValue)

변경 이벤트가 감지된 경우, 변경 이전의 값을 반환한다. `attributeOldValue` 및 `characterDataOldValue` 옵션이 `true`일 경우에만 값을 반환한다.



### 이벤트 대상 (target)

이벤트가 발생한 태그를 반환한다.



### 이벤트 타입 (type)

발생한 이벤트의 타입을 반환한다. 아래의 값 중, 발생한 이벤트의 이름을 반환한다.

- `attributes`
- `characterData`
- `childList`





# React에서 커스텀 훅으로 간편하게 사용하기

`MutationObserver`를 커스텀 훅을 통해 간편하게 사용해보자.

``` typescript
export function useMutationObserver(): void
{
  //
}
```

위와 같이 `useMutationObserver` 메서드를 정의한다.

`useMutationObserver`를 사용하기 위해선 아래의 세 요소가 필요하다.

1. 대상 DOM
2. 콜백 메서드
3. 옵션

위 세 요소를 파라미터로 정의하자. 1번의 경우, 일반적으로 `HTMLElement`가 필요하지만, 해당 훅에서는 `HTMLElement` 타입 뿐만 아니라, `string`을 받아 `#id`, `.class`와 같은 선택자로 태그를 활용할 수 있도록 만들 것이다.

``` typescript
import { useEffect } from "react";

export type UseMutationObserverCallback = (entry: MutationRecord) => void;

/**
 * MutationObserver 적용 훅 메서드
 *
 * @param {Element | string | null} ref: Element
 * @param {UseMutationObserverCallback} callback: 콜백 메서드
 * @param {MutationObserverInit} options: 옵션
 */
export function useMutationObserver(ref: Element | string | null, callback: UseMutationObserverCallback, options: MutationObserverInit): void
{
	useEffect(() =>
	{
		const ro = new MutationObserver((entries) =>
		{
			entries.forEach(callback);
		});
	}, [ ref, callback, options ]);
}
```

`MutationObserver`를 초기화하여 `mo` 변수로 할당한다.

이후 `ref`로 지정한 DOM을 할당한다.

`ref`는 세 가지 상태에 따라 아래와 같은 분기를 거친다.

- `null`일 경우 -> 패스한다.
- `string`일 경우 -> `document.querySelector` 메서드로 태그를 선택한 뒤, 해당 태그를 등록한다.
- `HTMLElement`일 경우 -> 이미 `Element`이므로, 즉시 등록한다.

`typeof ref === "string"` 구문을 통해 `ref`가 문자열인지를 판별하여 구현했다.

`mo.observe()` 메서드를 통해 태그를 등록할 수 있다.

``` typescript
import { useEffect } from "react";

export type UseMutationObserverCallback = (entry: MutationRecord) => void;

/**
 * MutationObserver 적용 훅 메서드
 *
 * @param {Element | string | null} ref: Element
 * @param {UseMutationObserverCallback} callback: 콜백 메서드
 * @param {MutationObserverInit} options: 옵션
 */
export function useMutationObserver(ref: Element | string | null, callback: UseMutationObserverCallback, options: MutationObserverInit): void
{
	useEffect(() =>
	{
		const mo = new MutationObserver((entries) =>
		{
			entries.forEach(callback);
		});

		// DOM이 유효할 경우
		if (ref)
		{
			// ref가 문자열일 경우
			if (typeof ref === 'string')
			{
				const tag = document.querySelector(ref);

				// 태그가 유효할 경우
				if (tag)
				{
					mo.observe(tag, options);
				}
			}

			// DOM일 경우
			else
			{
				mo.observe(ref, options);
			}
		}
	}, [ ref, callback, options ]);
}
```

마지막으로, 컴포넌트가 렌더링 될 때마다 `MutationObserver`의 등록이 중첩되지 않도록, 초기화 코드를 넣어준다.

`mo.disconnect()` 메서드를 통해 `MutationObserver`를 제거할 수 있다.





## 전체 코드

``` typescript
import { useEffect } from "react";

export type UseMutationObserverCallback = (entry: MutationRecord) => void;

/**
 * MutationObserver 적용 훅 메서드
 *
 * @param {Element | string | null} ref: Element
 * @param {UseMutationObserverCallback} callback: 콜백 메서드
 * @param {MutationObserverInit} options: 옵션
 */
export function useMutationObserver(ref: Element | string | null, callback: UseMutationObserverCallback, options: MutationObserverInit): void
{
	useEffect(() =>
	{
		const mo = new MutationObserver((entries) =>
		{
			entries.forEach(callback);
		});

		// DOM이 유효할 경우
		if (ref)
		{
			// ref가 문자열일 경우
			if (typeof ref === 'string')
			{
				const tag = document.querySelector(ref);

				// 태그가 유효할 경우
				if (tag)
				{
					mo.observe(tag, options);
				}
			}

			// DOM일 경우
			else
			{
				mo.observe(ref, options);
			}
		}

		return () =>
		{
			mo.disconnect();
		};
	}, [ ref, callback, options ]);
}
```

전체 코드는 위와 같다.



## CodeSandbox를 통한 예시

CodeSandbox로 간단한 예시를 구현했다.

<iframe src="https://codesandbox.io/embed/99dw64?view=split&module=%2Fsrc%2FApp.tsx&expanddevtools=1"
     style="width:100%; height: 1000px; border:0; border-radius: 4px; overflow:hidden;"
     title="MutationObserver"
     allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
     sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
   ></iframe>





# 마치며

이와 같이 `MutationObserver`를 활용하면 DOM의 변화를 능동적으로 감지할 수 있다.

간혹, React 컴포넌트에서 요소를 변경할 경우, 이를 타 컴포넌트에서 연관지어 추가적인 코드를 실행할 필요가 생기기도 한다. 이를 해결하기 위해 컴포넌트에 불필요한 타 컴포넌트 로직을 넣기도 한다.

`MutationObserver`를 활용하면 이를 분리하여 간단하게 구현할 수 있다.

남은 옵저버는 상대적으로 사용성이 낮은 것들이다. 그 중, 성능과 관련된 `PerformanceObserver`에 대해 다룰 예정이다.22:["markdown","posts/2024/06/24/observer-api-4","c"]
0:["BdsZLfvYMnov1WCE73aAL",[[["",{"children":[["markdown","posts/2024/06/24/observer-api-4","c"],{"children":["__PAGE__?{\"markdown\":[\"posts\",\"2024\",\"06\",\"24\",\"observer-api-4\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["markdown","posts/2024/06/24/observer-api-4","c"],{"children":["__PAGE__",{},[["$L1",["$","$L2",null,{"component":"main","data-component":"PageTemplate","children":[["$","$L3",null,{"title":"𝝅번째 알파카의 개발 낙서장","version":"5.0.0-beta11"}],[["$","$L4",null,{"src":"https://github.com/RWB0104/blog.itcode.dev/assets/50317129/c472262e-0b99-4a6f-836f-fc797bcf26d9","children":["$","$L2",null,{"className":"MarkdownScreenerTemplate_root__dpmgV","data-component":"BaseScreenerTemplate","height":"100%","position":"relative","width":"100%","children":[["$","$L5",null,{"alignItems":"center","height":"100%","justifyContent":"center","padding":2,"position":"relative","width":"100%","children":[["$","$L5",null,{"direction":"row","children":[["$","$L2",null,{"bgcolor":"dodgerblue","boxShadow":"0px 0px 5px black","height":"100%","width":5}],["$","$L5",null,{"color":"white","paddingLeft":2,"paddingRight":2,"children":[["$","$L6",null,{"className":"MarkdownScreenerTemplate_text__5_mNa","fontWeight":"bold","variant":"h5","children":"[Observer API 파헤치기] 4. MutationObserver"}],["$","$L6",null,{"className":"MarkdownScreenerTemplate_text__5_mNa","children":"⏰ 2024-06-24 (월) 02:18:32"}]]}]]}],["$","$L7",null,{"bottom":"10%","direction":"row","gap":4,"position":"absolute","shareData":{"text":"MutationObserver API는 DOM의 변화를 감지하는데 특화된 옵저버다. width나 height 같은 사이즈는 물론, class 같은 속성의 변화도 감지할 수 있다. 이 옵저버의 사용법을 알아보고, React에서 커스텀 훅을 통해 간편하게 사용해보자.","title":"[Observer API 파헤치기] 4. MutationObserver","url":"https://blog.itcode.dev/posts/2024/06/24/observer-api-4"}}]]}],["$","$L2",null,{"bottom":0,"left":0,"position":"absolute","width":"100%","children":["$","svg",null,{"className":"Wave_waves___Plcn","data-component":"Wave","height":80,"preserveAspectRatio":"none","shapeRendering":"auto","viewBox":"0 24 150 28","width":"100%","xmlns":"http://www.w3.org/2000/svg","children":[["$","defs",null,{"children":["$","path",null,{"d":"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z","id":"gentle-wave"}]}],["$","g",null,{"className":"Wave_parallax__AGFbj","children":[["$","use",null,{"fill":"$undefined","opacity":"0.7","x":"48","xlinkHref":"#gentle-wave","y":"0"}],["$","use",null,{"fill":"$undefined","opacity":"0.5","x":"48","xlinkHref":"#gentle-wave","y":"3"}],["$","use",null,{"fill":"$undefined","opacity":"0.3","x":"48","xlinkHref":"#gentle-wave","y":"5"}],["$","use",null,{"fill":"$undefined","x":"48","xlinkHref":"#gentle-wave","y":"7"}]]}]]}]}]]}]}],[["$","$L8",null,{"color":"dodgerblue"}],["$","$L9",null,{"children":["$","$L5",null,{"gap":4,"paddingTop":10,"children":[["$","$La",null,{"current":"/posts/2024/06/24/observer-api-4","groups":[{"title":"[Observer API 파헤치기] 4. MutationObserver","url":"/posts/2024/06/24/observer-api-4"},{"title":"[Observer API 파헤치기] 3. ResizeObserver","url":"/posts/2024/06/20/observer-api-3"},{"title":"[Observer API 파헤치기] 2. IntersectionObserver","url":"/posts/2024/06/14/observer-api-2"},{"title":"[Observer API 파헤치기] 1. Observer API","url":"/posts/2024/06/12/observer-api-1"}],"thumbnail":"https://github.com/RWB0104/blog.itcode.dev/assets/50317129/c472262e-0b99-4a6f-836f-fc797bcf26d9","title":"Observer API 파헤치기"}],["$","$Lb",null,{"list":[{"idx":"1.","level":1,"text":"MutationObserver"},{"idx":"1.1.","level":2,"text":"options"},{"idx":"1.1.1.","level":3,"text":"속성 필터 (attributeFilter)"},{"idx":"1.1.2.","level":3,"text":"이전 속성값 (attributeOldValue)"},{"idx":"1.1.3.","level":3,"text":"속성 변화 감지 여부 (attributes)"},{"idx":"1.1.4.","level":3,"text":"텍스트 노드 변화 감지 여부 (characterData)"},{"idx":"1.1.5.","level":3,"text":"이전 텍스트 노드 값 (characterDataOldValue)"},{"idx":"1.1.6.","level":3,"text":"자식 노드 변화 감지 여부 (childList)"},{"idx":"1.1.7.","level":3,"text":"하위 노드 변화 감지 여부 (subtree)"},{"idx":"1.2.","level":2,"text":"callback"},{"idx":"1.2.1.","level":3,"text":"추가된 노드 (addedNodes)"},{"idx":"1.2.2.","level":3,"text":"삭제된 노드 (removedNodes)"},{"idx":"1.2.3.","level":3,"text":"변경된 속성명 (attributeName)"},{"idx":"1.2.4.","level":3,"text":"변경된 속성 네임스페이스 (attributeNamespace)"},{"idx":"1.2.5.","level":3,"text":"변경된 태그의 다음 형제 태그 (nextSibling)"},{"idx":"1.2.6.","level":3,"text":"변경된 태그의 이전 형제 태그 (previousSibling)"},{"idx":"1.2.7.","level":3,"text":"변경 이전의 값 (oldValue)"},{"idx":"1.2.8.","level":3,"text":"이벤트 대상 (target)"},{"idx":"1.2.9.","level":3,"text":"이벤트 타입 (type)"},{"idx":"2.","level":1,"text":"React에서 커스텀 훅으로 간편하게 사용하기"},{"idx":"2.1.","level":2,"text":"전체 코드"},{"idx":"2.2.","level":2,"text":"CodeSandbox를 통한 예시"},{"idx":"3.","level":1,"text":"마치며"}]}],["$","$Lc",null,{"variant":"fullWidth"}],["$","$Ld",null,{"children":"$e"}],["$","$Lc",null,{"variant":"fullWidth"}],["$","$Lf",null,{}],["$","$L10",null,{"tags":["JavaScript","TypeScript","React","Observer API","MutationObserver"],"type":"posts"}],["$","$L5",null,{"alignItems":"center","data-component":"LabNameTag","width":"100%","children":["$","$L2",null,{"boxShadow":"0px 0px 10px #00000050","maxWidth":250,"width":"100%","children":["$","$L11",null,{"href":"https://itcode.dev","target":"_blank","children":["$","$L12",null,{"scale":1.1,"children":[["$","$L2",null,{"borderRadius":2,"className":"NameTag_tag__DZCHu","data-component":"NameTag","padding":1,"sx":{"background":"linear-gradient(45deg, #833AB4, #FD2B20, #fCAA43)"},"children":["$","$L5",null,{"borderRadius":2,"color":"white","gap":3,"padding":2,"children":[["$","$L2",null,{"className":"Tile_tile__czq9P","data-component":"Tile","overflow":"hidden","position":"relative","children":["$","$L2",null,{"height":"100%","left":0,"position":"absolute","top":0,"width":"100%","children":["$","$L13",null,{"src":"https://itcode.dev/logo.png"}]}]}],["$","$L2",null,{"borderTop":"1px solid white","width":"100%"}],["$","$L5",null,{"gap":1,"children":[["$","$L6",null,{"color":"inherit","fontWeight":"bold","children":"𝝅번째 알파카의 개발 연구소"}],["$","$L2",null,{"color":"inherit","width":"100%","children":["$","$L6",null,{"variant":"caption","children":"이 카드를 클릭하고 𝝅번째 알파카의 개발 연구소의 다양한 프로젝트를 확인해보세요!"}]}]]}]]}]}],["$","$L14",null,{}]]}]}]}]}],["$","$L15",null,{"next":"$undefined","prev":{"thumbnail":"https://github.com/RWB0104/blog.itcode.dev/assets/50317129/c472262e-0b99-4a6f-836f-fc797bcf26d9","title":"[Observer API 파헤치기] 3. ResizeObserver","url":"/posts/2024/06/20/observer-api-3"},"type":"posts"}],["$","$L5",null,{"alignItems":"center","justifyContent":"center","width":"100%","children":["$","$L12",null,{"children":["$","$L5",null,{"alignItems":"center","bgcolor":"lemonchiffon","borderRadius":1,"boxShadow":"0px 0px 10px #00000030","component":"div","data-component":"ThanksCard","direction":"row","gap":2,"padding":2,"children":[["$","$L16",null,{"iconName":"love-message-burst","width":100}],["$","$L5",null,{"children":[["$","$L6",null,{"color":"black","variant":"h6","gutterBottom":true,"children":"읽어주셔서 고마워요!"}],["$","$L6",null,{"color":"black","children":["도움이 되셨다면, ",["$","$L6",null,{"color":"hotpink","component":"span","fontWeight":"bold","children":"공감"}],"이나 ",["$","$L6",null,{"color":"dodgerblue","component":"span","fontWeight":"bold","children":"댓글"}],"을 달아주시는 건 어떤가요?"]}],["$","$L6",null,{"color":"black","children":"블로그 운영에 큰 힘이 됩니다."}]]}]]}]}]}],["$","$L7",null,{"direction":"row","gap":4,"iconColor":"inherit","justifyContent":"center","shareData":{"text":"MutationObserver API는 DOM의 변화를 감지하는데 특화된 옵저버다. width나 height 같은 사이즈는 물론, class 같은 속성의 변화도 감지할 수 있다. 이 옵저버의 사용법을 알아보고, React에서 커스텀 훅을 통해 간편하게 사용해보자.","title":"[Observer API 파헤치기] 4. MutationObserver","url":"/posts/2024/06/24/observer-api-4"}}],["$","$L17",null,{}],["$","$L5",null,{"alignItems":"center","children":["$","img",null,{"alt":"https://hits.seeyoufarm.com/api/count/incr/badge.svg?count_bg=%23484848&icon=react.svg&icon_color=dodgerblue&title=view&title_bg=%23242424&url=https%3A%2F%2Fblog.itcode.dev%2Fposts%2F2024%2F06%2F24%2Fobserver-api-4","data-component":"Hits","src":"https://hits.seeyoufarm.com/api/count/incr/badge.svg?count_bg=%23484848&icon=react.svg&icon_color=dodgerblue&title=view&title_bg=%23242424&url=https%3A%2F%2Fblog.itcode.dev%2Fposts%2F2024%2F06%2F24%2Fobserver-api-4"}]}]]}]}]]],["$","$L2",null,{"component":"footer","data-component":"Footer","marginTop":10,"children":[["$","$L2",null,{"position":"relative","children":[["$","$L18",null,{}],["$","$L2",null,{"bottom":-20,"className":"Footer_ship__VuMth","left":"10%","position":"absolute","children":["$","img",null,{"alt":"icon","height":100,"src":"https://cdn-icons-png.freepik.com/512/6643/6643562.png","width":100}]}],["$","$L2",null,{"bottom":0,"position":"absolute","width":"100%","children":["$","svg",null,{"className":"Wave_waves___Plcn","data-component":"Wave","height":40,"preserveAspectRatio":"none","shapeRendering":"auto","viewBox":"0 24 150 28","width":"100%","xmlns":"http://www.w3.org/2000/svg","children":[["$","defs",null,{"children":["$","path",null,{"d":"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z","id":"gentle-wave"}]}],["$","g",null,{"className":"Wave_parallax__AGFbj","children":[["$","use",null,{"fill":"#6fb1fc","opacity":"0.7","x":"48","xlinkHref":"#gentle-wave","y":"0"}],["$","use",null,{"fill":"#6fb1fc","opacity":"0.5","x":"48","xlinkHref":"#gentle-wave","y":"3"}],["$","use",null,{"fill":"#6fb1fc","opacity":"0.3","x":"48","xlinkHref":"#gentle-wave","y":"5"}],["$","use",null,{"fill":"#6fb1fc","x":"48","xlinkHref":"#gentle-wave","y":"7"}]]}]]}]}]]}],["$","$L2",null,{"children":["$","$L5",null,{"alignItems":"center","className":"FooterTemplate_footer__97G2c","color":"white","data-component":"FooterTemplate","gap":4,"padding":4,"paddingBottom":8,"paddingTop":8,"children":[["$","$L5",null,{"alignItems":"center","color":"white","children":[["$","$L6",null,{"className":"FooterTemplate_title__Samo8","fontWeight":"bold","variant":"h6","children":"𝝅번째 알파카의 개발 낙서장"}],["$","$L6",null,{"variant":"caption","children":"5.5.1"}]]}],["$","$L2",null,{"display":"grid","gap":2,"gridTemplateColumns":"1fr 1fr 1fr","children":[["$","$L11",null,{"data-component":"FooterLinkButton","href":"https://itcode.dev","target":"_blank","children":["$","$L19",null,{"className":"SymbolicButton_button__Yg0O3","data-component":"SymbolicButton","children":["$","$L5",null,{"alignItems":"center","bgcolor":"$undefined","border":"1px solid","borderColor":"white","borderRadius":"50%","boxShadow":"0px 0px 5px #00000050","height":40,"justifyContent":"center","padding":0.5,"width":40,"children":["$","img",null,{"alt":"itcode.dev","height":"100%","src":"https://itcode.dev/logo-transparent.png","width":"100%"}]}]}]}],["$","$L11",null,{"data-component":"FooterLinkButton","href":"https://github.com/RWB0104","target":"_blank","children":["$","$L19",null,{"className":"SymbolicButton_button__Yg0O3","data-component":"SymbolicButton","children":["$","$L5",null,{"alignItems":"center","bgcolor":"$undefined","border":"1px solid","borderColor":"white","borderRadius":"50%","boxShadow":"0px 0px 5px #00000050","height":40,"justifyContent":"center","padding":0.5,"width":40,"children":["$","$L1a",null,{}]}]}]}],["$","$L11",null,{"data-component":"FooterLinkButton","href":"mailto:psj2716@gmail.com","target":"_blank","children":["$","$L19",null,{"className":"SymbolicButton_button__Yg0O3","data-component":"SymbolicButton","children":["$","$L5",null,{"alignItems":"center","bgcolor":"$undefined","border":"1px solid","borderColor":"white","borderRadius":"50%","boxShadow":"0px 0px 5px #00000050","height":40,"justifyContent":"center","padding":0.5,"width":40,"children":["$","$L1b",null,{}]}]}]}],["$","$L11",null,{"data-component":"FooterLinkButton","href":"https://www.linkedin.com/in/itcode","target":"_blank","children":["$","$L19",null,{"className":"SymbolicButton_button__Yg0O3","data-component":"SymbolicButton","children":["$","$L5",null,{"alignItems":"center","bgcolor":"$undefined","border":"1px solid","borderColor":"white","borderRadius":"50%","boxShadow":"0px 0px 5px #00000050","height":40,"justifyContent":"center","padding":0.5,"width":40,"children":["$","$L1c",null,{}]}]}]}],["$","$L11",null,{"data-component":"FooterLinkButton","href":"/sitemap.xml","target":"_blank","children":["$","$L19",null,{"className":"SymbolicButton_button__Yg0O3","data-component":"SymbolicButton","children":["$","$L5",null,{"alignItems":"center","bgcolor":"$undefined","border":"1px solid","borderColor":"white","borderRadius":"50%","boxShadow":"0px 0px 5px #00000050","height":40,"justifyContent":"center","padding":0.5,"width":40,"children":["$","$L1d",null,{}]}]}]}],["$","$L11",null,{"data-component":"FooterLinkButton","href":"/rss.xml","target":"_blank","children":["$","$L19",null,{"className":"SymbolicButton_button__Yg0O3","data-component":"SymbolicButton","children":["$","$L5",null,{"alignItems":"center","bgcolor":"$undefined","border":"1px solid","borderColor":"white","borderRadius":"50%","boxShadow":"0px 0px 5px #00000050","height":40,"justifyContent":"center","padding":0.5,"width":40,"children":["$","$L1e",null,{}]}]}]}]]}],["$","$L5",null,{"alignItems":"center","color":"white","children":[["$","$L5",null,{"alignItems":"center","direction":"row","gap":0.5,"children":[["$","$L1f",null,{"fontSize":"inherit","htmlColor":"darkblue"}],["$","$L6",null,{"variant":"caption","children":"Developed by RWB since 2021.05"}]]}],["$","$L5",null,{"alignItems":"center","direction":"row","gap":0.5,"children":[["$","$L20",null,{"fontSize":"inherit","htmlColor":"crimson"}],["$","$L6",null,{"variant":"caption","children":"5th upgraded at 2024.05"}]]}]]}],["$","img",null,{"alt":"https://hits.seeyoufarm.com/api/count/incr/badge.svg?count_bg=%23484848&icon=react.svg&icon_color=dodgerblue&title=view&title_bg=%23242424&url=https%3A%2F%2Fblog.itcode.dev","data-component":"Hits","src":"https://hits.seeyoufarm.com/api/count/incr/badge.svg?count_bg=%23484848&icon=react.svg&icon_color=dodgerblue&title=view&title_bg=%23242424&url=https%3A%2F%2Fblog.itcode.dev"}]]}]}]]}]]}]],null],null]},["$","$L21",null,{"parallelRouterKey":"children","segmentPath":["children","$22","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L23",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/5253784961ea69b7.css","precedence":"next","crossOrigin":"$undefined"}]]}],null]},[["$","html",null,{"lang":"ko","children":[["$","head",null,{"children":[["$","script",null,{"crossOrigin":"anonymous","src":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-5522045122225064","async":true}],["$","meta",null,{"content":"ca-pub-5522045122225064","name":"google-adsense-account"}]]}],["$","body",null,{"children":["$","$24",null,{"children":["$","$L25",null,{"gaKey":"G-7QYWYNZ90R","children":["$","$L26",null,{"children":["$","$L27",null,{"children":[["$","$L21",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L23",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}],["$","$L28",null,{}],["$","$L29",null,{}]]}]}]}]}]}]]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/ca108af39b388357.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/bc8633ce02ba4b2d.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","2",{"rel":"stylesheet","href":"/_next/static/css/8b1f4b7ed2fe404c.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","3",{"rel":"stylesheet","href":"/_next/static/css/d880172cf76a61a7.css","precedence":"next","crossOrigin":"$undefined"}]],"$L2a"]]]]
2a:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"[Observer API 파헤치기] 4. MutationObserver - 𝝅번째 알파카의 개발 낙서장"}],["$","meta","3",{"name":"description","content":"MutationObserver API는 DOM의 변화를 감지하는데 특화된 옵저버다. width나 height 같은 사이즈는 물론, class 같은 속성의 변화도 감지할 수 있다. 이 옵저버의 사용법을 알아보고, React에서 커스텀 훅을 통해 간편하게 사용해보자."}],["$","meta","4",{"name":"application-name","content":"𝝅번째 알파카의 개발 낙서장"}],["$","link","5",{"rel":"author","href":"https://github.com/RWB0104"}],["$","meta","6",{"name":"author","content":"Kapoo"}],["$","link","7",{"rel":"author","href":"https://www.linkedin.com/in/itcode"}],["$","meta","8",{"name":"author","content":"RWB"}],["$","link","9",{"rel":"manifest","href":"/manifest.webmanifest","crossOrigin":"use-credentials"}],["$","meta","10",{"name":"generator","content":"Next.js"}],["$","meta","11",{"name":"keywords","content":"JavaScript,TypeScript,React,Observer API,MutationObserver"}],["$","meta","12",{"name":"creator","content":"RWB"}],["$","meta","13",{"name":"publisher","content":"GitHub Pages"}],["$","meta","14",{"property":"og:title","content":"[Observer API 파헤치기] 4. MutationObserver - 𝝅번째 알파카의 개발 낙서장"}],["$","meta","15",{"property":"og:description","content":"MutationObserver API는 DOM의 변화를 감지하는데 특화된 옵저버다. width나 height 같은 사이즈는 물론, class 같은 속성의 변화도 감지할 수 있다. 이 옵저버의 사용법을 알아보고, React에서 커스텀 훅을 통해 간편하게 사용해보자."}],["$","meta","16",{"property":"og:url","content":"https://blog.itcode.dev/posts/2024/06/24/observer-api-4"}],["$","meta","17",{"property":"og:site_name","content":"𝝅번째 알파카의 개발 낙서장"}],["$","meta","18",{"property":"og:locale","content":"ko-KR"}],["$","meta","19",{"property":"og:image","content":"https://github.com/RWB0104/blog.itcode.dev/assets/50317129/c472262e-0b99-4a6f-836f-fc797bcf26d9"}],["$","meta","20",{"property":"og:type","content":"website"}],["$","meta","21",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","22",{"name":"twitter:title","content":"[Observer API 파헤치기] 4. MutationObserver - 𝝅번째 알파카의 개발 낙서장"}],["$","meta","23",{"name":"twitter:description","content":"MutationObserver API는 DOM의 변화를 감지하는데 특화된 옵저버다. width나 height 같은 사이즈는 물론, class 같은 속성의 변화도 감지할 수 있다. 이 옵저버의 사용법을 알아보고, React에서 커스텀 훅을 통해 간편하게 사용해보자."}],["$","meta","24",{"name":"twitter:image","content":"https://github.com/RWB0104/blog.itcode.dev/assets/50317129/c472262e-0b99-4a6f-836f-fc797bcf26d9"}],["$","link","25",{"rel":"icon","href":"/favicon.ico"}],["$","link","26",{"rel":"shortcut icon","href":"/favicon.ico"}],["$","link","27",{"rel":"apple-touch-icon","href":"/favicon.ico"}],["$","meta","28",{"name":"next-size-adjust"}]]
1:null
