2:I[31253,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-89b774ca72478c0b.js","979","static/chunks/app/page-871c05277f892fb0.js"],""]
3:I[15441,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-89b774ca72478c0b.js","979","static/chunks/app/page-871c05277f892fb0.js"],"default"]
4:I[75713,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-89b774ca72478c0b.js","979","static/chunks/app/page-871c05277f892fb0.js"],"default"]
5:I[36032,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-89b774ca72478c0b.js","979","static/chunks/app/page-871c05277f892fb0.js"],"default"]
6:I[4816,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-89b774ca72478c0b.js","979","static/chunks/app/page-871c05277f892fb0.js"],""]
7:I[67425,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","377","static/chunks/377-5459304f76782ae9.js","48","static/chunks/48-89b774ca72478c0b.js","78","static/chunks/app/%5B...markdown%5D/page-e2093a6e5fc3e106.js"],"default"]
8:I[28676,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","377","static/chunks/377-5459304f76782ae9.js","48","static/chunks/48-89b774ca72478c0b.js","78","static/chunks/app/%5B...markdown%5D/page-e2093a6e5fc3e106.js"],"default"]
9:I[12168,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-89b774ca72478c0b.js","979","static/chunks/app/page-871c05277f892fb0.js"],""]
a:I[25737,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","377","static/chunks/377-5459304f76782ae9.js","48","static/chunks/48-89b774ca72478c0b.js","78","static/chunks/app/%5B...markdown%5D/page-e2093a6e5fc3e106.js"],"default"]
b:I[50979,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","377","static/chunks/377-5459304f76782ae9.js","48","static/chunks/48-89b774ca72478c0b.js","78","static/chunks/app/%5B...markdown%5D/page-e2093a6e5fc3e106.js"],"default"]
c:I[66560,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-89b774ca72478c0b.js","979","static/chunks/app/page-871c05277f892fb0.js"],""]
d:I[29936,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","377","static/chunks/377-5459304f76782ae9.js","48","static/chunks/48-89b774ca72478c0b.js","78","static/chunks/app/%5B...markdown%5D/page-e2093a6e5fc3e106.js"],"default"]
f:I[64678,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","377","static/chunks/377-5459304f76782ae9.js","48","static/chunks/48-89b774ca72478c0b.js","78","static/chunks/app/%5B...markdown%5D/page-e2093a6e5fc3e106.js"],"default"]
10:I[89791,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","377","static/chunks/377-5459304f76782ae9.js","48","static/chunks/48-89b774ca72478c0b.js","78","static/chunks/app/%5B...markdown%5D/page-e2093a6e5fc3e106.js"],"default"]
11:I[5760,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-89b774ca72478c0b.js","979","static/chunks/app/page-871c05277f892fb0.js"],""]
12:I[98918,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-89b774ca72478c0b.js","979","static/chunks/app/page-871c05277f892fb0.js"],"default"]
13:I[21055,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-89b774ca72478c0b.js","979","static/chunks/app/page-871c05277f892fb0.js"],"default"]
14:I[44271,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-89b774ca72478c0b.js","979","static/chunks/app/page-871c05277f892fb0.js"],"default"]
15:I[95534,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","377","static/chunks/377-5459304f76782ae9.js","48","static/chunks/48-89b774ca72478c0b.js","78","static/chunks/app/%5B...markdown%5D/page-e2093a6e5fc3e106.js"],"default"]
16:I[11494,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","377","static/chunks/377-5459304f76782ae9.js","48","static/chunks/48-89b774ca72478c0b.js","78","static/chunks/app/%5B...markdown%5D/page-e2093a6e5fc3e106.js"],"default"]
17:I[35559,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","377","static/chunks/377-5459304f76782ae9.js","48","static/chunks/48-89b774ca72478c0b.js","78","static/chunks/app/%5B...markdown%5D/page-e2093a6e5fc3e106.js"],"default"]
18:I[43439,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-89b774ca72478c0b.js","979","static/chunks/app/page-871c05277f892fb0.js"],"default"]
19:I[20140,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-89b774ca72478c0b.js","979","static/chunks/app/page-871c05277f892fb0.js"],""]
1a:I[42019,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-89b774ca72478c0b.js","979","static/chunks/app/page-871c05277f892fb0.js"],""]
1b:I[36139,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-89b774ca72478c0b.js","979","static/chunks/app/page-871c05277f892fb0.js"],""]
1c:I[94634,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-89b774ca72478c0b.js","979","static/chunks/app/page-871c05277f892fb0.js"],""]
1d:I[3812,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-89b774ca72478c0b.js","979","static/chunks/app/page-871c05277f892fb0.js"],""]
1e:I[20015,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-89b774ca72478c0b.js","979","static/chunks/app/page-871c05277f892fb0.js"],""]
1f:I[91417,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-89b774ca72478c0b.js","979","static/chunks/app/page-871c05277f892fb0.js"],""]
20:I[17186,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-89b774ca72478c0b.js","979","static/chunks/app/page-871c05277f892fb0.js"],""]
21:I[80560,[],""]
23:I[3602,[],""]
24:"$Sreact.suspense"
25:I[89696,["128","static/chunks/128-f15a9902e71a0cfb.js","622","static/chunks/622-c69f910e2c9609c0.js","965","static/chunks/965-368bab8011421292.js","185","static/chunks/app/layout-41c20b5842d6270b.js"],"default"]
26:I[53327,["128","static/chunks/128-f15a9902e71a0cfb.js","622","static/chunks/622-c69f910e2c9609c0.js","965","static/chunks/965-368bab8011421292.js","185","static/chunks/app/layout-41c20b5842d6270b.js"],"default"]
27:I[31798,["128","static/chunks/128-f15a9902e71a0cfb.js","622","static/chunks/622-c69f910e2c9609c0.js","965","static/chunks/965-368bab8011421292.js","185","static/chunks/app/layout-41c20b5842d6270b.js"],"default"]
28:I[90085,["128","static/chunks/128-f15a9902e71a0cfb.js","622","static/chunks/622-c69f910e2c9609c0.js","965","static/chunks/965-368bab8011421292.js","185","static/chunks/app/layout-41c20b5842d6270b.js"],"default"]
29:I[29459,["128","static/chunks/128-f15a9902e71a0cfb.js","622","static/chunks/622-c69f910e2c9609c0.js","965","static/chunks/965-368bab8011421292.js","185","static/chunks/app/layout-41c20b5842d6270b.js"],"default"]
e:T2d33,
# IntersectionObserver

![null](https://github.com/RWB0104/blog.itcode.dev/assets/50317129/3d24f152-508a-4c9b-a373-b83e8d5405ac)

`IntersectionObserver`는 DOM과 뷰포트를 다루는 데 특화된 옵저버다. DOM이 뷰포트와 교차하는지 여부를 감지하여 DOM이 실제 사용자 화면에 보여지는지, 아니면 숨겨졌는지 구분할 수 있다.

``` typescript
const io = new IntersectionObserver(callback, options);
```

위 코드로 사용할 수 있으며, `callback`, `options` 두 가지 파라미터를 받는다.





## callback

`IntersectionObserver`의 콜백 파라미터는 요소가 뷰포트에 보이거나, 보이지 않을 때 동작하는 이벤트 메서드다.

`IntersectionObserverCallback` 타입으로 선언되어 있으며, 코드로 표현하면 아래와 같다.

``` typescript
const io = new IntersectionObserver((entries, observer) => {});
```



### IntersectionObserverEntry

`entries`는 `IntersectionObserverEntry[]` 타입을 갖는다. `IntersectionObserver`에 등록된 요소의 이벤트 정보를 배열 형태로 반환한다.

배열 타입인 이유는 `IntersectionObserver`에 여러 DOM을 등록할 수 있기 때문이다.



#### 교차 여부 (isIntersecting)

![isIntersecting](https://github.com/RWB0104/blog.itcode.dev/assets/50317129/a7a3fd96-e1e6-4056-816f-7d314cb0b720)

`isIntersecting` 속성은 교차 여부를 `boolean` 값으로 반환해준다. 지정된 옵션에 따라 DOM에 보여질 경우 `true`, 아닐 경우 `false`를 반환한다.



#### 대상 DOM (target)

![target](https://github.com/RWB0104/blog.itcode.dev/assets/50317129/a5ccfaf1-a153-4c4d-b7e1-fb24ca95aca1)

이벤트 속성에서 흔히 보는 `target` 속성과 동일하게, 이벤트가 발생한 자신을 반환한다.



#### 교차 비율 (intersectionRatio)

![intersectionRatio](https://github.com/RWB0104/blog.itcode.dev/assets/50317129/b326fef0-4576-4a64-9663-a7a71868ccc3)

DOM이 교차된 비율을 `number`로 반환해준다. 추후 설명할 `options`에서 지정하는 `threshold`와 밀접한 연관이 있다.

`threshold`에 배열을 지정하여 다수의 비율을 지정했을 경우, 이 값을 통해 비율을 특정할 수 있다.



#### 루트 DOM (rootBounds)

![rootBounds](https://github.com/RWB0104/blog.itcode.dev/assets/50317129/f3e5cd7d-6540-490d-a93d-f73e9b85bb78)

뷰포트의 기준인 DOM을 `Element` 형태로 반환해준다. `options`에서 `root` 속성을 지정하지 않았다면 `null`을 반환한다.



#### 이벤트 발생 시간 (time)

이벤트가 발생한 시간을 `number` 값으로 반환해준다.



#### 대상 DOM의 바운더리 (boundingClientRect)

![time](https://github.com/RWB0104/blog.itcode.dev/assets/50317129/359ed66a-deb4-4551-9c1f-d094000eaa39)

대상 DOM의 바운더리 정보를 반환해준다. `x`, `y`, `width`, `height` 정보를 얻을 수 있다.



#### 대상 DOM의 교차 바운더리 (intersectionRect)

![intersectionRect](https://github.com/RWB0104/blog.itcode.dev/assets/50317129/7a669bf1-6be0-485b-bb83-ea5ab6fb9720)

대상 DOM과 뷰포트의 교차 영역에 대한 바운더리 정보를 반환해준다. `boundingClientRect`와 마찬가지로 `x`, `y`, `width`, `height` 정보를 얻을 수 있지만, 뷰포트와 교차된 영역에 한정된다는 차이점이 있다.



### observer

`IntersectionObserver` 객체를 반환해준다. 이를 통해 콜백 메서드 내에서도 `IntersectionObserver`를 연쇄적으로 다룰 수 있다.



## options

`options` 속성을 전달하여 `IntersectionObserver`의 세부 동작을 제어할 수 있다.



### 루트 DOM (root)

![root](https://github.com/RWB0104/blog.itcode.dev/assets/50317129/b9cd1166-b4f3-498a-a79a-380aff2016f6)

뷰포트의 기준이 되는 루트 DOM을 지정할 수 있다. 만약 지정하지 않을 경우 현재 보고있는 브라우저의 뷰포트가 지정된다.



### 루트 DOM의 margin (rootMargin)

![rootMargin](https://github.com/RWB0104/blog.itcode.dev/assets/50317129/a4f0f796-4c32-4ade-8a3a-d5c9ba1fcd14)

루트 DOM을 기준으로 교차 이벤트가 발생하는데, `rootMargin`을 통해 감지 영역을 조절할 수 있다.

예를 들면, `root`가 뷰포트일 때, `rootMargin`을 `100px`로 지정하면 뷰포트보다 `100px` 먼 곳에서부터 교차 이벤트가 발생한다.

이를 통해, 미리 이벤트를 발생시키는 식의 활용이 가능하다.

CSS의 `margin` 속성과 동일하게 `y x` 혹은 `top right bottom left` 방식으로 지정하는 것도 가능하다.



### 대상 DOM의 교차 비율 (threshold)

![threshold](https://github.com/RWB0104/blog.itcode.dev/assets/50317129/70745076-6c41-4955-9385-7818b6ad34f3)

교차 이벤트가 발생하기 위한 교차 비율을 `number` 혹은 `number[]`로 지정하며, 요소는 `0` ~ `1` 사이의 실수를 가진다. 예를들어, `0.2`는 교차비율이 `20%`일 경우 교차 이벤트를 발생시킨다.

배열로 지정할 경우, 지정한 비율마다 이벤트가 발생한다. 즉 `[ 0.2, 0.5, 0.8 ]`일 경우, `20%`, `50%`, `80%` 교차 시 각각 이벤트가 발생하는 식이다.





# React에서 커스텀 훅으로 간편하게 사용하기

`IntersectionObserver`를 사용하다보면, 적절한 생명주기에 맞춰 DOM을 등록하는 것이 생각보다 번거로움을 알 수 있다.

커스텀 훅을 통해 `IntersectionObserver`를 더욱 쉽게 사용해보자.

``` typescript
export function useIntersectionObserver(): void
{
  //
}
```

위와 같이 `useIntersectionObserver`라는 메서드를 정의해보자.

`useIntersectionObserver`를 사용하기 위해선 아래와 같은 세 가지 요소가 필요하다.

1. 대상 DOM
2. 콜백 메서드
3. 옵션

위 세 요소를 파라미터로 정의하자. 1번의 경우, 일반적으로 `HTMLElement`가 필요하지만, 해당 훅에서는 `HTMLElement` 타입 뿐만 아니라, `string`을 받아 `#id`, `.class`와 같은 선택자로 태그를 활용할 수 있도록 만들 것이다.

``` typescript
import { useEffect } from "react";

export type UseIntersectionObserverCallback = (
  entry: IntersectionObserverEntry
) => void;

/**
 * IntersectionObserver 적용 훅 메서드
 *
 * @param {Element | string | null} ref: Element
 * @param {UseIntersectionObserverCallback} callback: 콜백 메서드
 * @param {IntersectionObserverInit} options: 옵션
 */
export function useIntersectionObserver(
  ref: Element | string | null,
  callback: UseIntersectionObserverCallback,
  options?: IntersectionObserverInit
): void
{
  //
}
```

파라미터의 정의는 위와 같다. 이후 `IntersectionObserver`을 선언하고 콜백 메서드와 옵션을 할당한다.

``` typescript
import { useEffect } from "react";

export type UseIntersectionObserverCallback = (
  entry: IntersectionObserverEntry
) => void;

/**
 * IntersectionObserver 적용 훅 메서드
 *
 * @param {Element | string | null} ref: Element
 * @param {UseIntersectionObserverCallback} callback: 콜백 메서드
 * @param {IntersectionObserverInit} options: 옵션
 */
export function useIntersectionObserver(
  ref: Element | string | null,
  callback: UseIntersectionObserverCallback,
  options?: IntersectionObserverInit
): void
{
  useEffect(() => {
    const io = new IntersectionObserver((entries) => {
      entries.forEach(callback);
    }, options);
  }, [ref, callback, options]);
}
```

위와 같이 `IntersectionObserver`을 초기화하여 `io` 변수로 할당한다.

이후 `ref`로 지정한 DOM을 할당한다.

`ref`는 세 가지 상태에 따라 아래와 같은 분기를 거친다.

- `null`일 경우 -> 패스한다.
- `string`일 경우 -> `document.querySelector` 메서드로 태그를 선택한 뒤, 해당 태그를 등록한다.
- `HTMLElement`일 경우 -> 이미 `Element`이므로, 즉시 등록한다.

`typeof ref === "string"` 구문을 통해 `ref`가 문자열인지를 판별하여 구현했다.

`io.observe()` 메서드를 통해 태그를 등록할 수 있다.

``` typescript
import { useEffect } from "react";

export type UseIntersectionObserverCallback = (
  entry: IntersectionObserverEntry
) => void;

/**
 * IntersectionObserver 적용 훅 메서드
 *
 * @param {Element | string | null} ref: Element
 * @param {UseIntersectionObserverCallback} callback: 콜백 메서드
 * @param {IntersectionObserverInit} options: 옵션
 */
export function useIntersectionObserver(
  ref: Element | string | null,
  callback: UseIntersectionObserverCallback,
  options?: IntersectionObserverInit
): void
{
  useEffect(() => {
    const io = new IntersectionObserver((entries) => {
      entries.forEach(callback);
    }, options);

    // DOM이 유효할 경우
    if (ref) {
      // ref가 문자열일 경우
      if (typeof ref === "string") {
        const tag = document.querySelector(ref);

        // 태그가 유효할 경우
        if (tag) {
          io.observe(tag);
        }
      }

      // DOM일 경우
      else {
        io.observe(ref);
      }
    }
  }, [ref, callback, options]);
}
```

마지막으로, 컴포넌트가 렌더링 될 때마다 `IntersectionObserver`의 등록이 중첩되지 않도록, 초기화 코드를 넣어준다.

`io.disconnect()` 메서드를 통해 `IntersectionObserver`를 제거할 수 있다.





## 전체 코드

``` typescript
import { useEffect } from "react";

export type UseIntersectionObserverCallback = (
  entry: IntersectionObserverEntry
) => void;

/**
 * IntersectionObserver 적용 훅 메서드
 *
 * @param {Element | string | null} ref: Element
 * @param {UseIntersectionObserverCallback} callback: 콜백 메서드
 * @param {IntersectionObserverInit} options: 옵션
 */
export function useIntersectionObserver(
  ref: Element | string | null,
  callback: UseIntersectionObserverCallback,
  options?: IntersectionObserverInit
): void
{
  useEffect(() => {
    const io = new IntersectionObserver((entries) => {
      entries.forEach(callback);
    }, options);

    // DOM이 유효할 경우
    if (ref) {
      // ref가 문자열일 경우
      if (typeof ref === "string") {
        const tag = document.querySelector(ref);

        // 태그가 유효할 경우
        if (tag) {
          io.observe(tag);
        }
      }

      // DOM일 경우
      else {
        io.observe(ref);
      }
    }

    return () => {
      io.disconnect();
    };
  }, [ref, callback, options]);
}
```

전체 코드는 위와 같다.



## CodeSandbox를 통한 예시

CodeSandbox로 간단한 예시를 구현했다. CodeSandbox의 렌더링 방식 때문인지, `rootMargin`은 제대로 동작하지 않는 듯하다.

<iframe src="https://codesandbox.io/embed/rqm4zk?&module=%2Fsrc%2Fobserver-hook.ts&expanddevtools=1&editorsize=50&fontsize=14"
     style="width:100%; height: 1000px; border:0; border-radius: 4px; overflow:hidden;"
     title="IntersectionObserver"
     allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
     sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
   ></iframe>





# 마치며

이와 같이 `IntersectionObserver`를 활용하면 DOM의 뷰포트 관련 요소를 쉽게 다룰 수 있다.

이 API는 인피니티 스크롤, 애니매이션 동작 트리거 등, 기존의 Event Driven으로 구현하기 복잡한 기능을 쉽게 개발할 수 있다.

다음 장에선 `ResizeObserver`에 대해 다뤄보자.22:["markdown","posts/2024/06/14/observer-api-2","c"]
0:["ZdPyf3uVF9Stga3XXstxS",[[["",{"children":[["markdown","posts/2024/06/14/observer-api-2","c"],{"children":["__PAGE__?{\"markdown\":[\"posts\",\"2024\",\"06\",\"14\",\"observer-api-2\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["markdown","posts/2024/06/14/observer-api-2","c"],{"children":["__PAGE__",{},[["$L1",["$","$L2",null,{"component":"main","data-component":"PageTemplate","children":[["$","$L3",null,{"title":"𝝅번째 알파카의 개발 낙서장","version":"5.8.1"}],[["$","$L4",null,{"src":"https://github.com/RWB0104/blog.itcode.dev/assets/50317129/c472262e-0b99-4a6f-836f-fc797bcf26d9","children":["$","$L2",null,{"className":"MarkdownScreenerTemplate_root__dpmgV","data-component":"BaseScreenerTemplate","height":"100%","position":"relative","width":"100%","children":[["$","$L5",null,{"alignItems":"center","height":"100%","justifyContent":"center","padding":2,"position":"relative","width":"100%","children":[["$","$L5",null,{"direction":"row","children":[["$","$L2",null,{"bgcolor":"dodgerblue","boxShadow":"0px 0px 5px black","height":"100%","width":5}],["$","$L5",null,{"color":"white","paddingLeft":2,"paddingRight":2,"children":[["$","$L6",null,{"className":"MarkdownScreenerTemplate_text__5_mNa","fontWeight":"bold","variant":"h5","children":"[Observer API 파헤치기] 2. IntersectionObserver"}],["$","$L6",null,{"className":"MarkdownScreenerTemplate_text__5_mNa","children":"⏰ 2024-06-14 (금) 01:37:29"}]]}]]}],["$","$L7",null,{"bottom":"10%","direction":"row","gap":4,"position":"absolute","shareData":{"text":"IntersectionObserver API은 DOM과 뷰포트를 다루는 데 특화된 옵저버다. 이 옵저버의 사용법을 알아보고, React에서 커스텀 훅을 통해 간편하게 사용해보자.","title":"[Observer API 파헤치기] 2. IntersectionObserver","url":"https://blog.itcode.dev/posts/2024/06/14/observer-api-2"}}]]}],["$","$L2",null,{"bottom":0,"left":0,"position":"absolute","width":"100%","children":["$","svg",null,{"className":"Wave_waves___Plcn","data-component":"Wave","height":80,"preserveAspectRatio":"none","shapeRendering":"auto","viewBox":"0 24 150 28","width":"100%","xmlns":"http://www.w3.org/2000/svg","children":[["$","defs",null,{"children":["$","path",null,{"d":"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z","id":"gentle-wave"}]}],["$","g",null,{"className":"Wave_parallax__AGFbj","children":[["$","use",null,{"fill":"$undefined","opacity":"0.7","x":"48","xlinkHref":"#gentle-wave","y":"0"}],["$","use",null,{"fill":"$undefined","opacity":"0.5","x":"48","xlinkHref":"#gentle-wave","y":"3"}],["$","use",null,{"fill":"$undefined","opacity":"0.3","x":"48","xlinkHref":"#gentle-wave","y":"5"}],["$","use",null,{"fill":"$undefined","x":"48","xlinkHref":"#gentle-wave","y":"7"}]]}]]}]}]]}]}],[["$","$L8",null,{"color":"dodgerblue"}],["$","$L9",null,{"children":["$","$L5",null,{"gap":4,"paddingTop":10,"children":[["$","$La",null,{"current":"/posts/2024/06/14/observer-api-2","groups":[{"title":"[Observer API 파헤치기] 6. ReportingObserver","url":"/posts/2024/06/30/observer-api-6"},{"title":"[Observer API 파헤치기] 5. PerformanceObserver","url":"/posts/2024/06/27/observer-api-5"},{"title":"[Observer API 파헤치기] 4. MutationObserver","url":"/posts/2024/06/24/observer-api-4"},{"title":"[Observer API 파헤치기] 3. ResizeObserver","url":"/posts/2024/06/20/observer-api-3"},{"title":"[Observer API 파헤치기] 2. IntersectionObserver","url":"/posts/2024/06/14/observer-api-2"},{"title":"[Observer API 파헤치기] 1. Observer API","url":"/posts/2024/06/12/observer-api-1"}],"thumbnail":"https://github.com/RWB0104/blog.itcode.dev/assets/50317129/c472262e-0b99-4a6f-836f-fc797bcf26d9","title":"Observer API 파헤치기"}],["$","$Lb",null,{"list":[{"idx":"1.","level":1,"text":"IntersectionObserver"},{"idx":"1.1.","level":2,"text":"callback"},{"idx":"1.1.1.","level":3,"text":"IntersectionObserverEntry"},{"idx":"1.1.1.1.","level":4,"text":"교차 여부 (isIntersecting)"},{"idx":"1.1.1.2.","level":4,"text":"대상 DOM (target)"},{"idx":"1.1.1.3.","level":4,"text":"교차 비율 (intersectionRatio)"},{"idx":"1.1.1.4.","level":4,"text":"루트 DOM (rootBounds)"},{"idx":"1.1.1.5.","level":4,"text":"이벤트 발생 시간 (time)"},{"idx":"1.1.1.6.","level":4,"text":"대상 DOM의 바운더리 (boundingClientRect)"},{"idx":"1.1.1.7.","level":4,"text":"대상 DOM의 교차 바운더리 (intersectionRect)"},{"idx":"1.1.2.","level":3,"text":"observer"},{"idx":"1.2.","level":2,"text":"options"},{"idx":"1.2.1.","level":3,"text":"루트 DOM (root)"},{"idx":"1.2.2.","level":3,"text":"루트 DOM의 margin (rootMargin)"},{"idx":"1.2.3.","level":3,"text":"대상 DOM의 교차 비율 (threshold)"},{"idx":"2.","level":1,"text":"React에서 커스텀 훅으로 간편하게 사용하기"},{"idx":"2.1.","level":2,"text":"전체 코드"},{"idx":"2.2.","level":2,"text":"CodeSandbox를 통한 예시"},{"idx":"3.","level":1,"text":"마치며"}]}],["$","$Lc",null,{"variant":"fullWidth"}],["$","$Ld",null,{"children":"$e"}],["$","$Lc",null,{"variant":"fullWidth"}],["$","$Lf",null,{}],["$","$L10",null,{"tags":["JavaScript","TypeScript","React","Observer API","IntersectionObserver"],"type":"posts"}],["$","$L5",null,{"alignItems":"center","data-component":"LabNameTag","width":"100%","children":["$","$L2",null,{"boxShadow":"0px 0px 10px #00000050","maxWidth":250,"width":"100%","children":["$","$L11",null,{"href":"https://itcode.dev","target":"_blank","children":["$","$L12",null,{"scale":1.1,"children":[["$","$L2",null,{"borderRadius":2,"className":"NameTag_tag__DZCHu","data-component":"NameTag","padding":1,"sx":{"background":"linear-gradient(45deg, #833AB4, #FD2B20, #fCAA43)"},"children":["$","$L5",null,{"borderRadius":2,"color":"white","gap":3,"padding":2,"children":[["$","$L2",null,{"className":"Tile_tile__czq9P","data-component":"Tile","overflow":"hidden","position":"relative","children":["$","$L2",null,{"height":"100%","left":0,"position":"absolute","top":0,"width":"100%","children":["$","$L13",null,{"src":"https://itcode.dev/logo.png"}]}]}],["$","$L2",null,{"borderTop":"1px solid white","width":"100%"}],["$","$L5",null,{"gap":1,"children":[["$","$L6",null,{"color":"inherit","fontWeight":"bold","children":"𝝅번째 알파카의 개발 연구소"}],["$","$L2",null,{"color":"inherit","width":"100%","children":["$","$L6",null,{"variant":"caption","children":"이 카드를 클릭하고 𝝅번째 알파카의 개발 연구소의 다양한 프로젝트를 확인해보세요!"}]}]]}]]}]}],["$","$L14",null,{}]]}]}]}]}],["$","$L15",null,{"next":{"thumbnail":"https://github.com/RWB0104/blog.itcode.dev/assets/50317129/c472262e-0b99-4a6f-836f-fc797bcf26d9","title":"[Observer API 파헤치기] 3. ResizeObserver","url":"/posts/2024/06/20/observer-api-3"},"prev":{"thumbnail":"https://github.com/RWB0104/blog.itcode.dev/assets/50317129/c472262e-0b99-4a6f-836f-fc797bcf26d9","title":"[Observer API 파헤치기] 1. Observer API","url":"/posts/2024/06/12/observer-api-1"},"type":"posts"}],["$","$L5",null,{"alignItems":"center","justifyContent":"center","width":"100%","children":["$","$L12",null,{"children":["$","$L5",null,{"alignItems":"center","bgcolor":"lemonchiffon","borderRadius":1,"boxShadow":"0px 0px 10px #00000030","component":"div","data-component":"ThanksCard","direction":"row","gap":2,"padding":2,"children":[["$","$L16",null,{"iconName":"love-message-burst","width":100}],["$","$L5",null,{"children":[["$","$L6",null,{"color":"black","variant":"h6","gutterBottom":true,"children":"읽어주셔서 고마워요!"}],["$","$L6",null,{"color":"black","children":["도움이 되셨다면, ",["$","$L6",null,{"color":"hotpink","component":"span","fontWeight":"bold","children":"공감"}],"이나 ",["$","$L6",null,{"color":"dodgerblue","component":"span","fontWeight":"bold","children":"댓글"}],"을 달아주시는 건 어떤가요?"]}],["$","$L6",null,{"color":"black","children":"블로그 운영에 큰 힘이 됩니다."}]]}]]}]}]}],["$","$L7",null,{"direction":"row","gap":4,"iconColor":"inherit","justifyContent":"center","shareData":{"text":"IntersectionObserver API은 DOM과 뷰포트를 다루는 데 특화된 옵저버다. 이 옵저버의 사용법을 알아보고, React에서 커스텀 훅을 통해 간편하게 사용해보자.","title":"[Observer API 파헤치기] 2. IntersectionObserver","url":"/posts/2024/06/14/observer-api-2"}}],["$","$L17",null,{}],["$","$L5",null,{"alignItems":"center","children":["$","img",null,{"alt":"https://hits.seeyoufarm.com/api/count/incr/badge.svg?count_bg=%23484848&icon=react.svg&icon_color=dodgerblue&title=view&title_bg=%23242424&url=https%3A%2F%2Fblog.itcode.dev%2Fposts%2F2024%2F06%2F14%2Fobserver-api-2","data-component":"Hits","src":"https://hits.seeyoufarm.com/api/count/incr/badge.svg?count_bg=%23484848&icon=react.svg&icon_color=dodgerblue&title=view&title_bg=%23242424&url=https%3A%2F%2Fblog.itcode.dev%2Fposts%2F2024%2F06%2F14%2Fobserver-api-2"}]}]]}]}]]],["$","$L2",null,{"component":"footer","data-component":"Footer","marginTop":10,"children":[["$","$L2",null,{"position":"relative","children":[["$","$L18",null,{}],["$","$L2",null,{"bottom":-20,"className":"Footer_ship__VuMth","left":"10%","position":"absolute","children":["$","img",null,{"alt":"icon","height":100,"src":"https://cdn-icons-png.freepik.com/512/6643/6643562.png","width":100}]}],["$","$L2",null,{"bottom":0,"position":"absolute","width":"100%","children":["$","svg",null,{"className":"Wave_waves___Plcn","data-component":"Wave","height":40,"preserveAspectRatio":"none","shapeRendering":"auto","viewBox":"0 24 150 28","width":"100%","xmlns":"http://www.w3.org/2000/svg","children":[["$","defs",null,{"children":["$","path",null,{"d":"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z","id":"gentle-wave"}]}],["$","g",null,{"className":"Wave_parallax__AGFbj","children":[["$","use",null,{"fill":"#6fb1fc","opacity":"0.7","x":"48","xlinkHref":"#gentle-wave","y":"0"}],["$","use",null,{"fill":"#6fb1fc","opacity":"0.5","x":"48","xlinkHref":"#gentle-wave","y":"3"}],["$","use",null,{"fill":"#6fb1fc","opacity":"0.3","x":"48","xlinkHref":"#gentle-wave","y":"5"}],["$","use",null,{"fill":"#6fb1fc","x":"48","xlinkHref":"#gentle-wave","y":"7"}]]}]]}]}]]}],["$","$L2",null,{"children":["$","$L5",null,{"alignItems":"center","className":"FooterTemplate_footer__97G2c","color":"white","data-component":"FooterTemplate","gap":4,"padding":4,"paddingBottom":8,"paddingTop":8,"children":[["$","$L5",null,{"alignItems":"center","color":"white","children":[["$","$L6",null,{"className":"FooterTemplate_title__Samo8","fontWeight":"bold","variant":"h6","children":"𝝅번째 알파카의 개발 낙서장"}],["$","$L6",null,{"variant":"caption","children":"5.8.1"}]]}],["$","$L2",null,{"display":"grid","gap":2,"gridTemplateColumns":"1fr 1fr 1fr","children":[["$","$L11",null,{"data-component":"FooterLinkButton","href":"https://itcode.dev","target":"_blank","children":["$","$L19",null,{"className":"SymbolicButton_button__Yg0O3","data-component":"SymbolicButton","children":["$","$L5",null,{"alignItems":"center","bgcolor":"$undefined","border":"1px solid","borderColor":"white","borderRadius":"50%","boxShadow":"0px 0px 5px #00000050","height":40,"justifyContent":"center","padding":0.5,"width":40,"children":["$","img",null,{"alt":"itcode.dev","height":"100%","src":"https://itcode.dev/logo-transparent.png","width":"100%"}]}]}]}],["$","$L11",null,{"data-component":"FooterLinkButton","href":"https://github.com/RWB0104","target":"_blank","children":["$","$L19",null,{"className":"SymbolicButton_button__Yg0O3","data-component":"SymbolicButton","children":["$","$L5",null,{"alignItems":"center","bgcolor":"$undefined","border":"1px solid","borderColor":"white","borderRadius":"50%","boxShadow":"0px 0px 5px #00000050","height":40,"justifyContent":"center","padding":0.5,"width":40,"children":["$","$L1a",null,{}]}]}]}],["$","$L11",null,{"data-component":"FooterLinkButton","href":"mailto:psj2716@gmail.com","target":"_blank","children":["$","$L19",null,{"className":"SymbolicButton_button__Yg0O3","data-component":"SymbolicButton","children":["$","$L5",null,{"alignItems":"center","bgcolor":"$undefined","border":"1px solid","borderColor":"white","borderRadius":"50%","boxShadow":"0px 0px 5px #00000050","height":40,"justifyContent":"center","padding":0.5,"width":40,"children":["$","$L1b",null,{}]}]}]}],["$","$L11",null,{"data-component":"FooterLinkButton","href":"https://www.linkedin.com/in/itcode","target":"_blank","children":["$","$L19",null,{"className":"SymbolicButton_button__Yg0O3","data-component":"SymbolicButton","children":["$","$L5",null,{"alignItems":"center","bgcolor":"$undefined","border":"1px solid","borderColor":"white","borderRadius":"50%","boxShadow":"0px 0px 5px #00000050","height":40,"justifyContent":"center","padding":0.5,"width":40,"children":["$","$L1c",null,{}]}]}]}],["$","$L11",null,{"data-component":"FooterLinkButton","href":"/sitemap.xml","target":"_blank","children":["$","$L19",null,{"className":"SymbolicButton_button__Yg0O3","data-component":"SymbolicButton","children":["$","$L5",null,{"alignItems":"center","bgcolor":"$undefined","border":"1px solid","borderColor":"white","borderRadius":"50%","boxShadow":"0px 0px 5px #00000050","height":40,"justifyContent":"center","padding":0.5,"width":40,"children":["$","$L1d",null,{}]}]}]}],["$","$L11",null,{"data-component":"FooterLinkButton","href":"/rss.xml","target":"_blank","children":["$","$L19",null,{"className":"SymbolicButton_button__Yg0O3","data-component":"SymbolicButton","children":["$","$L5",null,{"alignItems":"center","bgcolor":"$undefined","border":"1px solid","borderColor":"white","borderRadius":"50%","boxShadow":"0px 0px 5px #00000050","height":40,"justifyContent":"center","padding":0.5,"width":40,"children":["$","$L1e",null,{}]}]}]}]]}],["$","$L5",null,{"alignItems":"center","color":"white","children":[["$","$L5",null,{"alignItems":"center","direction":"row","gap":0.5,"children":[["$","$L1f",null,{"fontSize":"inherit","htmlColor":"darkblue"}],["$","$L6",null,{"variant":"caption","children":"Developed by RWB since 2021.05"}]]}],["$","$L5",null,{"alignItems":"center","direction":"row","gap":0.5,"children":[["$","$L20",null,{"fontSize":"inherit","htmlColor":"crimson"}],["$","$L6",null,{"variant":"caption","children":"5th upgraded at 2024.05"}]]}]]}],["$","img",null,{"alt":"https://hits.seeyoufarm.com/api/count/incr/badge.svg?count_bg=%23484848&icon=react.svg&icon_color=dodgerblue&title=view&title_bg=%23242424&url=https%3A%2F%2Fblog.itcode.dev","data-component":"Hits","src":"https://hits.seeyoufarm.com/api/count/incr/badge.svg?count_bg=%23484848&icon=react.svg&icon_color=dodgerblue&title=view&title_bg=%23242424&url=https%3A%2F%2Fblog.itcode.dev"}]]}]}]]}]]}]],null],null]},["$","$L21",null,{"parallelRouterKey":"children","segmentPath":["children","$22","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L23",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/2f1fc16fd429ff22.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/a336ca791a5e0838.css","precedence":"next","crossOrigin":"$undefined"}]]}],null]},[["$","html",null,{"lang":"ko","children":[["$","head",null,{"children":[["$","script",null,{"crossOrigin":"anonymous","src":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-5522045122225064","async":true}],["$","meta",null,{"content":"ca-pub-5522045122225064","name":"google-adsense-account"}]]}],["$","body",null,{"children":["$","$24",null,{"children":["$","$L25",null,{"gaKey":"G-7QYWYNZ90R","children":["$","$L26",null,{"children":["$","$L27",null,{"children":[["$","$L21",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L23",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}],["$","$L28",null,{}],["$","$L29",null,{}]]}]}]}]}]}]]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/ca108af39b388357.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/bc8633ce02ba4b2d.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","2",{"rel":"stylesheet","href":"/_next/static/css/8b1f4b7ed2fe404c.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","3",{"rel":"stylesheet","href":"/_next/static/css/d880172cf76a61a7.css","precedence":"next","crossOrigin":"$undefined"}]],"$L2a"]]]]
2a:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"[Observer API 파헤치기] 2. IntersectionObserver - 𝝅번째 알파카의 개발 낙서장"}],["$","meta","3",{"name":"description","content":"IntersectionObserver API은 DOM과 뷰포트를 다루는 데 특화된 옵저버다. 이 옵저버의 사용법을 알아보고, React에서 커스텀 훅을 통해 간편하게 사용해보자."}],["$","meta","4",{"name":"application-name","content":"𝝅번째 알파카의 개발 낙서장"}],["$","link","5",{"rel":"author","href":"https://github.com/RWB0104"}],["$","meta","6",{"name":"author","content":"Kapoo"}],["$","link","7",{"rel":"author","href":"https://www.linkedin.com/in/itcode"}],["$","meta","8",{"name":"author","content":"RWB"}],["$","link","9",{"rel":"manifest","href":"/manifest.webmanifest","crossOrigin":"use-credentials"}],["$","meta","10",{"name":"generator","content":"Next.js"}],["$","meta","11",{"name":"keywords","content":"JavaScript,TypeScript,React,Observer API,IntersectionObserver"}],["$","meta","12",{"name":"creator","content":"RWB"}],["$","meta","13",{"name":"publisher","content":"GitHub Pages"}],["$","meta","14",{"property":"og:title","content":"[Observer API 파헤치기] 2. IntersectionObserver - 𝝅번째 알파카의 개발 낙서장"}],["$","meta","15",{"property":"og:description","content":"IntersectionObserver API은 DOM과 뷰포트를 다루는 데 특화된 옵저버다. 이 옵저버의 사용법을 알아보고, React에서 커스텀 훅을 통해 간편하게 사용해보자."}],["$","meta","16",{"property":"og:url","content":"https://blog.itcode.dev/posts/2024/06/14/observer-api-2"}],["$","meta","17",{"property":"og:site_name","content":"𝝅번째 알파카의 개발 낙서장"}],["$","meta","18",{"property":"og:locale","content":"ko-KR"}],["$","meta","19",{"property":"og:image","content":"https://github.com/RWB0104/blog.itcode.dev/assets/50317129/c472262e-0b99-4a6f-836f-fc797bcf26d9"}],["$","meta","20",{"property":"og:type","content":"website"}],["$","meta","21",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","22",{"name":"twitter:title","content":"[Observer API 파헤치기] 2. IntersectionObserver - 𝝅번째 알파카의 개발 낙서장"}],["$","meta","23",{"name":"twitter:description","content":"IntersectionObserver API은 DOM과 뷰포트를 다루는 데 특화된 옵저버다. 이 옵저버의 사용법을 알아보고, React에서 커스텀 훅을 통해 간편하게 사용해보자."}],["$","meta","24",{"name":"twitter:image","content":"https://github.com/RWB0104/blog.itcode.dev/assets/50317129/c472262e-0b99-4a6f-836f-fc797bcf26d9"}],["$","link","25",{"rel":"icon","href":"/favicon.ico"}],["$","link","26",{"rel":"shortcut icon","href":"/favicon.ico"}],["$","link","27",{"rel":"apple-touch-icon","href":"/favicon.ico"}],["$","meta","28",{"name":"next-size-adjust"}]]
1:null
