1:HL["/_next/static/media/17d789ad52fa3db3-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
2:HL["/_next/static/media/53595b3b2a2bc7fe-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
3:HL["/_next/static/media/6e5e69ce8a001790-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
4:HL["/_next/static/css/7e72925424d61cb2.css","style",{"crossOrigin":""}]
5:HL["/_next/static/css/f661f8399e37b45e.css","style",{"crossOrigin":""}]
6:HL["/_next/static/css/5bd1cfb45e9495b4.css","style",{"crossOrigin":""}]
0:["ohLfXJiVJiSguL2CG6Bpu",[[["",{"children":[["markdown","posts/2021/08/16/interface-segregation-principle","c"],{"children":["__PAGE__?{\"markdown\":[\"posts\",\"2021\",\"08\",\"16\",\"interface-segregation-principle\"]}",{}]}]},"$undefined","$undefined",true],"$L7",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/7e72925424d61cb2.css","precedence":"next","crossOrigin":""}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/f661f8399e37b45e.css","precedence":"next","crossOrigin":""}],["$","link","2",{"rel":"stylesheet","href":"/_next/static/css/5bd1cfb45e9495b4.css","precedence":"next","crossOrigin":""}]],"$L8"]]]]
9:HL["/_next/static/css/86391cacb09421ad.css","style",{"crossOrigin":""}]
a:I[46544,["912","static/chunks/912-79acab5e8493ca50.js","14","static/chunks/14-2df9062aa7ee4596.js","690","static/chunks/690-8578563e9852d8ce.js","4","static/chunks/4-ce0deb4c1b4e499e.js","185","static/chunks/app/layout-21fc97f2746b88f3.js"],""]
b:I[39587,["912","static/chunks/912-79acab5e8493ca50.js","14","static/chunks/14-2df9062aa7ee4596.js","690","static/chunks/690-8578563e9852d8ce.js","4","static/chunks/4-ce0deb4c1b4e499e.js","185","static/chunks/app/layout-21fc97f2746b88f3.js"],""]
c:I[37151,["912","static/chunks/912-79acab5e8493ca50.js","14","static/chunks/14-2df9062aa7ee4596.js","690","static/chunks/690-8578563e9852d8ce.js","4","static/chunks/4-ce0deb4c1b4e499e.js","185","static/chunks/app/layout-21fc97f2746b88f3.js"],""]
d:I[38310,[],""]
e:I[7717,[],""]
f:I[69229,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","180","static/chunks/180-ac76b8706cc15499.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","121","static/chunks/121-798805bb6a2c84a6.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-a0cad4b8844d0c50.js","78","static/chunks/app/%5B...markdown%5D/page-f0506152c7e37d2e.js"],""]
10:I[48602,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","180","static/chunks/180-ac76b8706cc15499.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","121","static/chunks/121-798805bb6a2c84a6.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-a0cad4b8844d0c50.js","78","static/chunks/app/%5B...markdown%5D/page-f0506152c7e37d2e.js"],""]
11:I[97750,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","180","static/chunks/180-ac76b8706cc15499.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","121","static/chunks/121-798805bb6a2c84a6.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-a0cad4b8844d0c50.js","78","static/chunks/app/%5B...markdown%5D/page-f0506152c7e37d2e.js"],""]
12:I[26360,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","288","static/chunks/288-dd82034089bf753f.js","602","static/chunks/602-c635d1995b986cae.js","160","static/chunks/app/not-found-9607d7058a6a4733.js"],""]
13:I[17318,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","288","static/chunks/288-dd82034089bf753f.js","602","static/chunks/602-c635d1995b986cae.js","160","static/chunks/app/not-found-9607d7058a6a4733.js"],""]
15:I[42815,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","180","static/chunks/180-ac76b8706cc15499.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","121","static/chunks/121-798805bb6a2c84a6.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-a0cad4b8844d0c50.js","78","static/chunks/app/%5B...markdown%5D/page-f0506152c7e37d2e.js"],""]
16:I[68310,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","180","static/chunks/180-ac76b8706cc15499.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","121","static/chunks/121-798805bb6a2c84a6.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-a0cad4b8844d0c50.js","78","static/chunks/app/%5B...markdown%5D/page-f0506152c7e37d2e.js"],""]
17:I[47921,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","180","static/chunks/180-ac76b8706cc15499.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","121","static/chunks/121-798805bb6a2c84a6.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-a0cad4b8844d0c50.js","78","static/chunks/app/%5B...markdown%5D/page-f0506152c7e37d2e.js"],""]
18:I[66521,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","180","static/chunks/180-ac76b8706cc15499.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","121","static/chunks/121-798805bb6a2c84a6.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-a0cad4b8844d0c50.js","78","static/chunks/app/%5B...markdown%5D/page-f0506152c7e37d2e.js"],""]
19:I[88634,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","180","static/chunks/180-ac76b8706cc15499.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","121","static/chunks/121-798805bb6a2c84a6.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-a0cad4b8844d0c50.js","78","static/chunks/app/%5B...markdown%5D/page-f0506152c7e37d2e.js"],""]
1a:I[95879,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","180","static/chunks/180-ac76b8706cc15499.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","121","static/chunks/121-798805bb6a2c84a6.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-a0cad4b8844d0c50.js","78","static/chunks/app/%5B...markdown%5D/page-f0506152c7e37d2e.js"],""]
1b:I[90992,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","180","static/chunks/180-ac76b8706cc15499.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","121","static/chunks/121-798805bb6a2c84a6.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-a0cad4b8844d0c50.js","78","static/chunks/app/%5B...markdown%5D/page-f0506152c7e37d2e.js"],""]
1c:I[4393,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","180","static/chunks/180-ac76b8706cc15499.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","121","static/chunks/121-798805bb6a2c84a6.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-a0cad4b8844d0c50.js","78","static/chunks/app/%5B...markdown%5D/page-f0506152c7e37d2e.js"],""]
1d:I[48186,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","180","static/chunks/180-ac76b8706cc15499.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","121","static/chunks/121-798805bb6a2c84a6.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-a0cad4b8844d0c50.js","78","static/chunks/app/%5B...markdown%5D/page-f0506152c7e37d2e.js"],""]
1e:I[43167,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","180","static/chunks/180-ac76b8706cc15499.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","121","static/chunks/121-798805bb6a2c84a6.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-a0cad4b8844d0c50.js","78","static/chunks/app/%5B...markdown%5D/page-f0506152c7e37d2e.js"],""]
1f:I[73961,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","180","static/chunks/180-ac76b8706cc15499.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","121","static/chunks/121-798805bb6a2c84a6.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-a0cad4b8844d0c50.js","78","static/chunks/app/%5B...markdown%5D/page-f0506152c7e37d2e.js"],""]
20:I[26102,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","180","static/chunks/180-ac76b8706cc15499.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","121","static/chunks/121-798805bb6a2c84a6.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-a0cad4b8844d0c50.js","78","static/chunks/app/%5B...markdown%5D/page-f0506152c7e37d2e.js"],""]
21:I[70839,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","180","static/chunks/180-ac76b8706cc15499.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","121","static/chunks/121-798805bb6a2c84a6.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-a0cad4b8844d0c50.js","78","static/chunks/app/%5B...markdown%5D/page-f0506152c7e37d2e.js"],""]
22:I[1739,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","180","static/chunks/180-ac76b8706cc15499.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","121","static/chunks/121-798805bb6a2c84a6.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-a0cad4b8844d0c50.js","78","static/chunks/app/%5B...markdown%5D/page-f0506152c7e37d2e.js"],""]
23:I[95990,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","180","static/chunks/180-ac76b8706cc15499.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","121","static/chunks/121-798805bb6a2c84a6.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-a0cad4b8844d0c50.js","78","static/chunks/app/%5B...markdown%5D/page-f0506152c7e37d2e.js"],""]
24:I[36712,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","180","static/chunks/180-ac76b8706cc15499.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","121","static/chunks/121-798805bb6a2c84a6.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-a0cad4b8844d0c50.js","78","static/chunks/app/%5B...markdown%5D/page-f0506152c7e37d2e.js"],""]
2b:I[9667,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","180","static/chunks/180-ac76b8706cc15499.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","121","static/chunks/121-798805bb6a2c84a6.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-a0cad4b8844d0c50.js","78","static/chunks/app/%5B...markdown%5D/page-f0506152c7e37d2e.js"],""]
2c:I[98278,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","180","static/chunks/180-ac76b8706cc15499.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","121","static/chunks/121-798805bb6a2c84a6.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-a0cad4b8844d0c50.js","78","static/chunks/app/%5B...markdown%5D/page-f0506152c7e37d2e.js"],""]
2d:I[31594,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","180","static/chunks/180-ac76b8706cc15499.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","121","static/chunks/121-798805bb6a2c84a6.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-a0cad4b8844d0c50.js","78","static/chunks/app/%5B...markdown%5D/page-f0506152c7e37d2e.js"],""]
2e:I[79705,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","180","static/chunks/180-ac76b8706cc15499.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","121","static/chunks/121-798805bb6a2c84a6.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-a0cad4b8844d0c50.js","78","static/chunks/app/%5B...markdown%5D/page-f0506152c7e37d2e.js"],""]
2f:I[13709,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","180","static/chunks/180-ac76b8706cc15499.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","121","static/chunks/121-798805bb6a2c84a6.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-a0cad4b8844d0c50.js","78","static/chunks/app/%5B...markdown%5D/page-f0506152c7e37d2e.js"],""]
26:{"category":"CS","coverImage":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png","date":1629137195000,"excerpt":"의존성 역전 원칙이란 객체는 저수준 모듈보다 고수준 모듈에 의존해야한다는 원칙이다. 말이 좀 어렵다. 고수준 모듈은 뭐고, 저수준 모듈은 또 뭐란 말인가? 고/저수준 모델의 정의는 위와 같다. 위 정의를 의존성 역전 원칙에 대입하면, 객체는 객체보다 인터페이스에 의존해야한다로 치환할 수 있다. 즉, 가급적 객체의 상속은 인터페이스를 통해 이루어져야 한다는 의미로 해석할 수 있다.","group":"객체지향","title":"[OOP] 객체지향 5원칙(SOLID) - 의존성 역전 원칙 DIP (Dependency Inversion Principle)","type":"posts"}
27:["2021","08","17","dependency-inversion-principle"]
25:{"frontmatter":"$26","names":"$27","url":"/posts/2021/08/17/dependency-inversion-principle"}
29:{"category":"CS","coverImage":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png","date":1629002531000,"excerpt":"리스코프 치환 원칙은 부모 객체와 이를 상속한 자식 객체가 있을 때 부모 객체를 호출하는 동작에서 자식 객체가 부모 객체를 완전히 대체할 수 있다는 원칙이다. 객체지향 언어에선 객체의 상속이 일어난다. 이 과정에서 부모/자식 관계가 정의된다. 자식 객체는 부모 객체의 특성을 가지며, 이를 토대로 확장할 수 있다. 하지만 이 과정에서 무리하거나 객체의 의의와 어긋나는 확장으로 인해 잘못된 방향으로 상속되는 경우가 생긴다. 리스코프 치환 원칙은 올바른 상속을 위해 자식 객체의 확장이 부모 객체의 방향을 온전히 따르도록 권고하는 원칙이다.","group":"객체지향","title":"[OOP] 객체지향 5원칙(SOLID) - 리스코프 치환 원칙 LSP (Liskov Subsitution Principle)","type":"posts"}
2a:["2021","08","15","liskov-subsitution-principle"]
28:{"frontmatter":"$29","names":"$2a","url":"/posts/2021/08/15/liskov-subsitution-principle"}
7:[null,["$","html",null,{"lang":"ko","children":[["$","head",null,{"children":["$","script",null,{"crossOrigin":"anonymous","src":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-5522045122225064","async":true}]}],["$","body",null,{"children":["$","$La",null,{"children":["$","$Lb",null,{"children":["$","$Lc",null,{"children":["$","$Ld",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Le",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","$Lf",null,{"alignItems":"center","data-component":"NotFoundTemplate","height":"100vh","justifyContent":"center","padding":2,"spacing":2,"width":"100%","children":[["$","$L10",null,{"iconName":"notFound","maxWidth":400,"width":"100%"}],["$","$L11",null,{"href":"/","children":["$","$L12",null,{"color":"inherit","size":"large","startIcon":["$","$L13",null,{}],"variant":"outlined","children":"이 방엔 아무것도 없어보인다."}]}]]}],"notFoundStyles":[],"childProp":{"current":["$","$Ld",null,{"parallelRouterKey":"children","segmentPath":["children",["markdown","posts/2021/08/16/interface-segregation-principle","c"],"children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Le",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L14",["$","$L15",null,{"data-component":"PageTemplate","children":[["$","$L16",null,{}],["$","$L15",null,{"component":"main","children":[["$","$L17",null,{"type":"posts"}],["$","$Lf",null,{"alignItems":"center","data-component":"ViewTemplate","spacing":10,"children":[["$","$L18",null,{"cover":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png","children":["$","$Lf",null,{"alignItems":"center","data-component":"ScreenerBox","height":"100%","justifyContent":"center","padding":4,"position":"relative","width":"100%","children":[["$","$Lf",null,{"direction":"row","spacing":3,"children":[["$","$L15",null,{"bgcolor":"dodgerblue","boxShadow":"5px 5px 5px black","width":5}],["$","$Lf",null,{"children":[["$","$L19",null,{"className":"ScreenerBox_text__EQeKY","color":"white","fontWeight":"bold","variant":"h4","children":"[OOP] 객체지향 5원칙(SOLID) - 인터페이스 분리 원칙 ISP (Interface Segregation Principle)"}],["$","$L19",null,{"className":"ScreenerBox_text__EQeKY","color":"dodgerblue","variant":"h6","children":"게시글"}],["$","$L19",null,{"className":"ScreenerBox_text__EQeKY","color":"white","variant":"h6","children":"⏰ 2021-08-16 10:24:57"}]]}]]}],["$","$Lf",null,{"alignItems":"center","bottom":50,"position":"absolute","spacing":2,"children":[["$","$Lf",null,{"border":"5px solid white","borderRadius":100,"height":50,"padding":1,"position":"relative","width":31,"children":["$","$L15",null,{"bgcolor":"white","borderRadius":100,"className":"ScreenerBox_icon__Qvdqx","height":10,"position":"absolute","width":5}]}],["$","$L19",null,{"color":"white","children":"D O W N"}]]}]]}]}],["$","$L1a",null,{"data-component":"ViewGroupTemplate","children":["$","$L1b",null,{"frontmatter":{"title":"[OOP] 객체지향 5원칙(SOLID) - 인터페이스 분리 원칙 ISP (Interface Segregation Principle)","excerpt":"인터페이스 분리 원칙이란 객체는 자신이 호출하지 않는 메소드에 의존하지 않아야한다는 원칙이다. 구현할 객체에게 무의미한 메소드의 구현을 방지하기 위해 반드시 필요한 메소드만을 상속/구현하도록 권고한다. 만약 상속할 객체의 규모가 너무 크다면, 해당 객체의 메소드를 작은 인터페이스로 나누는 것이 좋다. 위 그림은 규모가 너무 큰 객체를 상속했을 때 발생하는 문제와, 이를 인터페이스로 분리하여 해결하는 방법을 도식한 것이다. 왼쪽과 오른쪽 객체가 가운데 객체를 각각 상속할 경우, 왼쪽 객체는 필요한 메소드가 모두 구현되기 때문에 아무런 문제가 없다. 그러나 오른쪽 객체의 경우, Method1을 제외한 나머지 메소드는 필요가 없다. 하지만 이를 상속했기 때문에, 좋든 싫든 해당 메소드를 가지고 있거나, 최악의 경우 필요 없는 메소드를 구현까지 해야만한다. 하지만 상속 대상인 객체의 메소드를 각 동작별로 구분해 인터페이스를 만들어보자. 각 객체가 필요한 인터페이스만을 상속하여 구현하면 되므로 각자가 필요한 메소드만을 가지게 된다. 이 것이 인터페이스 분리 원칙이 지향하는 바다.","coverImage":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png","date":1629109497000,"type":"posts","category":"CS","tag":["CS","객체지향","객체지향 5원칙"],"group":"객체지향","comment":true,"publish":true},"group":[{"frontmatter":{"category":"CS","coverImage":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png","date":1629137195000,"excerpt":"의존성 역전 원칙이란 객체는 저수준 모듈보다 고수준 모듈에 의존해야한다는 원칙이다. 말이 좀 어렵다. 고수준 모듈은 뭐고, 저수준 모듈은 또 뭐란 말인가? 고/저수준 모델의 정의는 위와 같다. 위 정의를 의존성 역전 원칙에 대입하면, 객체는 객체보다 인터페이스에 의존해야한다로 치환할 수 있다. 즉, 가급적 객체의 상속은 인터페이스를 통해 이루어져야 한다는 의미로 해석할 수 있다.","group":"객체지향","title":"[OOP] 객체지향 5원칙(SOLID) - 의존성 역전 원칙 DIP (Dependency Inversion Principle)","type":"posts"},"names":["2021","08","17","dependency-inversion-principle"],"url":"/posts/2021/08/17/dependency-inversion-principle"},{"frontmatter":{"category":"CS","coverImage":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png","date":1629109497000,"excerpt":"인터페이스 분리 원칙이란 객체는 자신이 호출하지 않는 메소드에 의존하지 않아야한다는 원칙이다. 구현할 객체에게 무의미한 메소드의 구현을 방지하기 위해 반드시 필요한 메소드만을 상속/구현하도록 권고한다. 만약 상속할 객체의 규모가 너무 크다면, 해당 객체의 메소드를 작은 인터페이스로 나누는 것이 좋다. 위 그림은 규모가 너무 큰 객체를 상속했을 때 발생하는 문제와, 이를 인터페이스로 분리하여 해결하는 방법을 도식한 것이다. 왼쪽과 오른쪽 객체가 가운데 객체를 각각 상속할 경우, 왼쪽 객체는 필요한 메소드가 모두 구현되기 때문에 아무런 문제가 없다. 그러나 오른쪽 객체의 경우, Method1을 제외한 나머지 메소드는 필요가 없다. 하지만 이를 상속했기 때문에, 좋든 싫든 해당 메소드를 가지고 있거나, 최악의 경우 필요 없는 메소드를 구현까지 해야만한다. 하지만 상속 대상인 객체의 메소드를 각 동작별로 구분해 인터페이스를 만들어보자. 각 객체가 필요한 인터페이스만을 상속하여 구현하면 되므로 각자가 필요한 메소드만을 가지게 된다. 이 것이 인터페이스 분리 원칙이 지향하는 바다.","group":"객체지향","title":"[OOP] 객체지향 5원칙(SOLID) - 인터페이스 분리 원칙 ISP (Interface Segregation Principle)","type":"posts"},"names":["2021","08","16","interface-segregation-principle"],"url":"/posts/2021/08/16/interface-segregation-principle"},{"frontmatter":{"category":"CS","coverImage":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png","date":1629002531000,"excerpt":"리스코프 치환 원칙은 부모 객체와 이를 상속한 자식 객체가 있을 때 부모 객체를 호출하는 동작에서 자식 객체가 부모 객체를 완전히 대체할 수 있다는 원칙이다. 객체지향 언어에선 객체의 상속이 일어난다. 이 과정에서 부모/자식 관계가 정의된다. 자식 객체는 부모 객체의 특성을 가지며, 이를 토대로 확장할 수 있다. 하지만 이 과정에서 무리하거나 객체의 의의와 어긋나는 확장으로 인해 잘못된 방향으로 상속되는 경우가 생긴다. 리스코프 치환 원칙은 올바른 상속을 위해 자식 객체의 확장이 부모 객체의 방향을 온전히 따르도록 권고하는 원칙이다.","group":"객체지향","title":"[OOP] 객체지향 5원칙(SOLID) - 리스코프 치환 원칙 LSP (Liskov Subsitution Principle)","type":"posts"},"names":["2021","08","15","liskov-subsitution-principle"],"url":"/posts/2021/08/15/liskov-subsitution-principle"},{"frontmatter":{"category":"CS","coverImage":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png","date":1628881480000,"excerpt":"개방 폐쇄 원칙이란 객체를 다룸에 있어서 객체의 확장은 개방적으로, 객체의 수정은 폐쇄적으로 대하는 원칙이다. 한 마디로, 보여줄 건 보여주고, 숨길 건 숨긴다는 의미. 좀 더 쉽게 말하자면, 기능이 변하거나 확장 가능하지만, 해당 기능의 코드는 수정하면 안 된다는 뜻이다. 그런데 이 원칙, 말이 좀 이상하다. 기능이 변하는 거 OK. 확장되는 거 OK. 근데 코드를 수정하면 안 된다?? 다소 이해가 되지 않는 요구사항이다. 만약, 객체 하나를 수정한다고 가정하자. 이 때 단순히 해당 객체만 수정하는 것 뿐만 아니라 해당 객체에 의존하는 다른 객체들의 코드까지 줄줄이 고쳐야한다면 좋은 설계로 보기 힘들다. 대표적으로 라이브러리를 생각해보자. 라이브러리를 사용하는 객체의 코드가 변경된다고 해서 라이브러리 코드까지 변경하지 않는다. 이처럼 개방-폐쇄 원칙은 각 객체의 모듈화와 정보 은닉의 올바른 구현을 추구하며, 이를 통해 객체 간의 의존성을 최소화하여 코드 변경에 따른 영향력을 낮추기 위한 원칙이다.","group":"객체지향","title":"[OOP] 객체지향 5원칙(SOLID) - 개방-폐쇄 원칙 OCP (Open-Closed Principle)","type":"posts"},"names":["2021","08","14","open-closed-principle"],"url":"/posts/2021/08/14/open-closed-principle"},{"frontmatter":{"category":"CS","coverImage":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png","date":1628786268000,"excerpt":"올바른 객체지향 설계를 위해 수립한 원칙이 있으며, 이 다섯 가지 원칙을 통틀어 객체지향 5원칙(SOLID)이라 명명한다. 필수로 적용하지는 않지만, 적어도 이 규칙을 준수하면 준수할 수록 올바르게 설계된 객체지향이라 할 수 있다. 이 다섯가지 원칙은 아래와 같다.","group":"객체지향","title":"[OOP] 객체지향 5원칙(SOLID) - 단일 책임 원칙 SRP(Single Responsibility Principle)","type":"posts"},"names":["2021","08","13","single-responsibility-principle"],"url":"/posts/2021/08/13/single-responsibility-principle"},{"frontmatter":{"category":"CS","coverImage":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png","date":1628695962000,"excerpt":"객체지향 언어는 동일한 이름을 가진 메소드를 허용하지 않는다. 예를 들어, \"먹는다\"는 동작이 구현된 메소드가 있다고 가정하자. 먹는다는 동일한 동작이 구태여 두 개나 구현될 필요는 없다. 이러한 관점에서 본다면 메소드의 고유 아이덴티티라고도 불릴 수 있는 메소드명의 유니크화는 어쩌면 당연하다. 하지만 조금 생각해보면 좀 이상하다. JAVA는 타입에 죽고 타입에 산다. JavaScript와 달리 파라미터에 아무 타입이나 넣을 수 없기 때문에, 정해진 타입 이외의 무언가를 넣으면 컴파일 단계에서 가차없이 컷한다.","group":"객체지향","title":"[OOP] 객체지향의 특징 - 다형성(Polymorphism)","type":"posts"},"names":["2021","08","12","polymorphism"],"url":"/posts/2021/08/12/polymorphism"},{"frontmatter":{"category":"CS","coverImage":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png","date":1628681553000,"excerpt":"나른한 주말, 느긋하게 영화를 보고 있는 A씨. 영화에선 천대받으며 살던 주인공 소녀가 어느날 누군가로부터 거액의 유산을 받았다. 알고보니 그는 어렸을 적 실종된 재벌집 가문의 손녀딸이였던 것! 이후 그녀는 받은 유산을 통해 고마웠던 주변인에게 은혜를 갚고, 무시하던 이들에게 통쾌한 복수를 돌려준다는 내용이였다. 나름 통쾌했던 A씨지만, 어차피 현실에선 일어날 수 없는 일이라는 걸 이내 떠올린 A씨. 우리는 이걸 상속이라 부른다. 이처럼 상속이라는 개념은 영화나 드라마와 같은 창작물에서나 볼 수 있었다. 사전에서나 찾아볼 수 있었던 허구의 개념인 셈이다.","group":"객체지향","title":"[OOP] 객체지향의 특징 - 상속(Inheritance)","type":"posts"},"names":["2021","08","11","inheritance"],"url":"/posts/2021/08/11/inheritance"},{"frontmatter":{"category":"CS","coverImage":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png","date":1628388305000,"excerpt":"객체. 즉, 클래스의 내부 변수와 메소드를 하나로 패키징하는 특징이다. 객체에 선언된 변수나 메소드가 구분없이 중구난방으로 접근할 수 있다면 정상적인 객체로 보기 어렵다. 캡슐화와 비슷한 개념으로 정보 은닉이라는 개념이 있다. 정보 은닉은 객체의 내부 구현을 숨김으로써 객체가 반드시 정해진 메소드를 통해 상호작용하도록 유도한다. 이 두 개념은 객체의 응집도와 독립성을 높임으로써 객체의 모듈화를 지향한다. 객체의 모듈화가 잘 이루어져있을 경우 모듈 단위의 재사용이 매우 용이하다. 여러 로직에서 중복되는 코드를 모듈로 대체하면 모듈 내부의 소스만 수정하는 것으로 수정사항을 반영할 수 있다. 이는 곧 간편한 유지보수와 직결된다.","group":"객체지향","title":"[OOP] 객체지향의 특징 - 캡슐화(Encapsulation)와 정보 은닉","type":"posts"},"names":["2021","08","08","encapulation"],"url":"/posts/2021/08/08/encapulation"},{"frontmatter":{"category":"CS","coverImage":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png","date":1628305605000,"excerpt":"IT 업계에 종사하게 된다면 십중팔구 JAVA, C++, C# 중 하나는 다루게 된다. 국내 IT의 최다 공급이자 수요인 JAVA를 위시한 위 세 가지 언어의 공통점은 전부 객체지향언어라는 점이다. 물론 지금에 이르러서는 함수형이라는 개념도 나왔지만, C의 단순한 절차지향 이래로 나온 객체지향은 프로그래밍의 새로운 관점을 제시했고, 크고 작은 언어들이 알게 모르게 영향을 받았다. 이렇게 영향력이 큰 개념임에도 불구하고 막상 이와 관련된 질문을 받으면 명확하게 답을 내지 못 하기도 한다.","group":"객체지향","title":"[OOP] 객체지향 프로그래밍(Object Oriented Programming)이란?","type":"posts"},"names":["2021","08","07","what-is-oop"],"url":"/posts/2021/08/07/what-is-oop"}],"link":"/posts/2021/08/16/interface-segregation-principle"}]}],["$","$L1a",null,{"data-component":"ViewTocTemplate","children":["$","$L1c",null,{"toc":[{"level":1,"text":"인터페이스 분리 원칙 ISP (Interface Segregation Principle)"},{"level":1,"text":"코드로 보는 인터페이스 분리 원칙"},{"level":2,"text":"인터페이스 분리 원칙을 준수하지 않은 코드"},{"level":2,"text":"인터페이스 분리 원칙을 준수한 코드"},{"level":1,"text":"정리"}]}]}],["$","$L1a",null,{"data-component":"ViewContentTemplate","children":[["$","div",null,{"className":"MarkdownViewer_markdown__kFBT_","children":[["$","h1",null,{"className":"MarkdownHeading_heading__oazA9 MarkdownHeading_h1__mcnqG","data-component":"MarkdownHeading","node":{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"인터페이스 분리 원칙 ISP (Interface Segregation Principle)","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":52,"offset":52}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":52,"offset":52}}},"children":["$","$L11",null,{"href":"#인터페이스-분리-원칙-isp-(interface-segregation-principle)","id":"인터페이스-분리-원칙-isp-(interface-segregation-principle)","children":["$","$Lf",null,{"children":[["인터페이스 분리 원칙 ISP (Interface Segregation Principle)"],["$","$L15",null,{"paddingTop":1,"children":["$","$L1d",null,{}]}]]}]}]}],"\n",["$","p","2",{"children":[["$","span","0",{"className":"orange-400","children":["인터페이스 분리 원칙"]}],"이란 ",["$","span","2",{"className":"red-600","children":["객체는 자신이 호출하지 않는 메소드에 의존하지 않아야한다"]}],"는 원칙이다."]}],"\n",["$","p","4",{"children":["구현할 객체에게 무의미한 메소드의 구현을 방지하기 위해 반드시 필요한 메소드만을 상속/구현하도록 권고한다. 만약 상속할 객체의 규모가 너무 크다면, 해당 객체의 메소드를 작은 인터페이스로 나누는 것이 좋다."]}],"\n",["$","p","6",{"children":[["$","$L1e","0",{"src":"https://user-images.githubusercontent.com/50317129/128585790-a761f795-b4da-4a52-865d-d2dd4b858f20.png","alt":"null","node":{"type":"element","tagName":"img","properties":{"src":"https://user-images.githubusercontent.com/50317129/128585790-a761f795-b4da-4a52-865d-d2dd4b858f20.png","alt":"null"},"children":[],"position":{"start":{"line":8,"column":1,"offset":286},"end":{"line":8,"column":111,"offset":396}}}}]]}],"\n",["$","p","8",{"children":["위 그림은 규모가 너무 큰 객체를 상속했을 때 발생하는 문제와, 이를 인터페이스로 분리하여 해결하는 방법을 도식한 것이다."]}],"\n",["$","p","10",{"children":["왼쪽과 오른쪽 객체가 가운데 객체를 각각 상속할 경우, 왼쪽 객체는 필요한 메소드가 모두 구현되기 때문에 아무런 문제가 없다. 그러나 오른쪽 객체의 경우, ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Method1","position":{"start":{"line":12,"column":88,"offset":555},"end":{"line":12,"column":97,"offset":564}}}],"position":{"start":{"line":12,"column":88,"offset":555},"end":{"line":12,"column":97,"offset":564}}},"children":["Method1"]}],"을 제외한 나머지 메소드는 필요가 없다. 하지만 이를 상속했기 때문에, 좋든 싫든 해당 메소드를 가지고 있거나, 최악의 경우 필요 없는 메소드를 구현까지 해야만한다."]}],"\n",["$","p","12",{"children":["하지만 상속 대상인 객체의 메소드를 각 동작별로 구분해 인터페이스를 만들어보자. 각 객체가 필요한 인터페이스만을 상속하여 구현하면 되므로 각자가 필요한 메소드만을 가지게 된다. 이 것이 인터페이스 분리 원칙이 지향하는 바다."]}],"\n",["$","h1",null,{"className":"MarkdownHeading_heading__oazA9 MarkdownHeading_h1__mcnqG","data-component":"MarkdownHeading","node":{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"코드로 보는 인터페이스 분리 원칙","position":{"start":{"line":16,"column":3,"offset":787},"end":{"line":16,"column":21,"offset":805}}}],"position":{"start":{"line":16,"column":1,"offset":785},"end":{"line":16,"column":21,"offset":805}}},"children":["$","$L11",null,{"href":"#코드로-보는-인터페이스-분리-원칙","id":"코드로-보는-인터페이스-분리-원칙","children":["$","$Lf",null,{"children":[["코드로 보는 인터페이스 분리 원칙"],["$","$L15",null,{"paddingTop":1,"children":["$","$L1d",null,{}]}]]}]}]}],"\n",["$","p","16",{"children":["예시를 통해 인터페이스 분리 원칙을 준수하지 않은 경우와 준수한 경우 어떠한 차이가 있는지 코드를 통해 알아보자."]}],"\n",["$","h2",null,{"className":"MarkdownHeading_heading__oazA9 MarkdownHeading_h2__9tbOB","data-component":"MarkdownHeading","node":{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"인터페이스 분리 원칙을 준수하지 않은 코드","position":{"start":{"line":20,"column":4,"offset":875},"end":{"line":20,"column":27,"offset":898}}}],"position":{"start":{"line":20,"column":1,"offset":872},"end":{"line":20,"column":27,"offset":898}}},"children":["$","$L11",null,{"href":"#인터페이스-분리-원칙을-준수하지-않은-코드","id":"인터페이스-분리-원칙을-준수하지-않은-코드","children":["$","$Lf",null,{"children":[["인터페이스 분리 원칙을 준수하지 않은 코드"],["$","$L15",null,{"paddingTop":1,"children":["$","$L1d",null,{}]}]]}]}]}],"\n",["$","p","20",{"children":["예를 들어, 스마트폰이라는 객체가 있다고 가정하자. 이 스마트폰 객체는 비교적 최신에 나온 덕분에 일반적인 스마트폰 기능 외에도 무선 충전, AR 뷰어, 생체인식 등의 다채로운 기능을 포함하고 있다."]}],"\n",["$","p","22",{"children":["이를 가지고 S20을 구현하면 스마트폰 객체의 동작 모두가 필요하므로 ISP를 만족한다. 그러나 S2를 구현할 경우, 무선 충전, 생체인식과 같은 기능을 제공하지 않는다. 그럼에도 불구하고 부모 객체인 스마트폰에 이러한 인터페이스가 포함되어 있으므로, S2 입장에서는 필요하지도 않은 기능을 구현해야하는 낭비가 발생한다."]}],"\n",["$","pre","24",{"children":[["$","$L20",null,{"languageName":"java","className":"language-java","node":{"type":"element","tagName":"code","properties":{"className":["language-java"]},"children":[{"type":"text","value":"/**\n * 스마트폰 추상 객체\n *\n * @author RWB\n * @since 2021.08.16 Mon 16:48:03\n */\nabstract public class SmartPhone\n{\n\t/**\n\t * 통화 함수\n\t *\n\t * @param number: [String] 번호\n\t */\n\tpublic void call(String number)\n\t{\n\t\tSystem.out.println(number + \" 통화 연결\");\n\t}\n\t\n\t/**\n\t * 문자 메시지 전송 함수\n\t *\n\t * @param number: [String] 번호\n\t * @param text: [String] 내용\n\t */\n\tpublic void message(String number, String text)\n\t{\n\t\tSystem.out.println(number + \": \" + text);\n\t}\n\t\n\t/**\n\t * 무선충전 함수\n\t */\n\tpublic void wirelessCharge()\n\t{\n\t\tSystem.out.println(\"무선 충전\");\n\t}\n\t\n\t/**\n\t * AR 함수\n\t */\n\tpublic void ar()\n\t{\n\t\tSystem.out.println(\"AR 기능\");\n\t}\n\t\n\t/**\n\t * 생체인식 추상 함수\n\t */\n\tabstract public void biometrics();\n}\n"}],"position":{"start":{"line":26,"column":1,"offset":1194},"end":{"line":77,"column":4,"offset":1875}}},"children":["/**\n * 스마트폰 추상 객체\n *\n * @author RWB\n * @since 2021.08.16 Mon 16:48:03\n */\nabstract public class SmartPhone\n{\n\t/**\n\t * 통화 함수\n\t *\n\t * @param number: [String] 번호\n\t */\n\tpublic void call(String number)\n\t{\n\t\tSystem.out.println(number + \" 통화 연결\");\n\t}\n\t\n\t/**\n\t * 문자 메시지 전송 함수\n\t *\n\t * @param number: [String] 번호\n\t * @param text: [String] 내용\n\t */\n\tpublic void message(String number, String text)\n\t{\n\t\tSystem.out.println(number + \": \" + text);\n\t}\n\t\n\t/**\n\t * 무선충전 함수\n\t */\n\tpublic void wirelessCharge()\n\t{\n\t\tSystem.out.println(\"무선 충전\");\n\t}\n\t\n\t/**\n\t * AR 함수\n\t */\n\tpublic void ar()\n\t{\n\t\tSystem.out.println(\"AR 기능\");\n\t}\n\t\n\t/**\n\t * 생체인식 추상 함수\n\t */\n\tabstract public void biometrics();\n}\n"]}]]}],"\n",["$","p","26",{"children":["위와 같이 구현된 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"SmartPhone","position":{"start":{"line":79,"column":11,"offset":1887},"end":{"line":79,"column":23,"offset":1899}}}],"position":{"start":{"line":79,"column":11,"offset":1887},"end":{"line":79,"column":23,"offset":1899}}},"children":["SmartPhone"]}]," 객체가 있다. 생체인식을 담당하는 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"biometrics()","position":{"start":{"line":79,"column":43,"offset":1919},"end":{"line":79,"column":57,"offset":1933}}}],"position":{"start":{"line":79,"column":43,"offset":1919},"end":{"line":79,"column":57,"offset":1933}}},"children":["biometrics()"]}]," 메소드의 경우, 기기에 등록된 생체정보를 활용해야 하므로 추상 메소드로 선언되어있다. 이 객체를 상속하여 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"S20","position":{"start":{"line":79,"column":117,"offset":1993},"end":{"line":79,"column":122,"offset":1998}}}],"position":{"start":{"line":79,"column":117,"offset":1993},"end":{"line":79,"column":122,"offset":1998}}},"children":["S20"]}],"과 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"S2","position":{"start":{"line":79,"column":124,"offset":2000},"end":{"line":79,"column":128,"offset":2004}}}],"position":{"start":{"line":79,"column":124,"offset":2000},"end":{"line":79,"column":128,"offset":2004}}},"children":["S2"]}],"를 구현할 수 있을 것이다."]}],"\n",["$","pre","28",{"children":[["$","$L20",null,{"languageName":"java","className":"language-java","node":{"type":"element","tagName":"code","properties":{"className":["language-java"]},"children":[{"type":"text","value":"/**\n * S20 객체\n *\n * @author RWB\n * @since 2021.08.16 Mon 17:12:23\n */\npublic class S20 extends SmartPhone\n{\n\t/**\n\t * 생체인식 함수\n\t */\n\t@Override\n\tpublic void biometrics()\n\t{\n\t\tSystem.out.println(\"S20 생체인식 기능\");\n\t}\n}\n"}],"position":{"start":{"line":81,"column":1,"offset":2021},"end":{"line":99,"column":4,"offset":2245}}},"children":["/**\n * S20 객체\n *\n * @author RWB\n * @since 2021.08.16 Mon 17:12:23\n */\npublic class S20 extends SmartPhone\n{\n\t/**\n\t * 생체인식 함수\n\t */\n\t@Override\n\tpublic void biometrics()\n\t{\n\t\tSystem.out.println(\"S20 생체인식 기능\");\n\t}\n}\n"]}]]}],"\n",["$","p","30",{"children":[["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"S20","position":{"start":{"line":101,"column":1,"offset":2247},"end":{"line":101,"column":6,"offset":2252}}}],"position":{"start":{"line":101,"column":1,"offset":2247},"end":{"line":101,"column":6,"offset":2252}}},"children":["S20"]}],"은 모든 기능이 필요하기 때문에, ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"SmartPhone","position":{"start":{"line":101,"column":25,"offset":2271},"end":{"line":101,"column":37,"offset":2283}}}],"position":{"start":{"line":101,"column":25,"offset":2271},"end":{"line":101,"column":37,"offset":2283}}},"children":["SmartPhone"]}],"의 모든 메소드를 사용해야하므로, 불필요한 메소드가 없는 상태다."]}],"\n",["$","pre","32",{"children":[["$","$L20",null,{"languageName":"java","className":"language-java","node":{"type":"element","tagName":"code","properties":{"className":["language-java"]},"children":[{"type":"text","value":"/**\n * S2 객체\n *\n * @author RWB\n * @since 2021.08.16 Mon 17:13:27\n */\npublic class S2 extends SmartPhone\n{\n\t/**\n\t * 무선충전 함수\n\t */\n\t@Override\n\tpublic void wirelessCharge()\n\t{\n\t\tSystem.out.println(\"지원 불가능한 기기\");\n\t}\n\t\n\t/**\n\t * AR 함수\n\t */\n\t@Override\n\tpublic void ar()\n\t{\n\t\tSystem.out.println(\"지원 불가능한 기기\");\n\t}\n\t\n\t/**\n\t * 생체인식 추상 함수\n\t */\n\t@Override\n\tpublic void biometrics()\n\t{\n\t\tSystem.out.println(\"지원 불가능한 기기\");\n\t}\n}\n"}],"position":{"start":{"line":103,"column":1,"offset":2321},"end":{"line":139,"column":4,"offset":2745}}},"children":["/**\n * S2 객체\n *\n * @author RWB\n * @since 2021.08.16 Mon 17:13:27\n */\npublic class S2 extends SmartPhone\n{\n\t/**\n\t * 무선충전 함수\n\t */\n\t@Override\n\tpublic void wirelessCharge()\n\t{\n\t\tSystem.out.println(\"지원 불가능한 기기\");\n\t}\n\t\n\t/**\n\t * AR 함수\n\t */\n\t@Override\n\tpublic void ar()\n\t{\n\t\tSystem.out.println(\"지원 불가능한 기기\");\n\t}\n\t\n\t/**\n\t * 생체인식 추상 함수\n\t */\n\t@Override\n\tpublic void biometrics()\n\t{\n\t\tSystem.out.println(\"지원 불가능한 기기\");\n\t}\n}\n"]}]]}],"\n",["$","p","34",{"children":[["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"S2","position":{"start":{"line":141,"column":1,"offset":2747},"end":{"line":141,"column":5,"offset":2751}}}],"position":{"start":{"line":141,"column":1,"offset":2747},"end":{"line":141,"column":5,"offset":2751}}},"children":["S2"]}],"는 무선충전, AR, 생체인식이 지원되지 않는 기기다. 그럼에도 불구하고 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"SmartPhone","position":{"start":{"line":141,"column":46,"offset":2792},"end":{"line":141,"column":58,"offset":2804}}}],"position":{"start":{"line":141,"column":46,"offset":2792},"end":{"line":141,"column":58,"offset":2804}}},"children":["SmartPhone"]}],"의 상속으로 인해 해당 기능의 메소드를 강제로 상속받게 된다. 더군다나 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"biometrics()","position":{"start":{"line":141,"column":98,"offset":2844},"end":{"line":141,"column":112,"offset":2858}}}],"position":{"start":{"line":141,"column":98,"offset":2844},"end":{"line":141,"column":112,"offset":2858}}},"children":["biometrics()"]}],"의 경우 추상 메소드이므로 필요하지도 않은 기능을 구현까지 해야한다. 이러한 상속의 특징은 부모 객체의 규모가 매우 클 경우, 개발 편의성의 극심한 저하로 이뤄진다. 필요하지도 않은 수십개의 메소드를 일일히 오버라이딩하여 적절한 처리를 해준다고 생각해보자."]}],"\n",["$","h2",null,{"className":"MarkdownHeading_heading__oazA9 MarkdownHeading_h2__9tbOB","data-component":"MarkdownHeading","node":{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"인터페이스 분리 원칙을 준수한 코드","position":{"start":{"line":143,"column":4,"offset":3006},"end":{"line":143,"column":23,"offset":3025}}}],"position":{"start":{"line":143,"column":1,"offset":3003},"end":{"line":143,"column":23,"offset":3025}}},"children":["$","$L11",null,{"href":"#인터페이스-분리-원칙을-준수한-코드","id":"인터페이스-분리-원칙을-준수한-코드","children":["$","$Lf",null,{"children":[["인터페이스 분리 원칙을 준수한 코드"],["$","$L15",null,{"paddingTop":1,"children":["$","$L1d",null,{}]}]]}]}]}],"\n",["$","p","38",{"children":["객체의 특성을 확장을 통해 다른 객체를 편하게 구현하기 위한 것이 상속인데, 위와 같은 상황은 전혀 편하지 않다. 이는 부모 객체의 설계가 잘 못 됐을 수도 있고, 취지에 맞지 않는 객체를 상속했을 수도 있다. 이유야 어찌됐든 해결해야한다는 사실엔 변함이 없다."]}],"\n",["$","p","40",{"children":["그렇다면 이 현상은 어떻게 해결할 수 있을까? 객체의 메소드를 각각 인터페이스로 만들면 된다. 각 객체는 필요한 인스턴스만 상속하면 되므로 필요한 동작만을 상속/구현할 수 있을 것이다."]}],"\n",["$","pre","42",{"children":[["$","$L20",null,{"languageName":"java","className":"language-java","node":{"type":"element","tagName":"code","properties":{"className":["language-java"]},"children":[{"type":"text","value":"/**\n * 스마트폰 객체\n *\n * @author RWB\n * @since 2021.08.16 Mon 16:48:03\n */\npublic class SmartPhone\n{\n\t/**\n\t * 통화 함수\n\t *\n\t * @param number: [String] 번호\n\t */\n\tpublic void call(String number)\n\t{\n\t\tSystem.out.println(number + \" 통화 연결\");\n\t}\n\t\n\t/**\n\t * 문자 메시지 전송 함수\n\t *\n\t * @param number: [String] 번호\n\t * @param text: [String] 내용\n\t */\n\tpublic void message(String number, String text)\n\t{\n\t\tSystem.out.println(number + \": \" + text);\n\t}\n}\n"}],"position":{"start":{"line":149,"column":1,"offset":3280},"end":{"line":179,"column":4,"offset":3718}}},"children":["/**\n * 스마트폰 객체\n *\n * @author RWB\n * @since 2021.08.16 Mon 16:48:03\n */\npublic class SmartPhone\n{\n\t/**\n\t * 통화 함수\n\t *\n\t * @param number: [String] 번호\n\t */\n\tpublic void call(String number)\n\t{\n\t\tSystem.out.println(number + \" 통화 연결\");\n\t}\n\t\n\t/**\n\t * 문자 메시지 전송 함수\n\t *\n\t * @param number: [String] 번호\n\t * @param text: [String] 내용\n\t */\n\tpublic void message(String number, String text)\n\t{\n\t\tSystem.out.println(number + \": \" + text);\n\t}\n}\n"]}]]}],"\n",["$","p","44",{"children":[["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"SmartPhone","position":{"start":{"line":181,"column":1,"offset":3720},"end":{"line":181,"column":13,"offset":3732}}}],"position":{"start":{"line":181,"column":1,"offset":3720},"end":{"line":181,"column":13,"offset":3732}}},"children":["SmartPhone"]}]," 객체는 모든 스마트폰에 적용되는 보편적인 동작만을 가지도록 변경했다."]}],"\n",["$","pre","46",{"children":[["$","$L20",null,{"languageName":"java","className":"language-java","node":{"type":"element","tagName":"code","properties":{"className":["language-java"]},"children":[{"type":"text","value":"/**\n * 무선충전 인터페이스\n *\n * @author RWB\n * @since 2021.08.16 Mon 18:23:33\n */\npublic interface WirelessChargable\n{\n\t/**\n\t * 무선충전 추상 함수\n\t */\n\tvoid wirelessCharge();\n}\n\n/**\n * AR 인터페이스\n *\n * @author RWB\n * @since 2021.08.16 Mon 18:24:29\n */\npublic interface ARable\n{\n\t/**\n\t * AR 추상 함수\n\t */\n\tvoid ar();\n}\n\n/**\n * 생체인식 인터페이스\n *\n * @author RWB\n * @since 2021.08.16 Mon 18:25:08\n */\npublic interface Biometricsable\n{\n\t/**\n\t * 생체인식 추상 함수\n\t */\n\tvoid biometrics();\n}\n"}],"position":{"start":{"line":183,"column":1,"offset":3773},"end":{"line":225,"column":4,"offset":4239}}},"children":["/**\n * 무선충전 인터페이스\n *\n * @author RWB\n * @since 2021.08.16 Mon 18:23:33\n */\npublic interface WirelessChargable\n{\n\t/**\n\t * 무선충전 추상 함수\n\t */\n\tvoid wirelessCharge();\n}\n\n/**\n * AR 인터페이스\n *\n * @author RWB\n * @since 2021.08.16 Mon 18:24:29\n */\npublic interface ARable\n{\n\t/**\n\t * AR 추상 함수\n\t */\n\tvoid ar();\n}\n\n/**\n * 생체인식 인터페이스\n *\n * @author RWB\n * @since 2021.08.16 Mon 18:25:08\n */\npublic interface Biometricsable\n{\n\t/**\n\t * 생체인식 추상 함수\n\t */\n\tvoid biometrics();\n}\n"]}]]}],"\n",["$","p","48",{"children":["각 기능의 인터페이스는 위와 같다. 원래 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"SmartPhone","position":{"start":{"line":227,"column":24,"offset":4264},"end":{"line":227,"column":36,"offset":4276}}}],"position":{"start":{"line":227,"column":24,"offset":4264},"end":{"line":227,"column":36,"offset":4276}}},"children":["SmartPhone"]}],"의 객체의 메소드였던 각 기능은 인터페이스 단위로 나뉘어졌음에 주목하자."]}],"\n",["$","p","50",{"children":["이를 통해 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"S20","position":{"start":{"line":229,"column":7,"offset":4324},"end":{"line":229,"column":12,"offset":4329}}}],"position":{"start":{"line":229,"column":7,"offset":4324},"end":{"line":229,"column":12,"offset":4329}}},"children":["S20"]}],"과 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"S2","position":{"start":{"line":229,"column":14,"offset":4331},"end":{"line":229,"column":18,"offset":4335}}}],"position":{"start":{"line":229,"column":14,"offset":4331},"end":{"line":229,"column":18,"offset":4335}}},"children":["S2"]}]," 모두 필요한 객체만을 상속받아 구현할 수 있을 것이다."]}],"\n",["$","pre","52",{"children":[["$","$L20",null,{"languageName":"java","className":"language-java","node":{"type":"element","tagName":"code","properties":{"className":["language-java"]},"children":[{"type":"text","value":"/**\n * S20 객체\n *\n * @author RWB\n * @since 2021.08.16 Mon 17:12:23\n */\npublic class S20 extends SmartPhone implements WirelessChargable, ARable, Biometricsable\n{\n\t/**\n\t * 무선충전 함수\n\t */\n\t@Override\n\tpublic void wirelessCharge()\n\t{\n\t\tSystem.out.println(\"무선충전 기능\");\n\t}\n\t\n\t/**\n\t * AR 함수\n\t */\n\t@Override\n\tpublic void ar()\n\t{\n\t\tSystem.out.println(\"AR 기능\");\n\t}\n\t\n\t/**\n\t * 생체인식 함수\n\t */\n\t@Override\n\tpublic void biometrics()\n\t{\n\t\tSystem.out.println(\"생체인식 기능\");\n\t}\n}\n"}],"position":{"start":{"line":231,"column":1,"offset":4368},"end":{"line":267,"column":4,"offset":4833}}},"children":["/**\n * S20 객체\n *\n * @author RWB\n * @since 2021.08.16 Mon 17:12:23\n */\npublic class S20 extends SmartPhone implements WirelessChargable, ARable, Biometricsable\n{\n\t/**\n\t * 무선충전 함수\n\t */\n\t@Override\n\tpublic void wirelessCharge()\n\t{\n\t\tSystem.out.println(\"무선충전 기능\");\n\t}\n\t\n\t/**\n\t * AR 함수\n\t */\n\t@Override\n\tpublic void ar()\n\t{\n\t\tSystem.out.println(\"AR 기능\");\n\t}\n\t\n\t/**\n\t * 생체인식 함수\n\t */\n\t@Override\n\tpublic void biometrics()\n\t{\n\t\tSystem.out.println(\"생체인식 기능\");\n\t}\n}\n"]}]]}],"\n",["$","p","54",{"children":[["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"S20","position":{"start":{"line":269,"column":1,"offset":4835},"end":{"line":269,"column":6,"offset":4840}}}],"position":{"start":{"line":269,"column":1,"offset":4835},"end":{"line":269,"column":6,"offset":4840}}},"children":["S20"]}]," 객체의 코드다. ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"SmartPhone","position":{"start":{"line":269,"column":16,"offset":4850},"end":{"line":269,"column":28,"offset":4862}}}],"position":{"start":{"line":269,"column":16,"offset":4850},"end":{"line":269,"column":28,"offset":4862}}},"children":["SmartPhone"]}],"을 상속받았으며, 인터페이스로 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"WirelessChargable","position":{"start":{"line":269,"column":45,"offset":4879},"end":{"line":269,"column":64,"offset":4898}}}],"position":{"start":{"line":269,"column":45,"offset":4879},"end":{"line":269,"column":64,"offset":4898}}},"children":["WirelessChargable"]}],", ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ARable","position":{"start":{"line":269,"column":66,"offset":4900},"end":{"line":269,"column":74,"offset":4908}}}],"position":{"start":{"line":269,"column":66,"offset":4900},"end":{"line":269,"column":74,"offset":4908}}},"children":["ARable"]}],", ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Biometricsable","position":{"start":{"line":269,"column":76,"offset":4910},"end":{"line":269,"column":92,"offset":4926}}}],"position":{"start":{"line":269,"column":76,"offset":4910},"end":{"line":269,"column":92,"offset":4926}}},"children":["Biometricsable"]}],"을 모두 상속받아 구현하고 있다."]}],"\n",["$","pre","56",{"children":[["$","$L20",null,{"languageName":"java","className":"language-java","node":{"type":"element","tagName":"code","properties":{"className":["language-java"]},"children":[{"type":"text","value":"/**\n * S2 객체\n *\n * @author RWB\n * @since 2021.08.16 Mon 17:13:27\n */\npublic class S2 extends SmartPhone\n{\n\t/**\n\t * 문자 메시지 전송 함수\n\t *\n\t * @param number: [String] 번호\n\t * @param text: [String] 내용\n\t */\n\t@Override\n\tpublic void message(String number, String text)\n\t{\n\t\tSystem.out.println(\"In S2\");\n\t\t\n\t\tsuper.message(number, text);\n\t}\n}\n"}],"position":{"start":{"line":271,"column":1,"offset":4946},"end":{"line":294,"column":4,"offset":5288}}},"children":["/**\n * S2 객체\n *\n * @author RWB\n * @since 2021.08.16 Mon 17:13:27\n */\npublic class S2 extends SmartPhone\n{\n\t/**\n\t * 문자 메시지 전송 함수\n\t *\n\t * @param number: [String] 번호\n\t * @param text: [String] 내용\n\t */\n\t@Override\n\tpublic void message(String number, String text)\n\t{\n\t\tSystem.out.println(\"In S2\");\n\t\t\n\t\tsuper.message(number, text);\n\t}\n}\n"]}]]}],"\n",["$","p","58",{"children":[["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"S2","position":{"start":{"line":296,"column":1,"offset":5290},"end":{"line":296,"column":5,"offset":5294}}}],"position":{"start":{"line":296,"column":1,"offset":5290},"end":{"line":296,"column":5,"offset":5294}}},"children":["S2"]}],"는 특수 기능이 구현되어있지 않으므로, 기본적인 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"SmartPhone","position":{"start":{"line":296,"column":32,"offset":5321},"end":{"line":296,"column":44,"offset":5333}}}],"position":{"start":{"line":296,"column":32,"offset":5321},"end":{"line":296,"column":44,"offset":5333}}},"children":["SmartPhone"]}]," 객체만을 상속받아 구현된다."]}],"\n",["$","p","60",{"children":["인터페이스는 다중 상속을 지원하므로, 필요한 기능을 인터페이스로 나누면 해당 기능만을 상속받을 수 있다. 그 밖에 추후 업데이트 등을 통해 추가적인 기능이 탑재된다면, 같은 원리로 인터페이스를 설계해서 사용하면 필요한 객체에 필요한 기능을 쉽게 추가할 수 있다."]}],"\n",["$","h1",null,{"className":"MarkdownHeading_heading__oazA9 MarkdownHeading_h1__mcnqG","data-component":"MarkdownHeading","node":{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"정리","position":{"start":{"line":300,"column":3,"offset":5501},"end":{"line":300,"column":5,"offset":5503}}}],"position":{"start":{"line":300,"column":1,"offset":5499},"end":{"line":300,"column":5,"offset":5503}}},"children":["$","$L11",null,{"href":"#정리","id":"정리","children":["$","$Lf",null,{"children":[["정리"],["$","$L15",null,{"paddingTop":1,"children":["$","$L1d",null,{}]}]]}]}]}],"\n",["$","p","64",{"children":["인터페이스 분리 원칙은 객체가 반드시 필요한 기능만을 가지도록 제한하는 원칙이다. 불필요한 기능의 상속/구현을 최대한 방지함으로써 객체의 불필요한 책임을 제가한다. 큰 규모의 객체는 필요에 따라 인터페이스로 잘게 나누어 확장성을 향상시킨다."]}],"\n",["$","p","66",{"children":["객체를 상속할 땐 해당 객체가 상속 받는 객체에 적합한 객체인지, 의존적인 기능이 없는 지 판단하여 올바른 객체를 구현, 상속하도록 하자."]}]]}],["$","$L21",null,{}]]}],["$","$L1a",null,{"data-component":"ViewAdsTemplate","children":["$","$L22",null,{}]}],["$","$L1a",null,{"data-component":"ViewTagTemplate","children":["$","$Lf",null,{"data-component":"ViewTagBox","spacing":2,"children":[["$","$L19",null,{"fontWeight":"bold","children":"🏷️ Related Tag"}],["$","$L15",null,{"width":"100%","children":[["$","$L15","CS",{"display":"inline-block","paddingBottom":1,"paddingRight":1,"children":["$","$L23",null,{"label":"# CS","size":"medium","variant":"outlined"}]}],["$","$L15","객체지향",{"display":"inline-block","paddingBottom":1,"paddingRight":1,"children":["$","$L23",null,{"label":"# 객체지향","size":"medium","variant":"outlined"}]}],["$","$L15","객체지향 5원칙",{"display":"inline-block","paddingBottom":1,"paddingRight":1,"children":["$","$L23",null,{"label":"# 객체지향 5원칙","size":"medium","variant":"outlined"}]}]]}]]}]}],["$","$L1a",null,{"data-component":"ViewControllTemplate","children":["$","$L24",null,{"next":"$25","prev":"$28","type":"posts"}]}],["$","$L1a",null,{"data-component":"ViewCommentTemplate","children":["$","$Lf",null,{"data-component":"ViewCommentBox","spacing":10,"children":[["$","$Lf",null,{"alignItems":"center","justifyContent":"center","spacing":1,"width":"100%","children":[["$","$L10",null,{"iconName":"heartMessage","width":300}],["$","$L19",null,{"variant":"h5","children":"😍 읽어주셔서 감사합니다!"}],["$","$L19",null,{"variant":"h5","children":["도움이 되셨다면, ",["$","$L19",null,{"color":"hotpink","component":"span","fontWeight":"bold","variant":"inherit","children":"💝공감"}],"이나 ",["$","$L19",null,{"color":"hotpink","component":"span","fontWeight":"bold","variant":"inherit","children":"🗨️댓글"}],"을 달아주시는 건 어떤가요?"]}],["$","$L19",null,{"variant":"h5","children":"블로그 운영에 큰 힘이 됩니다!"}]]}],["$","$Lf",null,{"data-component":"ViewHits","direction":"row","justifyContent":"center","children":["$","img",null,{"alt":"https://blog.itcode.dev/posts/2021/08/16/interface-segregation-principle","data-component":"Hits","src":"https://hits.seeyoufarm.com/api/count/incr/badge.svg?count_bg=%23333333&icon=react.svg&icon_color=dodgerblue&title=view&title_bg=%23222222&url=https%3A%2F%2Fblog.itcode.dev%2Fposts%2F2021%2F08%2F16%2Finterface-segregation-principle"}]}],["$","$L2b",null,{}]]}]}]]}]]}],["$","$Lf",null,{"alignItems":"center","bottom":20,"data-component":"InteractionBox","direction":"row","position":"fixed","right":20,"spacing":1,"zIndex":10,"children":[["$","$L2c",null,{}],["$","$L2d",null,{}]]}],["$","$L2e",null,{}],["$","$L2f",null,{}]]}],null],"segment":"__PAGE__?{\"markdown\":[\"posts\",\"2021\",\"08\",\"16\",\"interface-segregation-principle\"]}"},"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/86391cacb09421ad.css","precedence":"next","crossOrigin":""}]]}],"segment":["markdown","posts/2021/08/16/interface-segregation-principle","c"]},"styles":null}]}]}]}]}]]}],null]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"[OOP] 객체지향 5원칙(SOLID) - 인터페이스 분리 원칙 ISP (Interface Segregation Principle) - 𝝅번째 알파카의 개발 낙서장"}],["$","meta","3",{"name":"description","content":"인터페이스 분리 원칙이란 객체는 자신이 호출하지 않는 메소드에 의존하지 않아야한다는 원칙이다. 구현할 객체에게 무의미한 메소드의 구현을 방지하기 위해 반드시 필요한 메소드만을 상속/구현하도록 권고한다. 만약 상속할 객체의 규모가 너무 크다면, 해당 객체의 메소드를 작은 인터페이스로 나누는 것이 좋다. 위 그림은 규모가 너무 큰 객체를 상속했을 때 발생하는 문제와, 이를 인터페이스로 분리하여 해결하는 방법을 도식한 것이다. 왼쪽과 오른쪽 객체가 가운데 객체를 각각 상속할 경우, 왼쪽 객체는 필요한 메소드가 모두 구현되기 때문에 아무런 문제가 없다. 그러나 오른쪽 객체의 경우, Method1을 제외한 나머지 메소드는 필요가 없다. 하지만 이를 상속했기 때문에, 좋든 싫든 해당 메소드를 가지고 있거나, 최악의 경우 필요 없는 메소드를 구현까지 해야만한다. 하지만 상속 대상인 객체의 메소드를 각 동작별로 구분해 인터페이스를 만들어보자. 각 객체가 필요한 인터페이스만을 상속하여 구현하면 되므로 각자가 필요한 메소드만을 가지게 된다. 이 것이 인터페이스 분리 원칙이 지향하는 바다."}],["$","link","4",{"rel":"author","href":"https://github.com/RWB0104"}],["$","meta","5",{"name":"author","content":"Kapoo"}],["$","link","6",{"rel":"author","href":"https://www.linkedin.com/in/itcode/"}],["$","meta","7",{"name":"author","content":"RWB"}],["$","link","8",{"rel":"manifest","href":"/manifest.webmanifest"}],["$","meta","9",{"name":"keywords","content":"CS,객체지향,객체지향 5원칙"}],["$","meta","10",{"property":"og:title","content":"[OOP] 객체지향 5원칙(SOLID) - 인터페이스 분리 원칙 ISP (Interface Segregation Principle) - 𝝅번째 알파카의 개발 낙서장"}],["$","meta","11",{"property":"og:description","content":"인터페이스 분리 원칙이란 객체는 자신이 호출하지 않는 메소드에 의존하지 않아야한다는 원칙이다. 구현할 객체에게 무의미한 메소드의 구현을 방지하기 위해 반드시 필요한 메소드만을 상속/구현하도록 권고한다. 만약 상속할 객체의 규모가 너무 크다면, 해당 객체의 메소드를 작은 인터페이스로 나누는 것이 좋다. 위 그림은 규모가 너무 큰 객체를 상속했을 때 발생하는 문제와, 이를 인터페이스로 분리하여 해결하는 방법을 도식한 것이다. 왼쪽과 오른쪽 객체가 가운데 객체를 각각 상속할 경우, 왼쪽 객체는 필요한 메소드가 모두 구현되기 때문에 아무런 문제가 없다. 그러나 오른쪽 객체의 경우, Method1을 제외한 나머지 메소드는 필요가 없다. 하지만 이를 상속했기 때문에, 좋든 싫든 해당 메소드를 가지고 있거나, 최악의 경우 필요 없는 메소드를 구현까지 해야만한다. 하지만 상속 대상인 객체의 메소드를 각 동작별로 구분해 인터페이스를 만들어보자. 각 객체가 필요한 인터페이스만을 상속하여 구현하면 되므로 각자가 필요한 메소드만을 가지게 된다. 이 것이 인터페이스 분리 원칙이 지향하는 바다."}],["$","meta","12",{"property":"og:url","content":"https://blog.itcode.dev/posts/2021/08/16/interface-segregation-principle"}],["$","meta","13",{"property":"og:site_name","content":"𝝅번째 알파카의 개발 낙서장"}],["$","meta","14",{"property":"og:locale","content":"ko-KR"}],["$","meta","15",{"property":"og:image","content":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png"}],["$","meta","16",{"property":"og:type","content":"website"}],["$","meta","17",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","18",{"name":"twitter:title","content":"[OOP] 객체지향 5원칙(SOLID) - 인터페이스 분리 원칙 ISP (Interface Segregation Principle) - 𝝅번째 알파카의 개발 낙서장"}],["$","meta","19",{"name":"twitter:description","content":"인터페이스 분리 원칙이란 객체는 자신이 호출하지 않는 메소드에 의존하지 않아야한다는 원칙이다. 구현할 객체에게 무의미한 메소드의 구현을 방지하기 위해 반드시 필요한 메소드만을 상속/구현하도록 권고한다. 만약 상속할 객체의 규모가 너무 크다면, 해당 객체의 메소드를 작은 인터페이스로 나누는 것이 좋다. 위 그림은 규모가 너무 큰 객체를 상속했을 때 발생하는 문제와, 이를 인터페이스로 분리하여 해결하는 방법을 도식한 것이다. 왼쪽과 오른쪽 객체가 가운데 객체를 각각 상속할 경우, 왼쪽 객체는 필요한 메소드가 모두 구현되기 때문에 아무런 문제가 없다. 그러나 오른쪽 객체의 경우, Method1을 제외한 나머지 메소드는 필요가 없다. 하지만 이를 상속했기 때문에, 좋든 싫든 해당 메소드를 가지고 있거나, 최악의 경우 필요 없는 메소드를 구현까지 해야만한다. 하지만 상속 대상인 객체의 메소드를 각 동작별로 구분해 인터페이스를 만들어보자. 각 객체가 필요한 인터페이스만을 상속하여 구현하면 되므로 각자가 필요한 메소드만을 가지게 된다. 이 것이 인터페이스 분리 원칙이 지향하는 바다."}],["$","meta","20",{"name":"twitter:image","content":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png"}],["$","link","21",{"rel":"icon","href":"/favicon.ico"}],["$","link","22",{"rel":"shortcut icon","href":"/favicon.ico"}],["$","link","23",{"rel":"apple-touch-icon","href":"/favicon.ico"}],["$","meta","24",{"name":"next-size-adjust"}]]
14:null
