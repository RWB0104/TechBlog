1:HL["/_next/static/media/17d789ad52fa3db3-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
2:HL["/_next/static/media/53595b3b2a2bc7fe-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
3:HL["/_next/static/media/6e5e69ce8a001790-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
4:HL["/_next/static/css/7e72925424d61cb2.css","style",{"crossOrigin":""}]
5:HL["/_next/static/css/f661f8399e37b45e.css","style",{"crossOrigin":""}]
6:HL["/_next/static/css/5bd1cfb45e9495b4.css","style",{"crossOrigin":""}]
0:["xzLzAA0el5mmodqC7ibfQ",[[["",{"children":[["markdown","posts/2021/08/17/dependency-inversion-principle","c"],{"children":["__PAGE__?{\"markdown\":[\"posts\",\"2021\",\"08\",\"17\",\"dependency-inversion-principle\"]}",{}]}]},"$undefined","$undefined",true],"$L7",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/7e72925424d61cb2.css","precedence":"next","crossOrigin":""}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/f661f8399e37b45e.css","precedence":"next","crossOrigin":""}],["$","link","2",{"rel":"stylesheet","href":"/_next/static/css/5bd1cfb45e9495b4.css","precedence":"next","crossOrigin":""}]],"$L8"]]]]
9:HL["/_next/static/css/86391cacb09421ad.css","style",{"crossOrigin":""}]
a:I[46544,["912","static/chunks/912-79acab5e8493ca50.js","14","static/chunks/14-2df9062aa7ee4596.js","690","static/chunks/690-8578563e9852d8ce.js","4","static/chunks/4-ce0deb4c1b4e499e.js","185","static/chunks/app/layout-068719489fd494e2.js"],""]
b:I[39587,["912","static/chunks/912-79acab5e8493ca50.js","14","static/chunks/14-2df9062aa7ee4596.js","690","static/chunks/690-8578563e9852d8ce.js","4","static/chunks/4-ce0deb4c1b4e499e.js","185","static/chunks/app/layout-068719489fd494e2.js"],""]
c:I[37151,["912","static/chunks/912-79acab5e8493ca50.js","14","static/chunks/14-2df9062aa7ee4596.js","690","static/chunks/690-8578563e9852d8ce.js","4","static/chunks/4-ce0deb4c1b4e499e.js","185","static/chunks/app/layout-068719489fd494e2.js"],""]
d:I[38310,[],""]
e:I[7717,[],""]
f:I[69229,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","230","static/chunks/230-7564e0228596674f.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","791","static/chunks/791-9a72cc9c40c035ec.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-f35a9fc19af84cc4.js","78","static/chunks/app/%5B...markdown%5D/page-02e443a24d9f67fd.js"],""]
10:I[48602,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","230","static/chunks/230-7564e0228596674f.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","791","static/chunks/791-9a72cc9c40c035ec.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-f35a9fc19af84cc4.js","78","static/chunks/app/%5B...markdown%5D/page-02e443a24d9f67fd.js"],""]
11:I[97750,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","230","static/chunks/230-7564e0228596674f.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","791","static/chunks/791-9a72cc9c40c035ec.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-f35a9fc19af84cc4.js","78","static/chunks/app/%5B...markdown%5D/page-02e443a24d9f67fd.js"],""]
12:I[26360,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","288","static/chunks/288-dd82034089bf753f.js","602","static/chunks/602-c635d1995b986cae.js","160","static/chunks/app/not-found-9607d7058a6a4733.js"],""]
13:I[17318,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","288","static/chunks/288-dd82034089bf753f.js","602","static/chunks/602-c635d1995b986cae.js","160","static/chunks/app/not-found-9607d7058a6a4733.js"],""]
15:I[42815,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","230","static/chunks/230-7564e0228596674f.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","791","static/chunks/791-9a72cc9c40c035ec.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-f35a9fc19af84cc4.js","78","static/chunks/app/%5B...markdown%5D/page-02e443a24d9f67fd.js"],""]
16:I[68310,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","230","static/chunks/230-7564e0228596674f.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","791","static/chunks/791-9a72cc9c40c035ec.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-f35a9fc19af84cc4.js","78","static/chunks/app/%5B...markdown%5D/page-02e443a24d9f67fd.js"],""]
17:I[47921,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","230","static/chunks/230-7564e0228596674f.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","791","static/chunks/791-9a72cc9c40c035ec.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-f35a9fc19af84cc4.js","78","static/chunks/app/%5B...markdown%5D/page-02e443a24d9f67fd.js"],""]
18:I[66521,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","230","static/chunks/230-7564e0228596674f.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","791","static/chunks/791-9a72cc9c40c035ec.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-f35a9fc19af84cc4.js","78","static/chunks/app/%5B...markdown%5D/page-02e443a24d9f67fd.js"],""]
19:I[88634,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","230","static/chunks/230-7564e0228596674f.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","791","static/chunks/791-9a72cc9c40c035ec.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-f35a9fc19af84cc4.js","78","static/chunks/app/%5B...markdown%5D/page-02e443a24d9f67fd.js"],""]
1a:I[40430,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","230","static/chunks/230-7564e0228596674f.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","791","static/chunks/791-9a72cc9c40c035ec.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-f35a9fc19af84cc4.js","78","static/chunks/app/%5B...markdown%5D/page-02e443a24d9f67fd.js"],""]
1b:I[90992,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","230","static/chunks/230-7564e0228596674f.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","791","static/chunks/791-9a72cc9c40c035ec.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-f35a9fc19af84cc4.js","78","static/chunks/app/%5B...markdown%5D/page-02e443a24d9f67fd.js"],""]
1c:I[4393,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","230","static/chunks/230-7564e0228596674f.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","791","static/chunks/791-9a72cc9c40c035ec.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-f35a9fc19af84cc4.js","78","static/chunks/app/%5B...markdown%5D/page-02e443a24d9f67fd.js"],""]
1d:I[48186,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","230","static/chunks/230-7564e0228596674f.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","791","static/chunks/791-9a72cc9c40c035ec.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-f35a9fc19af84cc4.js","78","static/chunks/app/%5B...markdown%5D/page-02e443a24d9f67fd.js"],""]
1e:I[26102,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","230","static/chunks/230-7564e0228596674f.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","791","static/chunks/791-9a72cc9c40c035ec.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-f35a9fc19af84cc4.js","78","static/chunks/app/%5B...markdown%5D/page-02e443a24d9f67fd.js"],""]
1f:I[73961,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","230","static/chunks/230-7564e0228596674f.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","791","static/chunks/791-9a72cc9c40c035ec.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-f35a9fc19af84cc4.js","78","static/chunks/app/%5B...markdown%5D/page-02e443a24d9f67fd.js"],""]
20:I[70839,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","230","static/chunks/230-7564e0228596674f.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","791","static/chunks/791-9a72cc9c40c035ec.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-f35a9fc19af84cc4.js","78","static/chunks/app/%5B...markdown%5D/page-02e443a24d9f67fd.js"],""]
21:I[1739,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","230","static/chunks/230-7564e0228596674f.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","791","static/chunks/791-9a72cc9c40c035ec.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-f35a9fc19af84cc4.js","78","static/chunks/app/%5B...markdown%5D/page-02e443a24d9f67fd.js"],""]
22:I[95990,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","230","static/chunks/230-7564e0228596674f.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","791","static/chunks/791-9a72cc9c40c035ec.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-f35a9fc19af84cc4.js","78","static/chunks/app/%5B...markdown%5D/page-02e443a24d9f67fd.js"],""]
23:I[36712,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","230","static/chunks/230-7564e0228596674f.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","791","static/chunks/791-9a72cc9c40c035ec.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-f35a9fc19af84cc4.js","78","static/chunks/app/%5B...markdown%5D/page-02e443a24d9f67fd.js"],""]
27:I[9667,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","230","static/chunks/230-7564e0228596674f.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","791","static/chunks/791-9a72cc9c40c035ec.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-f35a9fc19af84cc4.js","78","static/chunks/app/%5B...markdown%5D/page-02e443a24d9f67fd.js"],""]
28:I[98278,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","230","static/chunks/230-7564e0228596674f.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","791","static/chunks/791-9a72cc9c40c035ec.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-f35a9fc19af84cc4.js","78","static/chunks/app/%5B...markdown%5D/page-02e443a24d9f67fd.js"],""]
29:I[31594,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","230","static/chunks/230-7564e0228596674f.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","791","static/chunks/791-9a72cc9c40c035ec.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-f35a9fc19af84cc4.js","78","static/chunks/app/%5B...markdown%5D/page-02e443a24d9f67fd.js"],""]
2a:I[79705,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","230","static/chunks/230-7564e0228596674f.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","791","static/chunks/791-9a72cc9c40c035ec.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-f35a9fc19af84cc4.js","78","static/chunks/app/%5B...markdown%5D/page-02e443a24d9f67fd.js"],""]
2b:I[13709,["119","static/chunks/301b156a-beaf09af8cb1e5d2.js","912","static/chunks/912-79acab5e8493ca50.js","658","static/chunks/658-f27a2eee618e5742.js","14","static/chunks/14-2df9062aa7ee4596.js","230","static/chunks/230-7564e0228596674f.js","288","static/chunks/288-dd82034089bf753f.js","818","static/chunks/818-dd4d6d9e06c7b58b.js","690","static/chunks/690-8578563e9852d8ce.js","791","static/chunks/791-9a72cc9c40c035ec.js","619","static/chunks/619-84d3bdf2106743ee.js","602","static/chunks/602-c635d1995b986cae.js","41","static/chunks/41-f35a9fc19af84cc4.js","78","static/chunks/app/%5B...markdown%5D/page-02e443a24d9f67fd.js"],""]
25:{"category":"CS","coverImage":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png","date":1629109497000,"excerpt":"인터페이스 분리 원칙이란 객체는 자신이 호출하지 않는 메소드에 의존하지 않아야한다는 원칙이다. 구현할 객체에게 무의미한 메소드의 구현을 방지하기 위해 반드시 필요한 메소드만을 상속/구현하도록 권고한다. 만약 상속할 객체의 규모가 너무 크다면, 해당 객체의 메소드를 작은 인터페이스로 나누는 것이 좋다. 위 그림은 규모가 너무 큰 객체를 상속했을 때 발생하는 문제와, 이를 인터페이스로 분리하여 해결하는 방법을 도식한 것이다. 왼쪽과 오른쪽 객체가 가운데 객체를 각각 상속할 경우, 왼쪽 객체는 필요한 메소드가 모두 구현되기 때문에 아무런 문제가 없다. 그러나 오른쪽 객체의 경우, Method1을 제외한 나머지 메소드는 필요가 없다. 하지만 이를 상속했기 때문에, 좋든 싫든 해당 메소드를 가지고 있거나, 최악의 경우 필요 없는 메소드를 구현까지 해야만한다. 하지만 상속 대상인 객체의 메소드를 각 동작별로 구분해 인터페이스를 만들어보자. 각 객체가 필요한 인터페이스만을 상속하여 구현하면 되므로 각자가 필요한 메소드만을 가지게 된다. 이 것이 인터페이스 분리 원칙이 지향하는 바다.","group":"객체지향","title":"[OOP] 객체지향 5원칙(SOLID) - 인터페이스 분리 원칙 ISP (Interface Segregation Principle)","type":"posts"}
26:["2021","08","16","interface-segregation-principle"]
24:{"frontmatter":"$25","names":"$26","url":"/posts/2021/08/16/interface-segregation-principle"}
7:[null,["$","html",null,{"lang":"ko","children":[["$","head",null,{"children":["$","script",null,{"crossOrigin":"anonymous","src":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-5522045122225064","async":true}]}],["$","body",null,{"children":["$","$La",null,{"children":["$","$Lb",null,{"children":["$","$Lc",null,{"children":["$","$Ld",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Le",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","$Lf",null,{"alignItems":"center","data-component":"NotFoundTemplate","height":"100vh","justifyContent":"center","padding":2,"spacing":2,"width":"100%","children":[["$","$L10",null,{"iconName":"notFound","maxWidth":400,"width":"100%"}],["$","$L11",null,{"href":"/","children":["$","$L12",null,{"color":"inherit","size":"large","startIcon":["$","$L13",null,{}],"variant":"outlined","children":"이 방엔 아무것도 없어보인다."}]}]]}],"notFoundStyles":[],"childProp":{"current":["$","$Ld",null,{"parallelRouterKey":"children","segmentPath":["children",["markdown","posts/2021/08/17/dependency-inversion-principle","c"],"children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Le",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L14",["$","$L15",null,{"data-component":"PageTemplate","children":[["$","$L16",null,{}],["$","$L15",null,{"component":"main","children":[["$","$L17",null,{"type":"posts"}],["$","$Lf",null,{"alignItems":"center","data-component":"ViewTemplate","spacing":10,"children":[["$","$L18",null,{"cover":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png","children":["$","$Lf",null,{"alignItems":"center","data-component":"ScreenerBox","height":"100%","justifyContent":"center","padding":4,"position":"relative","width":"100%","children":[["$","$Lf",null,{"direction":"row","spacing":3,"children":[["$","$L15",null,{"bgcolor":"dodgerblue","boxShadow":"5px 5px 5px black","width":5}],["$","$Lf",null,{"children":[["$","$L19",null,{"className":"ScreenerBox_text__EQeKY","color":"white","fontWeight":"bold","variant":"h4","children":"[OOP] 객체지향 5원칙(SOLID) - 의존성 역전 원칙 DIP (Dependency Inversion Principle)"}],["$","$L19",null,{"className":"ScreenerBox_text__EQeKY","color":"dodgerblue","variant":"h6","children":"게시글"}],["$","$L19",null,{"className":"ScreenerBox_text__EQeKY","color":"white","variant":"h6","children":"⏰ 2021-08-16 18:06:35"}]]}]]}],["$","$Lf",null,{"alignItems":"center","bottom":50,"position":"absolute","spacing":2,"children":[["$","$Lf",null,{"border":"5px solid white","borderRadius":100,"height":50,"padding":1,"position":"relative","width":31,"children":["$","$L15",null,{"bgcolor":"white","borderRadius":100,"className":"ScreenerBox_icon__Qvdqx","height":10,"position":"absolute","width":5}]}],["$","$L19",null,{"color":"white","children":"D O W N"}]]}]]}]}],["$","$L1a",null,{"data-component":"ViewGroupTemplate","children":["$","$L1b",null,{"frontmatter":{"title":"[OOP] 객체지향 5원칙(SOLID) - 의존성 역전 원칙 DIP (Dependency Inversion Principle)","excerpt":"의존성 역전 원칙이란 객체는 저수준 모듈보다 고수준 모듈에 의존해야한다는 원칙이다. 말이 좀 어렵다. 고수준 모듈은 뭐고, 저수준 모듈은 또 뭐란 말인가? 고/저수준 모델의 정의는 위와 같다. 위 정의를 의존성 역전 원칙에 대입하면, 객체는 객체보다 인터페이스에 의존해야한다로 치환할 수 있다. 즉, 가급적 객체의 상속은 인터페이스를 통해 이루어져야 한다는 의미로 해석할 수 있다.","coverImage":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png","date":1629137195000,"type":"posts","category":"CS","tag":["CS","객체지향","객체지향 5원칙","의존성 역전 원칙","DIP"],"group":"객체지향","comment":true,"publish":true},"group":[{"frontmatter":{"category":"CS","coverImage":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png","date":1629137195000,"excerpt":"의존성 역전 원칙이란 객체는 저수준 모듈보다 고수준 모듈에 의존해야한다는 원칙이다. 말이 좀 어렵다. 고수준 모듈은 뭐고, 저수준 모듈은 또 뭐란 말인가? 고/저수준 모델의 정의는 위와 같다. 위 정의를 의존성 역전 원칙에 대입하면, 객체는 객체보다 인터페이스에 의존해야한다로 치환할 수 있다. 즉, 가급적 객체의 상속은 인터페이스를 통해 이루어져야 한다는 의미로 해석할 수 있다.","group":"객체지향","title":"[OOP] 객체지향 5원칙(SOLID) - 의존성 역전 원칙 DIP (Dependency Inversion Principle)","type":"posts"},"names":["2021","08","17","dependency-inversion-principle"],"url":"/posts/2021/08/17/dependency-inversion-principle"},{"frontmatter":{"category":"CS","coverImage":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png","date":1629109497000,"excerpt":"인터페이스 분리 원칙이란 객체는 자신이 호출하지 않는 메소드에 의존하지 않아야한다는 원칙이다. 구현할 객체에게 무의미한 메소드의 구현을 방지하기 위해 반드시 필요한 메소드만을 상속/구현하도록 권고한다. 만약 상속할 객체의 규모가 너무 크다면, 해당 객체의 메소드를 작은 인터페이스로 나누는 것이 좋다. 위 그림은 규모가 너무 큰 객체를 상속했을 때 발생하는 문제와, 이를 인터페이스로 분리하여 해결하는 방법을 도식한 것이다. 왼쪽과 오른쪽 객체가 가운데 객체를 각각 상속할 경우, 왼쪽 객체는 필요한 메소드가 모두 구현되기 때문에 아무런 문제가 없다. 그러나 오른쪽 객체의 경우, Method1을 제외한 나머지 메소드는 필요가 없다. 하지만 이를 상속했기 때문에, 좋든 싫든 해당 메소드를 가지고 있거나, 최악의 경우 필요 없는 메소드를 구현까지 해야만한다. 하지만 상속 대상인 객체의 메소드를 각 동작별로 구분해 인터페이스를 만들어보자. 각 객체가 필요한 인터페이스만을 상속하여 구현하면 되므로 각자가 필요한 메소드만을 가지게 된다. 이 것이 인터페이스 분리 원칙이 지향하는 바다.","group":"객체지향","title":"[OOP] 객체지향 5원칙(SOLID) - 인터페이스 분리 원칙 ISP (Interface Segregation Principle)","type":"posts"},"names":["2021","08","16","interface-segregation-principle"],"url":"/posts/2021/08/16/interface-segregation-principle"},{"frontmatter":{"category":"CS","coverImage":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png","date":1629002531000,"excerpt":"리스코프 치환 원칙은 부모 객체와 이를 상속한 자식 객체가 있을 때 부모 객체를 호출하는 동작에서 자식 객체가 부모 객체를 완전히 대체할 수 있다는 원칙이다. 객체지향 언어에선 객체의 상속이 일어난다. 이 과정에서 부모/자식 관계가 정의된다. 자식 객체는 부모 객체의 특성을 가지며, 이를 토대로 확장할 수 있다. 하지만 이 과정에서 무리하거나 객체의 의의와 어긋나는 확장으로 인해 잘못된 방향으로 상속되는 경우가 생긴다. 리스코프 치환 원칙은 올바른 상속을 위해 자식 객체의 확장이 부모 객체의 방향을 온전히 따르도록 권고하는 원칙이다.","group":"객체지향","title":"[OOP] 객체지향 5원칙(SOLID) - 리스코프 치환 원칙 LSP (Liskov Subsitution Principle)","type":"posts"},"names":["2021","08","15","liskov-subsitution-principle"],"url":"/posts/2021/08/15/liskov-subsitution-principle"},{"frontmatter":{"category":"CS","coverImage":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png","date":1628881480000,"excerpt":"개방 폐쇄 원칙이란 객체를 다룸에 있어서 객체의 확장은 개방적으로, 객체의 수정은 폐쇄적으로 대하는 원칙이다. 한 마디로, 보여줄 건 보여주고, 숨길 건 숨긴다는 의미. 좀 더 쉽게 말하자면, 기능이 변하거나 확장 가능하지만, 해당 기능의 코드는 수정하면 안 된다는 뜻이다. 그런데 이 원칙, 말이 좀 이상하다. 기능이 변하는 거 OK. 확장되는 거 OK. 근데 코드를 수정하면 안 된다?? 다소 이해가 되지 않는 요구사항이다. 만약, 객체 하나를 수정한다고 가정하자. 이 때 단순히 해당 객체만 수정하는 것 뿐만 아니라 해당 객체에 의존하는 다른 객체들의 코드까지 줄줄이 고쳐야한다면 좋은 설계로 보기 힘들다. 대표적으로 라이브러리를 생각해보자. 라이브러리를 사용하는 객체의 코드가 변경된다고 해서 라이브러리 코드까지 변경하지 않는다. 이처럼 개방-폐쇄 원칙은 각 객체의 모듈화와 정보 은닉의 올바른 구현을 추구하며, 이를 통해 객체 간의 의존성을 최소화하여 코드 변경에 따른 영향력을 낮추기 위한 원칙이다.","group":"객체지향","title":"[OOP] 객체지향 5원칙(SOLID) - 개방-폐쇄 원칙 OCP (Open-Closed Principle)","type":"posts"},"names":["2021","08","14","open-closed-principle"],"url":"/posts/2021/08/14/open-closed-principle"},{"frontmatter":{"category":"CS","coverImage":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png","date":1628786268000,"excerpt":"올바른 객체지향 설계를 위해 수립한 원칙이 있으며, 이 다섯 가지 원칙을 통틀어 객체지향 5원칙(SOLID)이라 명명한다. 필수로 적용하지는 않지만, 적어도 이 규칙을 준수하면 준수할 수록 올바르게 설계된 객체지향이라 할 수 있다. 이 다섯가지 원칙은 아래와 같다.","group":"객체지향","title":"[OOP] 객체지향 5원칙(SOLID) - 단일 책임 원칙 SRP(Single Responsibility Principle)","type":"posts"},"names":["2021","08","13","single-responsibility-principle"],"url":"/posts/2021/08/13/single-responsibility-principle"},{"frontmatter":{"category":"CS","coverImage":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png","date":1628695962000,"excerpt":"객체지향 언어는 동일한 이름을 가진 메소드를 허용하지 않는다. 예를 들어, \"먹는다\"는 동작이 구현된 메소드가 있다고 가정하자. 먹는다는 동일한 동작이 구태여 두 개나 구현될 필요는 없다. 이러한 관점에서 본다면 메소드의 고유 아이덴티티라고도 불릴 수 있는 메소드명의 유니크화는 어쩌면 당연하다. 하지만 조금 생각해보면 좀 이상하다. JAVA는 타입에 죽고 타입에 산다. JavaScript와 달리 파라미터에 아무 타입이나 넣을 수 없기 때문에, 정해진 타입 이외의 무언가를 넣으면 컴파일 단계에서 가차없이 컷한다.","group":"객체지향","title":"[OOP] 객체지향의 특징 - 다형성(Polymorphism)","type":"posts"},"names":["2021","08","12","polymorphism"],"url":"/posts/2021/08/12/polymorphism"},{"frontmatter":{"category":"CS","coverImage":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png","date":1628681553000,"excerpt":"나른한 주말, 느긋하게 영화를 보고 있는 A씨. 영화에선 천대받으며 살던 주인공 소녀가 어느날 누군가로부터 거액의 유산을 받았다. 알고보니 그는 어렸을 적 실종된 재벌집 가문의 손녀딸이였던 것! 이후 그녀는 받은 유산을 통해 고마웠던 주변인에게 은혜를 갚고, 무시하던 이들에게 통쾌한 복수를 돌려준다는 내용이였다. 나름 통쾌했던 A씨지만, 어차피 현실에선 일어날 수 없는 일이라는 걸 이내 떠올린 A씨. 우리는 이걸 상속이라 부른다. 이처럼 상속이라는 개념은 영화나 드라마와 같은 창작물에서나 볼 수 있었다. 사전에서나 찾아볼 수 있었던 허구의 개념인 셈이다.","group":"객체지향","title":"[OOP] 객체지향의 특징 - 상속(Inheritance)","type":"posts"},"names":["2021","08","11","inheritance"],"url":"/posts/2021/08/11/inheritance"},{"frontmatter":{"category":"CS","coverImage":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png","date":1628388305000,"excerpt":"객체. 즉, 클래스의 내부 변수와 메소드를 하나로 패키징하는 특징이다. 객체에 선언된 변수나 메소드가 구분없이 중구난방으로 접근할 수 있다면 정상적인 객체로 보기 어렵다. 캡슐화와 비슷한 개념으로 정보 은닉이라는 개념이 있다. 정보 은닉은 객체의 내부 구현을 숨김으로써 객체가 반드시 정해진 메소드를 통해 상호작용하도록 유도한다. 이 두 개념은 객체의 응집도와 독립성을 높임으로써 객체의 모듈화를 지향한다. 객체의 모듈화가 잘 이루어져있을 경우 모듈 단위의 재사용이 매우 용이하다. 여러 로직에서 중복되는 코드를 모듈로 대체하면 모듈 내부의 소스만 수정하는 것으로 수정사항을 반영할 수 있다. 이는 곧 간편한 유지보수와 직결된다.","group":"객체지향","title":"[OOP] 객체지향의 특징 - 캡슐화(Encapsulation)와 정보 은닉","type":"posts"},"names":["2021","08","08","encapulation"],"url":"/posts/2021/08/08/encapulation"},{"frontmatter":{"category":"CS","coverImage":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png","date":1628305605000,"excerpt":"IT 업계에 종사하게 된다면 십중팔구 JAVA, C++, C# 중 하나는 다루게 된다. 국내 IT의 최다 공급이자 수요인 JAVA를 위시한 위 세 가지 언어의 공통점은 전부 객체지향언어라는 점이다. 물론 지금에 이르러서는 함수형이라는 개념도 나왔지만, C의 단순한 절차지향 이래로 나온 객체지향은 프로그래밍의 새로운 관점을 제시했고, 크고 작은 언어들이 알게 모르게 영향을 받았다. 이렇게 영향력이 큰 개념임에도 불구하고 막상 이와 관련된 질문을 받으면 명확하게 답을 내지 못 하기도 한다.","group":"객체지향","title":"[OOP] 객체지향 프로그래밍(Object Oriented Programming)이란?","type":"posts"},"names":["2021","08","07","what-is-oop"],"url":"/posts/2021/08/07/what-is-oop"}],"link":"/posts/2021/08/17/dependency-inversion-principle"}]}],["$","$L1a",null,{"data-component":"ViewTocTemplate","children":["$","$L1c",null,{"toc":[{"level":1,"text":"의존성 역전 원칙 DIP (Dependency Inversion Principle)"},{"level":1,"text":"코드로 보는 의존성 역전 원칙"},{"level":2,"text":"의존성 역전 원칙을 준수하지 않은 코드"},{"level":2,"text":"의존성 역전 원칙을 준수한 코드"},{"level":1,"text":"정리"},{"level":1,"text":"마치며"}]}]}],["$","$L1a",null,{"data-component":"ViewContentTemplate","children":[["$","div",null,{"className":"MarkdownViewer_markdown__kFBT_","children":[["$","h1",null,{"className":"MarkdownHeading_heading__oazA9 MarkdownHeading_h1__mcnqG","data-component":"MarkdownHeading","node":{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"의존성 역전 원칙 DIP (Dependency Inversion Principle)","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":49,"offset":49}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":49,"offset":49}}},"children":["$","$L11",null,{"href":"#의존성-역전-원칙-dip-(dependency-inversion-principle)","id":"의존성-역전-원칙-dip-(dependency-inversion-principle)","children":["$","$Lf",null,{"children":[["의존성 역전 원칙 DIP (Dependency Inversion Principle)"],["$","$L15",null,{"paddingTop":1,"children":["$","$L1d",null,{}]}]]}]}]}],"\n",["$","p","2",{"children":[["$","span","0",{"className":"orange-400","children":["의존성 역전 원칙"]}],"이란 ",["$","span","2",{"className":"red-600","children":["객체는 저수준 모듈보다 고수준 모듈에 의존해야한다"]}],"는 원칙이다."]}],"\n",["$","p","4",{"children":["말이 좀 어렵다. 고수준 모듈은 뭐고, 저수준 모듈은 또 뭐란 말인가?"]}],"\n",["$","ul","6",{"children":["\n",["$","li","1",{"children":[["$","span","0",{"className":"blue-400","children":["고수준 모듈"]}],": 인터페이스와 같은 객체의 형태나 추상적 개념"]}],"\n",["$","li","3",{"children":[["$","span","0",{"className":"blue-400","children":["저수준 모듈"]}],": 구현된 객체"]}],"\n"]}],"\n",["$","p","8",{"children":["고/저수준 모델의 정의는 위와 같다. 위 정의를 의존성 역전 원칙에 대입하면, ",["$","span","1",{"className":"red-600","children":["객체는 객체보다 인터페이스에 의존해야한다"]}],"로 치환할 수 있다. 즉, 가급적 객체의 상속은 인터페이스를 통해 이루어져야 한다는 의미로 해석할 수 있다."]}],"\n",["$","h1",null,{"className":"MarkdownHeading_heading__oazA9 MarkdownHeading_h1__mcnqG","data-component":"MarkdownHeading","node":{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"코드로 보는 의존성 역전 원칙","position":{"start":{"line":13,"column":3,"offset":473},"end":{"line":13,"column":19,"offset":489}}}],"position":{"start":{"line":13,"column":1,"offset":471},"end":{"line":13,"column":19,"offset":489}}},"children":["$","$L11",null,{"href":"#코드로-보는-의존성-역전-원칙","id":"코드로-보는-의존성-역전-원칙","children":["$","$Lf",null,{"children":[["코드로 보는 의존성 역전 원칙"],["$","$L15",null,{"paddingTop":1,"children":["$","$L1d",null,{}]}]]}]}]}],"\n",["$","p","12",{"children":["예시를 통해 의존성 역전 원칙을 준수하지 않은 경우와 준수한 경우 어떠한 차이가 있는지 코드를 통해 알아보자."]}],"\n",["$","h2",null,{"className":"MarkdownHeading_heading__oazA9 MarkdownHeading_h2__9tbOB","data-component":"MarkdownHeading","node":{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"의존성 역전 원칙을 준수하지 않은 코드","position":{"start":{"line":17,"column":4,"offset":557},"end":{"line":17,"column":25,"offset":578}}}],"position":{"start":{"line":17,"column":1,"offset":554},"end":{"line":17,"column":25,"offset":578}}},"children":["$","$L11",null,{"href":"#의존성-역전-원칙을-준수하지-않은-코드","id":"의존성-역전-원칙을-준수하지-않은-코드","children":["$","$Lf",null,{"children":[["의존성 역전 원칙을 준수하지 않은 코드"],["$","$L15",null,{"paddingTop":1,"children":["$","$L1d",null,{}]}]]}]}]}],"\n",["$","p","16",{"children":["어렸을 적 누구나 한 번씩 단풍에 대한 이야기를 다룬 게임을 해본적이 있을 것이다. 비록 이젠 죽어버렸지만 필자도 매우 좋아했었고, 성인이 된 후에도 방학시즌 이벤트만 되면 으레 복귀해서 게임을 즐기곤 했었다."]}],"\n",["$","p","18",{"children":["그 게임은 RPG 장르로, RPG가 그렇듯 다양한 직업군과 그에 맞는 스킬/무기 시스템이 갖춰져있다."]}],"\n",["$","pre","20",{"children":[["$","$L1e",null,{"languageName":"java","className":"language-java","node":{"type":"element","tagName":"code","properties":{"className":["language-java"]},"children":[{"type":"text","value":"import java.util.Random;\n\n/**\n * 한손검 객체\n *\n * @author RWB\n * @since 2021.08.17 Tue 01:36:44\n */\npublic class OneHandSword\n{\n\tprivate final String NAME;\n\tprivate final int DAMAGE;\n\t\n\t/**\n\t * OneHandSword 생성자 함수\n\t *\n\t * @param name: [String] 무기 이름\n\t * @param damage: [int] 데미지\n\t */\n\tpublic OneHandSword(String name, int damage)\n\t{\n\t\tNAME = name;\n\t\tDAMAGE = damage;\n\t}\n\t\n\t/**\n\t * 공격 데미지 반환 함수\n\t *\n\t * @return [int] 공격 데미지 (데미지 +-5)\n\t */\n\tpublic int attack()\n\t{\n\t\treturn DAMAGE + new Random().nextInt(10) - 5;\n\t}\n\t\n\t/**\n\t * 객체 문자열 반환 함수\n\t *\n\t * @return [String] 이름\n\t */\n\t@Override\n\tpublic String toString()\n\t{\n\t\treturn NAME;\n\t}\n}\n"}],"position":{"start":{"line":23,"column":1,"offset":757},"end":{"line":70,"column":4,"offset":1395}}},"children":["import java.util.Random;\n\n/**\n * 한손검 객체\n *\n * @author RWB\n * @since 2021.08.17 Tue 01:36:44\n */\npublic class OneHandSword\n{\n\tprivate final String NAME;\n\tprivate final int DAMAGE;\n\t\n\t/**\n\t * OneHandSword 생성자 함수\n\t *\n\t * @param name: [String] 무기 이름\n\t * @param damage: [int] 데미지\n\t */\n\tpublic OneHandSword(String name, int damage)\n\t{\n\t\tNAME = name;\n\t\tDAMAGE = damage;\n\t}\n\t\n\t/**\n\t * 공격 데미지 반환 함수\n\t *\n\t * @return [int] 공격 데미지 (데미지 +-5)\n\t */\n\tpublic int attack()\n\t{\n\t\treturn DAMAGE + new Random().nextInt(10) - 5;\n\t}\n\t\n\t/**\n\t * 객체 문자열 반환 함수\n\t *\n\t * @return [String] 이름\n\t */\n\t@Override\n\tpublic String toString()\n\t{\n\t\treturn NAME;\n\t}\n}\n"]}]]}],"\n",["$","p","22",{"children":["수 많은 무기 가운데 하나인 한손검을 구현한 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"OneHandSword","position":{"start":{"line":72,"column":26,"offset":1422},"end":{"line":72,"column":40,"offset":1436}}}],"position":{"start":{"line":72,"column":26,"offset":1422},"end":{"line":72,"column":40,"offset":1436}}},"children":["OneHandSword"]}]," 객체가 있다. 캐릭터는 위와 같은 무기를 장비할 수 있을 것이다. 인스턴스 생성 시 무기의 이름과 데미지를 입력하여 생성한다."]}],"\n",["$","pre","24",{"children":[["$","$L1e",null,{"languageName":"java","className":"language-java","node":{"type":"element","tagName":"code","properties":{"className":["language-java"]},"children":[{"type":"text","value":"/**\n * 캐릭터 객체\n *\n * @author RWB\n * @since 2021.08.17 Tue 00:46:15\n */\npublic class Character\n{\n\tprivate final String NAME;\n\tprivate int health;\n\tprivate OneHandSword weapon;\n\t\n\t/**\n\t * Character 생성자 함수\n\t *\n\t * @param name: [String] 이름\n\t * @param health: [int] 체력\n\t * @param weapon: [OneHandSword] 무기\n\t */\n\tpublic Character(String name, int health, OneHandSword weapon)\n\t{\n\t\tNAME = name;\n\t\tthis.health = health;\n\t\tthis.weapon = weapon;\n\t}\n\t\n\t/**\n\t * 공격 데미지 반환 함수\n\t *\n\t * @return [int] 공격 데미지\n\t */\n\tpublic int attack()\n\t{\n\t\treturn weapon.attack();\n\t}\n\t\n\t/**\n\t * 피격 함수\n\t *\n\t * @param amount: [int] 피격 데미지\n\t */\n\tpublic void damaged(int amount)\n\t{\n\t\thealth -= amount;\n\t}\n\t\n\t/**\n\t * 무기 교체 함수\n\t *\n\t * @param weapon: [OneHandSword] 무기\n\t */\n\tpublic void chageWeapon(OneHandSword weapon)\n\t{\n\t\tthis.weapon = weapon;\n\t}\n\t\n\t/**\n\t * 캐릭터 정보 출력 함수\n\t */\n\tpublic void getInfo()\n\t{\n\t\tSystem.out.println(\"이름: \" + NAME);\n\t\tSystem.out.println(\"체력: \" + health);\n\t\tSystem.out.println(\"무기: \" + weapon);\n\t}\n}\n"}],"position":{"start":{"line":74,"column":1,"offset":1509},"end":{"line":141,"column":4,"offset":2504}}},"children":["/**\n * 캐릭터 객체\n *\n * @author RWB\n * @since 2021.08.17 Tue 00:46:15\n */\npublic class Character\n{\n\tprivate final String NAME;\n\tprivate int health;\n\tprivate OneHandSword weapon;\n\t\n\t/**\n\t * Character 생성자 함수\n\t *\n\t * @param name: [String] 이름\n\t * @param health: [int] 체력\n\t * @param weapon: [OneHandSword] 무기\n\t */\n\tpublic Character(String name, int health, OneHandSword weapon)\n\t{\n\t\tNAME = name;\n\t\tthis.health = health;\n\t\tthis.weapon = weapon;\n\t}\n\t\n\t/**\n\t * 공격 데미지 반환 함수\n\t *\n\t * @return [int] 공격 데미지\n\t */\n\tpublic int attack()\n\t{\n\t\treturn weapon.attack();\n\t}\n\t\n\t/**\n\t * 피격 함수\n\t *\n\t * @param amount: [int] 피격 데미지\n\t */\n\tpublic void damaged(int amount)\n\t{\n\t\thealth -= amount;\n\t}\n\t\n\t/**\n\t * 무기 교체 함수\n\t *\n\t * @param weapon: [OneHandSword] 무기\n\t */\n\tpublic void chageWeapon(OneHandSword weapon)\n\t{\n\t\tthis.weapon = weapon;\n\t}\n\t\n\t/**\n\t * 캐릭터 정보 출력 함수\n\t */\n\tpublic void getInfo()\n\t{\n\t\tSystem.out.println(\"이름: \" + NAME);\n\t\tSystem.out.println(\"체력: \" + health);\n\t\tSystem.out.println(\"무기: \" + weapon);\n\t}\n}\n"]}]]}],"\n",["$","p","26",{"children":["게임 캐릭터를 구현한 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Character","position":{"start":{"line":143,"column":13,"offset":2518},"end":{"line":143,"column":24,"offset":2529}}}],"position":{"start":{"line":143,"column":13,"offset":2518},"end":{"line":143,"column":24,"offset":2529}}},"children":["Character"]}]," 객체다. 게임 캐릭터가 취할 수 있는 기본적인 행동 일부가 구현되어있으며, 인스턴스 생성 시 캐릭터 이름, 체력, 무기를 입력하여 생성한다."]}],"\n",["$","p","28",{"children":["하지만 다들 알다시피, 무기엔 한손검만 있는 게 아니다. 근접계열 무기만 하더라도 두손검, 단검, 창, 도끼, 둔기 등 다양한 종류가 존재할 수 있다. 그러나 이 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Character","position":{"start":{"line":145,"column":92,"offset":2701},"end":{"line":145,"column":103,"offset":2712}}}],"position":{"start":{"line":145,"column":92,"offset":2701},"end":{"line":145,"column":103,"offset":2712}}},"children":["Character"]}]," 객체. 애초에 한손검 외엔 쓸 수가 없는 구조다. ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Character","position":{"start":{"line":145,"column":132,"offset":2741},"end":{"line":145,"column":143,"offset":2752}}}],"position":{"start":{"line":145,"column":132,"offset":2741},"end":{"line":145,"column":143,"offset":2752}}},"children":["Character"]}],"의 인스턴스 생성 시 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"OneHandSword","position":{"start":{"line":145,"column":155,"offset":2764},"end":{"line":145,"column":169,"offset":2778}}}],"position":{"start":{"line":145,"column":155,"offset":2764},"end":{"line":145,"column":169,"offset":2778}}},"children":["OneHandSword"]}],"에 의존성을 가지기 때문. \t공격 동작을 담당하는 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"attack()","position":{"start":{"line":145,"column":197,"offset":2806},"end":{"line":145,"column":207,"offset":2816}}}],"position":{"start":{"line":145,"column":197,"offset":2806},"end":{"line":145,"column":207,"offset":2816}}},"children":["attack()"]}]," 메소드 역시 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"OneHandSword","position":{"start":{"line":145,"column":215,"offset":2824},"end":{"line":145,"column":229,"offset":2838}}}],"position":{"start":{"line":145,"column":215,"offset":2824},"end":{"line":145,"column":229,"offset":2838}}},"children":["OneHandSword"]}],"에 의존성을 가진다."]}],"\n",["$","p","30",{"children":["이 상황에서 한손검을 제외한 다른 무기를 사용하려면 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Character","position":{"start":{"line":147,"column":30,"offset":2880},"end":{"line":147,"column":41,"offset":2891}}}],"position":{"start":{"line":147,"column":30,"offset":2880},"end":{"line":147,"column":41,"offset":2891}}},"children":["Character"]}],"의 코드를 바꿔야한다. 즉, 이전에 다뤘던 ",["$","$L11",null,{"data-component":"MarkdownA","href":"/posts/2021/08/14/open-closed-principle","target":"_blank","node":{"type":"element","tagName":"a","properties":{"href":"/posts/2021/08/14/open-closed-principle"},"children":[{"type":"text","value":"개방-폐쇄 원칙","position":{"start":{"line":147,"column":66,"offset":2916},"end":{"line":147,"column":74,"offset":2924}}}],"position":{"start":{"line":147,"column":65,"offset":2915},"end":{"line":147,"column":116,"offset":2966}}},"children":["$","$L19",null,{"className":"MarkdownA_link__H9nh4","color":"dodgerblue","component":"span","children":["🔗 ",["개방-폐쇄 원칙"]]}]}],"을 위배한다. 더 큰 문제는 무기가 바뀔 때마다 이 짓을 해줘야한다."]}],"\n",["$","h2",null,{"className":"MarkdownHeading_heading__oazA9 MarkdownHeading_h2__9tbOB","data-component":"MarkdownHeading","node":{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"의존성 역전 원칙을 준수한 코드","position":{"start":{"line":149,"column":4,"offset":3010},"end":{"line":149,"column":21,"offset":3027}}}],"position":{"start":{"line":149,"column":1,"offset":3007},"end":{"line":149,"column":21,"offset":3027}}},"children":["$","$L11",null,{"href":"#의존성-역전-원칙을-준수한-코드","id":"의존성-역전-원칙을-준수한-코드","children":["$","$Lf",null,{"children":[["의존성 역전 원칙을 준수한 코드"],["$","$L15",null,{"paddingTop":1,"children":["$","$L1d",null,{}]}]]}]}]}],"\n",["$","p","34",{"children":["만약 위 코드가 의존성 역전 원칙을 잘 지켰다면 고민할 필요가 없는 문제다. 위 코드의 ",["$","span","1",{"className":"red-400","children":["가장 큰 문제는 이미 완전하게 구현된 저수준 모듈을 의존하고 있다는 점"]}],"이다. 즉, 추상적인 고수준 모듈을 의존하도록 리팩토링해야한다."]}],"\n",["$","pre","36",{"children":[["$","$L1e",null,{"languageName":"java","className":"language-java","node":{"type":"element","tagName":"code","properties":{"className":["language-java"]},"children":[{"type":"text","value":"/**\n * 공격 인터페이스\n *\n * @author RWB\n * @since 2021.08.17 Tue 02:07:19\n */\npublic interface Attackable\n{\n\t/**\n\t * 공격 추상 함수\n\t *\n\t * @return [int] 공격 데미지\n\t */\n\tint attack();\n\t\n\t/**\n\t * 객체 문자열 반환 추상 함수\n\t *\n\t * @return [String] 이름\n\t */\n\t@Override\n\tString toString();\n}\n"}],"position":{"start":{"line":153,"column":1,"offset":3183},"end":{"line":177,"column":4,"offset":3457}}},"children":["/**\n * 공격 인터페이스\n *\n * @author RWB\n * @since 2021.08.17 Tue 02:07:19\n */\npublic interface Attackable\n{\n\t/**\n\t * 공격 추상 함수\n\t *\n\t * @return [int] 공격 데미지\n\t */\n\tint attack();\n\t\n\t/**\n\t * 객체 문자열 반환 추상 함수\n\t *\n\t * @return [String] 이름\n\t */\n\t@Override\n\tString toString();\n}\n"]}]]}],"\n",["$","p","38",{"children":["우선 고수준 모듈인 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Weapon","position":{"start":{"line":179,"column":12,"offset":3470},"end":{"line":179,"column":20,"offset":3478}}}],"position":{"start":{"line":179,"column":12,"offset":3470},"end":{"line":179,"column":20,"offset":3478}}},"children":["Weapon"]}]," 인터페이스를 생성한다. 공격 데미지를 반환하는 추상 함수 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"attack()","position":{"start":{"line":179,"column":53,"offset":3511},"end":{"line":179,"column":63,"offset":3521}}}],"position":{"start":{"line":179,"column":53,"offset":3511},"end":{"line":179,"column":63,"offset":3521}}},"children":["attack()"]}],"과 무기 이름을 반환하는 추상 함수 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"toString()","position":{"start":{"line":179,"column":83,"offset":3541},"end":{"line":179,"column":95,"offset":3553}}}],"position":{"start":{"line":179,"column":83,"offset":3541},"end":{"line":179,"column":95,"offset":3553}}},"children":["toString()"]}],"가 선언되어있다. 앞으로 모든 공격 가능한 무기 객체는 이 인터페이스를 상속받게 될 것이다."]}],"\n",["$","pre","40",{"children":[["$","$L1e",null,{"languageName":"java","className":"language-java","node":{"type":"element","tagName":"code","properties":{"className":["language-java"]},"children":[{"type":"text","value":"import java.util.Random;\n\n/**\n * 한손검 객체\n *\n * @author RWB\n * @since 2021.08.17 Tue 01:36:44\n */\npublic class OneHandSword implements Attackable\n{\n\tprivate final String NAME;\n\tprivate final int DAMAGE;\n\t\n\t/**\n\t * OneHandSword 생성자 함수\n\t *\n\t * @param name: [String] 무기 이름\n\t * @param damage: [int] 데미지\n\t */\n\tpublic OneHandSword(String name, int damage)\n\t{\n\t\tNAME = name;\n\t\tDAMAGE = damage;\n\t}\n\t\n\t/**\n\t * 공격 데미지 반환 함수\n\t *\n\t * @return [int] 공격 데미지 (데미지 +-5)\n\t */\n\t@Override\n\tpublic int attack()\n\t{\n\t\treturn DAMAGE + new Random().nextInt(10) - 5;\n\t}\n\t\n\t/**\n\t * 객체 문자열 반환 함수\n\t *\n\t * @return [String] 이름\n\t */\n\t@Override\n\tpublic String toString()\n\t{\n\t\treturn NAME;\n\t}\n}\n"}],"position":{"start":{"line":181,"column":1,"offset":3606},"end":{"line":229,"column":4,"offset":4277}}},"children":["import java.util.Random;\n\n/**\n * 한손검 객체\n *\n * @author RWB\n * @since 2021.08.17 Tue 01:36:44\n */\npublic class OneHandSword implements Attackable\n{\n\tprivate final String NAME;\n\tprivate final int DAMAGE;\n\t\n\t/**\n\t * OneHandSword 생성자 함수\n\t *\n\t * @param name: [String] 무기 이름\n\t * @param damage: [int] 데미지\n\t */\n\tpublic OneHandSword(String name, int damage)\n\t{\n\t\tNAME = name;\n\t\tDAMAGE = damage;\n\t}\n\t\n\t/**\n\t * 공격 데미지 반환 함수\n\t *\n\t * @return [int] 공격 데미지 (데미지 +-5)\n\t */\n\t@Override\n\tpublic int attack()\n\t{\n\t\treturn DAMAGE + new Random().nextInt(10) - 5;\n\t}\n\t\n\t/**\n\t * 객체 문자열 반환 함수\n\t *\n\t * @return [String] 이름\n\t */\n\t@Override\n\tpublic String toString()\n\t{\n\t\treturn NAME;\n\t}\n}\n"]}]]}],"\n",["$","p","42",{"children":[["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Attackable","position":{"start":{"line":231,"column":1,"offset":4279},"end":{"line":231,"column":13,"offset":4291}}}],"position":{"start":{"line":231,"column":1,"offset":4279},"end":{"line":231,"column":13,"offset":4291}}},"children":["Attackable"]}],"를 상속받은 한손검 객체 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"OneHandSword","position":{"start":{"line":231,"column":27,"offset":4305},"end":{"line":231,"column":41,"offset":4319}}}],"position":{"start":{"line":231,"column":27,"offset":4305},"end":{"line":231,"column":41,"offset":4319}}},"children":["OneHandSword"]}]," 객체다. 상속받은 점 외에 크게 달라진 점은 없다."]}],"\n",["$","pre","44",{"children":[["$","$L1e",null,{"languageName":"java","className":"language-java","node":{"type":"element","tagName":"code","properties":{"className":["language-java"]},"children":[{"type":"text","value":"/**\n * 캐릭터 객체\n *\n * @author RWB\n * @since 2021.08.17 Tue 00:46:15\n */\npublic class Character\n{\n\tprivate final String NAME;\n\tprivate int health;\n\tprivate Attackable weapon;\n\t\n\t/**\n\t * Character 생성자 함수\n\t *\n\t * @param name: [String] 이름\n\t * @param health: [int] 체력\n\t * @param weapon: [Attackable] 무기\n\t */\n\tpublic Character(String name, int health, Attackable weapon)\n\t{\n\t\tNAME = name;\n\t\tthis.health = health;\n\t\tthis.weapon = weapon;\n\t}\n\t\n\t/**\n\t * 공격 데미지 반환 함수\n\t *\n\t * @return [int] 공격 데미지\n\t */\n\tpublic int attack()\n\t{\n\t\treturn weapon.attack();\n\t}\n\t\n\t/**\n\t * 피격 함수\n\t *\n\t * @param amount: [int] 피격 데미지\n\t */\n\tpublic void damaged(int amount)\n\t{\n\t\thealth -= amount;\n\t}\n\t\n\t/**\n\t * 무기 교체 함수\n\t *\n\t * @param weapon: [Attackable] 무기\n\t */\n\tpublic void chageWeapon(Attackable weapon)\n\t{\n\t\tthis.weapon = weapon;\n\t}\n\t\n\t/**\n\t * 캐릭터 정보 출력 함수\n\t */\n\tpublic void getInfo()\n\t{\n\t\tSystem.out.println(\"이름: \" + NAME);\n\t\tSystem.out.println(\"체력: \" + health);\n\t\tSystem.out.println(\"무기: \" + weapon);\n\t}\n}\n"}],"position":{"start":{"line":233,"column":1,"offset":4350},"end":{"line":300,"column":4,"offset":5335}}},"children":["/**\n * 캐릭터 객체\n *\n * @author RWB\n * @since 2021.08.17 Tue 00:46:15\n */\npublic class Character\n{\n\tprivate final String NAME;\n\tprivate int health;\n\tprivate Attackable weapon;\n\t\n\t/**\n\t * Character 생성자 함수\n\t *\n\t * @param name: [String] 이름\n\t * @param health: [int] 체력\n\t * @param weapon: [Attackable] 무기\n\t */\n\tpublic Character(String name, int health, Attackable weapon)\n\t{\n\t\tNAME = name;\n\t\tthis.health = health;\n\t\tthis.weapon = weapon;\n\t}\n\t\n\t/**\n\t * 공격 데미지 반환 함수\n\t *\n\t * @return [int] 공격 데미지\n\t */\n\tpublic int attack()\n\t{\n\t\treturn weapon.attack();\n\t}\n\t\n\t/**\n\t * 피격 함수\n\t *\n\t * @param amount: [int] 피격 데미지\n\t */\n\tpublic void damaged(int amount)\n\t{\n\t\thealth -= amount;\n\t}\n\t\n\t/**\n\t * 무기 교체 함수\n\t *\n\t * @param weapon: [Attackable] 무기\n\t */\n\tpublic void chageWeapon(Attackable weapon)\n\t{\n\t\tthis.weapon = weapon;\n\t}\n\t\n\t/**\n\t * 캐릭터 정보 출력 함수\n\t */\n\tpublic void getInfo()\n\t{\n\t\tSystem.out.println(\"이름: \" + NAME);\n\t\tSystem.out.println(\"체력: \" + health);\n\t\tSystem.out.println(\"무기: \" + weapon);\n\t}\n}\n"]}]]}],"\n",["$","p","46",{"children":["게임 캐릭터 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Character","position":{"start":{"line":302,"column":8,"offset":5344},"end":{"line":302,"column":19,"offset":5355}}}],"position":{"start":{"line":302,"column":8,"offset":5344},"end":{"line":302,"column":19,"offset":5355}}},"children":["Character"]}]," 객체다. 기존의 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"OneHandSword","position":{"start":{"line":302,"column":29,"offset":5365},"end":{"line":302,"column":43,"offset":5379}}}],"position":{"start":{"line":302,"column":29,"offset":5365},"end":{"line":302,"column":43,"offset":5379}}},"children":["OneHandSword"]}],"를 파라미터에서 좀 더 고수준 모듈인 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Attackable","position":{"start":{"line":302,"column":64,"offset":5400},"end":{"line":302,"column":76,"offset":5412}}}],"position":{"start":{"line":302,"column":64,"offset":5400},"end":{"line":302,"column":76,"offset":5412}}},"children":["Attackable"]}],"을 파라미터로 받는 걸 확인할 수 있다. 그 밖의 무기와 관련된 메소드 전부가 그렇다."]}],"\n",["$","p","48",{"children":["하나의 객체였던 저수준 모듈에서 고수준 모듈로 의존성이 바뀌게 되니, ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Attackable","position":{"start":{"line":304,"column":40,"offset":5501},"end":{"line":304,"column":52,"offset":5513}}}],"position":{"start":{"line":304,"column":40,"offset":5501},"end":{"line":304,"column":52,"offset":5513}}},"children":["Attackable"]}],"을 상속하는 모든 객체를 다룰 수 있다. 게임 시스템 내부적으로 모든 공격 가능한 무기는 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Attackable","position":{"start":{"line":304,"column":102,"offset":5563},"end":{"line":304,"column":114,"offset":5575}}}],"position":{"start":{"line":304,"column":102,"offset":5563},"end":{"line":304,"column":114,"offset":5575}}},"children":["Attackable"]}],"을 상속받기로 가정했으므로, 공격 가능한 모든 무기를 사용할 수 있는 셈이다."]}],"\n",["$","p","50",{"children":["이러한 변경으로 무기의 변경에 따라 ",["$","$L1f",null,{"inline":true,"node":{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Character","position":{"start":{"line":306,"column":21,"offset":5640},"end":{"line":306,"column":32,"offset":5651}}}],"position":{"start":{"line":306,"column":21,"offset":5640},"end":{"line":306,"column":32,"offset":5651}}},"children":["Character"]}],"의 ",["$","span","3",{"className":"green-600","children":["코드를 변경할 필요가 없으므로, 개방-폐쇄 원칙 또한 준수"]}],"할 수 있다."]}],"\n",["$","h1",null,{"className":"MarkdownHeading_heading__oazA9 MarkdownHeading_h1__mcnqG","data-component":"MarkdownHeading","node":{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"정리","position":{"start":{"line":308,"column":3,"offset":5727},"end":{"line":308,"column":5,"offset":5729}}}],"position":{"start":{"line":308,"column":1,"offset":5725},"end":{"line":308,"column":5,"offset":5729}}},"children":["$","$L11",null,{"href":"#정리","id":"정리","children":["$","$Lf",null,{"children":[["정리"],["$","$L15",null,{"paddingTop":1,"children":["$","$L1d",null,{}]}]]}]}]}],"\n",["$","p","54",{"children":["의존성 역전 원칙은 코드의 확장성 및 재사용성을 추구하기 위한 원칙이다. 경직된 객체보다 구현되지 않아 유연한 인터페이스가 더욱 확장 가능성이 높을 것이다."]}],"\n",["$","p","56",{"children":["다른 원칙에 비해 ",["$","span","1",{"className":"orange-400","children":["의존성 역전 원칙은 중요도가 좀 떨어지는데, 그 이유는 타 원칙의 하위호환 격이기 때문"]}],"이다. 당장 위에서도 언급했듯이, 의존성 역전 원칙은 개방-폐쇄 원칙을 준수할 경우 자연스레 준수하기이다. 뿐만 아니라 1객체 = 1책임인 단일 책임 원칙, 기능별 인터페이스화를 추구하는 인터페이스 분리 원칙을 준수할 경우 역시 마찬가지다."]}],"\n",["$","p","58",{"children":["객체 생성 시 객체로 구현해야할 것과 인터페이스로 구현해야할 것을 적절히 구분하여 올바른 의존 관계를 가지도록 구현하자. 이왕이면 방금 언급한 원칙들을 준수하여 두 마리 토끼를 잡는 것도 매우 좋은 방법일 것이다."]}],"\n",["$","h1",null,{"className":"MarkdownHeading_heading__oazA9 MarkdownHeading_h1__mcnqG","data-component":"MarkdownHeading","node":{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"마치며","position":{"start":{"line":316,"column":3,"offset":6169},"end":{"line":316,"column":6,"offset":6172}}}],"position":{"start":{"line":316,"column":1,"offset":6167},"end":{"line":316,"column":6,"offset":6172}}},"children":["$","$L11",null,{"href":"#마치며","id":"마치며","children":["$","$Lf",null,{"children":[["마치며"],["$","$L15",null,{"paddingTop":1,"children":["$","$L1d",null,{}]}]]}]}]}],"\n",["$","p","62",{"children":["이 장을 끝으로 객체지향에 대한 글을 마무리한다. 지금껏 JAVA라는 객체지향 언어를 사용하고 있었음에도, 정작 객체지향에 대해 너무 몰랐다는 것을 새삼 느낀다. 내가 얼마나 비객체지향적으로 코딩했는지도...."]}],"\n",["$","p","64",{"children":["객체지향에서의 가장 큰 특징이라면 바로 ",["$","span","1",{"className":"blue-400","children":["상속"]}],"일 것이다. 객체지향의 5원칙 중 대부분이 상속과 직/간접적으로 연관된 것만 봐도, 객체지향의 아이덴티티는 상속이라고 할 수 있을 것이다. 그 만큼 객체지향에서 상속은 중요하면서 동시에 이해하기 어려운 개념이다. 잘 쓰기는 더더욱 어렵다."]}],"\n",["$","p","66",{"children":["물론 객체지향의 의의를 온전히 구현하고, 수립된 원칙들을 전부 지키는 것은 시니어급 개발자라도 매우 어려운 일일 것이다. 당장 나 같아도 \"이 많은 걸 다 지켜가며 설계하라고?\"라는 생각이 들고, 대부분의 개발은 구현 과정보단 동작 결과에 치중하기 때문이다."]}],"\n",["$","p","68",{"children":["탄탄한 기획과 이에 동반되는 고민은 견고한 설계가 가능하지만, 언제까지나 시간을 낭비할 수 없는 노릇이다. 아무리 탄탄하게 설계 중인 프로젝트라도 개발 기간을 준수하지 못 하면 결과물은 물론, 이 결과물을 내기까지 했던 모든 고민들이 시간낭비로 치부되는 것을 뻔하다."]}],"\n",["$","p","70",{"children":["이러한 원칙을 정해진 시간 내에 구현해야 하므로, 객체지향을 잘 다루기 위해선 많은 노력이 필요할 것이다."]}]]}],["$","$L20",null,{}]]}],["$","$L1a",null,{"data-component":"ViewAdsTemplate","children":["$","$L21",null,{}]}],["$","$L1a",null,{"data-component":"ViewTagTemplate","children":["$","$Lf",null,{"data-component":"ViewTagBox","spacing":2,"children":[["$","$L19",null,{"fontWeight":"bold","children":"🏷️ Related Tag"}],["$","$L15",null,{"width":"100%","children":[["$","$L15","CS",{"display":"inline-block","paddingBottom":1,"paddingRight":1,"children":["$","$L22",null,{"label":"# CS","size":"medium","variant":"outlined"}]}],["$","$L15","객체지향",{"display":"inline-block","paddingBottom":1,"paddingRight":1,"children":["$","$L22",null,{"label":"# 객체지향","size":"medium","variant":"outlined"}]}],["$","$L15","객체지향 5원칙",{"display":"inline-block","paddingBottom":1,"paddingRight":1,"children":["$","$L22",null,{"label":"# 객체지향 5원칙","size":"medium","variant":"outlined"}]}],["$","$L15","의존성 역전 원칙",{"display":"inline-block","paddingBottom":1,"paddingRight":1,"children":["$","$L22",null,{"label":"# 의존성 역전 원칙","size":"medium","variant":"outlined"}]}],["$","$L15","DIP",{"display":"inline-block","paddingBottom":1,"paddingRight":1,"children":["$","$L22",null,{"label":"# DIP","size":"medium","variant":"outlined"}]}]]}]]}]}],["$","$L1a",null,{"data-component":"ViewControllTemplate","children":["$","$L23",null,{"next":{"frontmatter":{"category":"WEB","coverImage":"https://user-images.githubusercontent.com/50317129/129755999-c5d6c474-d5c0-442a-b7c5-37b3cdf703a9.png","date":1629213968000,"excerpt":"웹을 배포해본 적이 있다면 SSL에 대해 들어본 적이 있을 것이다. SSL이 적용된 URL의 프로토콜은 https://로 시작하며, http://와 달리 보안(Secure)을 의미하는 s가 붙는다. 지금 이 사이트의 주소도 https://blog.itcode.dev로 SSL이 적용된 걸 확인할 수 있다. NAVER나 Google도 마찬가지. 이 처럼 SSL은 굳이 웹 개발자에게만 친숙한 개념이 아니다. 누구나 인터넷을 사용했다면, 좋든 싫든 모두가 SSL을 접했다고 봐도 무방하다.","group":"SSL","title":"[SSL] SSL이란?","type":"posts"},"names":["2021","08","18","about-ssl"],"url":"/posts/2021/08/18/about-ssl"},"prev":"$24","type":"posts"}]}],["$","$L1a",null,{"data-component":"ViewCommentTemplate","children":["$","$Lf",null,{"data-component":"ViewCommentBox","spacing":10,"children":[["$","$Lf",null,{"alignItems":"center","justifyContent":"center","spacing":1,"width":"100%","children":[["$","$L10",null,{"iconName":"heartMessage","width":300}],["$","$L19",null,{"variant":"h5","children":"😍 읽어주셔서 감사합니다!"}],["$","$L19",null,{"variant":"h5","children":["도움이 되셨다면, ",["$","$L19",null,{"color":"hotpink","component":"span","fontWeight":"bold","variant":"inherit","children":"💝공감"}],"이나 ",["$","$L19",null,{"color":"hotpink","component":"span","fontWeight":"bold","variant":"inherit","children":"🗨️댓글"}],"을 달아주시는 건 어떤가요?"]}],["$","$L19",null,{"variant":"h5","children":"블로그 운영에 큰 힘이 됩니다!"}]]}],["$","$Lf",null,{"data-component":"ViewHits","direction":"row","justifyContent":"center","children":["$","img",null,{"alt":"https://blog.itcode.dev/posts/2021/08/17/dependency-inversion-principle","data-component":"Hits","src":"https://hits.seeyoufarm.com/api/count/incr/badge.svg?count_bg=%23333333&icon=react.svg&icon_color=dodgerblue&title=view&title_bg=%23222222&url=https%3A%2F%2Fblog.itcode.dev%2Fposts%2F2021%2F08%2F17%2Fdependency-inversion-principle"}]}],["$","$L27",null,{}]]}]}]]}]]}],["$","$Lf",null,{"alignItems":"center","bottom":20,"data-component":"InteractionBox","direction":"row","position":"fixed","right":20,"spacing":1,"zIndex":10,"children":[["$","$L28",null,{}],["$","$L29",null,{}]]}],["$","$L2a",null,{}],["$","$L2b",null,{}]]}],null],"segment":"__PAGE__?{\"markdown\":[\"posts\",\"2021\",\"08\",\"17\",\"dependency-inversion-principle\"]}"},"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/86391cacb09421ad.css","precedence":"next","crossOrigin":""}]]}],"segment":["markdown","posts/2021/08/17/dependency-inversion-principle","c"]},"styles":null}]}]}]}]}]]}],null]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"[OOP] 객체지향 5원칙(SOLID) - 의존성 역전 원칙 DIP (Dependency Inversion Principle) - 𝝅번째 알파카의 개발 낙서장"}],["$","meta","3",{"name":"description","content":"의존성 역전 원칙이란 객체는 저수준 모듈보다 고수준 모듈에 의존해야한다는 원칙이다. 말이 좀 어렵다. 고수준 모듈은 뭐고, 저수준 모듈은 또 뭐란 말인가? 고/저수준 모델의 정의는 위와 같다. 위 정의를 의존성 역전 원칙에 대입하면, 객체는 객체보다 인터페이스에 의존해야한다로 치환할 수 있다. 즉, 가급적 객체의 상속은 인터페이스를 통해 이루어져야 한다는 의미로 해석할 수 있다."}],["$","link","4",{"rel":"author","href":"https://github.com/RWB0104"}],["$","meta","5",{"name":"author","content":"Kapoo"}],["$","link","6",{"rel":"author","href":"https://www.linkedin.com/in/itcode/"}],["$","meta","7",{"name":"author","content":"RWB"}],["$","link","8",{"rel":"manifest","href":"/manifest.webmanifest"}],["$","meta","9",{"name":"keywords","content":"CS,객체지향,객체지향 5원칙,의존성 역전 원칙,DIP"}],["$","meta","10",{"property":"og:title","content":"[OOP] 객체지향 5원칙(SOLID) - 의존성 역전 원칙 DIP (Dependency Inversion Principle) - 𝝅번째 알파카의 개발 낙서장"}],["$","meta","11",{"property":"og:description","content":"의존성 역전 원칙이란 객체는 저수준 모듈보다 고수준 모듈에 의존해야한다는 원칙이다. 말이 좀 어렵다. 고수준 모듈은 뭐고, 저수준 모듈은 또 뭐란 말인가? 고/저수준 모델의 정의는 위와 같다. 위 정의를 의존성 역전 원칙에 대입하면, 객체는 객체보다 인터페이스에 의존해야한다로 치환할 수 있다. 즉, 가급적 객체의 상속은 인터페이스를 통해 이루어져야 한다는 의미로 해석할 수 있다."}],["$","meta","12",{"property":"og:url","content":"https://blog.itcode.dev/posts/2021/08/17/dependency-inversion-principle"}],["$","meta","13",{"property":"og:site_name","content":"𝝅번째 알파카의 개발 낙서장"}],["$","meta","14",{"property":"og:locale","content":"ko-KR"}],["$","meta","15",{"property":"og:image","content":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png"}],["$","meta","16",{"property":"og:type","content":"website"}],["$","meta","17",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","18",{"name":"twitter:title","content":"[OOP] 객체지향 5원칙(SOLID) - 의존성 역전 원칙 DIP (Dependency Inversion Principle) - 𝝅번째 알파카의 개발 낙서장"}],["$","meta","19",{"name":"twitter:description","content":"의존성 역전 원칙이란 객체는 저수준 모듈보다 고수준 모듈에 의존해야한다는 원칙이다. 말이 좀 어렵다. 고수준 모듈은 뭐고, 저수준 모듈은 또 뭐란 말인가? 고/저수준 모델의 정의는 위와 같다. 위 정의를 의존성 역전 원칙에 대입하면, 객체는 객체보다 인터페이스에 의존해야한다로 치환할 수 있다. 즉, 가급적 객체의 상속은 인터페이스를 통해 이루어져야 한다는 의미로 해석할 수 있다."}],["$","meta","20",{"name":"twitter:image","content":"https://user-images.githubusercontent.com/50317129/128211434-7c28e08b-c867-4b08-98c0-bcf94f0e54b3.png"}],["$","link","21",{"rel":"icon","href":"/favicon.ico"}],["$","link","22",{"rel":"shortcut icon","href":"/favicon.ico"}],["$","link","23",{"rel":"apple-touch-icon","href":"/favicon.ico"}],["$","meta","24",{"name":"next-size-adjust"}]]
14:null
