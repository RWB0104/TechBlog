2:I[31253,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-5ce66bffb923d3fe.js","979","static/chunks/app/page-bebe48635fd1438a.js"],""]
3:I[15441,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-5ce66bffb923d3fe.js","979","static/chunks/app/page-bebe48635fd1438a.js"],"default"]
4:I[75713,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-5ce66bffb923d3fe.js","979","static/chunks/app/page-bebe48635fd1438a.js"],"default"]
5:I[36032,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-5ce66bffb923d3fe.js","979","static/chunks/app/page-bebe48635fd1438a.js"],"default"]
6:I[4816,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-5ce66bffb923d3fe.js","979","static/chunks/app/page-bebe48635fd1438a.js"],""]
7:I[67425,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","625","static/chunks/625-408aa606d9dbee89.js","48","static/chunks/48-5ce66bffb923d3fe.js","78","static/chunks/app/%5B...markdown%5D/page-0a77680d45ac2e6d.js"],"default"]
8:I[28676,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","625","static/chunks/625-408aa606d9dbee89.js","48","static/chunks/48-5ce66bffb923d3fe.js","78","static/chunks/app/%5B...markdown%5D/page-0a77680d45ac2e6d.js"],"default"]
9:I[12168,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-5ce66bffb923d3fe.js","979","static/chunks/app/page-bebe48635fd1438a.js"],""]
a:I[25737,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","625","static/chunks/625-408aa606d9dbee89.js","48","static/chunks/48-5ce66bffb923d3fe.js","78","static/chunks/app/%5B...markdown%5D/page-0a77680d45ac2e6d.js"],"default"]
b:I[50979,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","625","static/chunks/625-408aa606d9dbee89.js","48","static/chunks/48-5ce66bffb923d3fe.js","78","static/chunks/app/%5B...markdown%5D/page-0a77680d45ac2e6d.js"],"default"]
c:I[66560,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-5ce66bffb923d3fe.js","979","static/chunks/app/page-bebe48635fd1438a.js"],""]
d:I[29936,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","625","static/chunks/625-408aa606d9dbee89.js","48","static/chunks/48-5ce66bffb923d3fe.js","78","static/chunks/app/%5B...markdown%5D/page-0a77680d45ac2e6d.js"],"default"]
f:I[89791,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","625","static/chunks/625-408aa606d9dbee89.js","48","static/chunks/48-5ce66bffb923d3fe.js","78","static/chunks/app/%5B...markdown%5D/page-0a77680d45ac2e6d.js"],"default"]
10:I[5760,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-5ce66bffb923d3fe.js","979","static/chunks/app/page-bebe48635fd1438a.js"],""]
11:I[98918,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-5ce66bffb923d3fe.js","979","static/chunks/app/page-bebe48635fd1438a.js"],"default"]
12:I[21055,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-5ce66bffb923d3fe.js","979","static/chunks/app/page-bebe48635fd1438a.js"],"default"]
13:I[44271,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-5ce66bffb923d3fe.js","979","static/chunks/app/page-bebe48635fd1438a.js"],"default"]
14:I[95534,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","625","static/chunks/625-408aa606d9dbee89.js","48","static/chunks/48-5ce66bffb923d3fe.js","78","static/chunks/app/%5B...markdown%5D/page-0a77680d45ac2e6d.js"],"default"]
15:I[11494,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","625","static/chunks/625-408aa606d9dbee89.js","48","static/chunks/48-5ce66bffb923d3fe.js","78","static/chunks/app/%5B...markdown%5D/page-0a77680d45ac2e6d.js"],"default"]
16:I[35559,["746","static/chunks/395b46ae-d1f3c4e0e7243a60.js","128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","622","static/chunks/622-c69f910e2c9609c0.js","625","static/chunks/625-408aa606d9dbee89.js","48","static/chunks/48-5ce66bffb923d3fe.js","78","static/chunks/app/%5B...markdown%5D/page-0a77680d45ac2e6d.js"],"default"]
17:I[43439,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-5ce66bffb923d3fe.js","979","static/chunks/app/page-bebe48635fd1438a.js"],"default"]
18:I[20140,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-5ce66bffb923d3fe.js","979","static/chunks/app/page-bebe48635fd1438a.js"],""]
19:I[42019,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-5ce66bffb923d3fe.js","979","static/chunks/app/page-bebe48635fd1438a.js"],""]
1a:I[36139,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-5ce66bffb923d3fe.js","979","static/chunks/app/page-bebe48635fd1438a.js"],""]
1b:I[94634,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-5ce66bffb923d3fe.js","979","static/chunks/app/page-bebe48635fd1438a.js"],""]
1c:I[3812,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-5ce66bffb923d3fe.js","979","static/chunks/app/page-bebe48635fd1438a.js"],""]
1d:I[20015,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-5ce66bffb923d3fe.js","979","static/chunks/app/page-bebe48635fd1438a.js"],""]
1e:I[91417,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-5ce66bffb923d3fe.js","979","static/chunks/app/page-bebe48635fd1438a.js"],""]
1f:I[17186,["128","static/chunks/128-f15a9902e71a0cfb.js","909","static/chunks/909-97e7151ede91fad6.js","623","static/chunks/623-76104f245c39a5c2.js","48","static/chunks/48-5ce66bffb923d3fe.js","979","static/chunks/app/page-bebe48635fd1438a.js"],""]
20:I[80560,[],""]
22:I[3602,[],""]
23:"$Sreact.suspense"
24:I[89696,["128","static/chunks/128-f15a9902e71a0cfb.js","622","static/chunks/622-c69f910e2c9609c0.js","965","static/chunks/965-368bab8011421292.js","185","static/chunks/app/layout-d66e85fa2d232267.js"],"default"]
25:I[53327,["128","static/chunks/128-f15a9902e71a0cfb.js","622","static/chunks/622-c69f910e2c9609c0.js","965","static/chunks/965-368bab8011421292.js","185","static/chunks/app/layout-d66e85fa2d232267.js"],"default"]
26:I[31798,["128","static/chunks/128-f15a9902e71a0cfb.js","622","static/chunks/622-c69f910e2c9609c0.js","965","static/chunks/965-368bab8011421292.js","185","static/chunks/app/layout-d66e85fa2d232267.js"],"default"]
27:I[90085,["128","static/chunks/128-f15a9902e71a0cfb.js","622","static/chunks/622-c69f910e2c9609c0.js","965","static/chunks/965-368bab8011421292.js","185","static/chunks/app/layout-d66e85fa2d232267.js"],"default"]
28:I[29459,["128","static/chunks/128-f15a9902e71a0cfb.js","622","static/chunks/622-c69f910e2c9609c0.js","965","static/chunks/965-368bab8011421292.js","185","static/chunks/app/layout-d66e85fa2d232267.js"],"default"]
e:T4104,
# ACM Craft

|                            랭크                            |                                                      사용 언어                                                      |
| :--------------------------------------------------------: | :-----------------------------------------------------------------------------------------------------------------: |
| ![null](https://d2gd6pc034wcta.cloudfront.net/tier/13.svg) | ![JAVA](https://shields.io/badge/java-JDK%2014-lightgray?logo=java&style=plastic&logoColor=white&labelColor=orange) |

🔗 [전체 1005번 문제](https://www.acmicpc.net/problem/1005)

## 조건

| 시간제한 | 메모리 제한 |
| :------: | :---------: |
|   1초    |    512MB    |

## 문제

서기 2012년! 드디어 2년간 수많은 국민들을 기다리게 한 게임 ACM Craft(Association of Construction Mananger Craft)가 발매되었다.

이 게임은 지금까지 나온 게임들과는 다르게 ACM Craft는 다이나믹한 게임 진행을 위해 건물을 짓는 순서가 정해져있지 않다. 즉, 첫 번째 게임과 두 번째 게임이 건물을 짓는 순서가 다를 수도 있다. 매 게임시작 시 건물을 짓는 순서가 주어진다. 또한 모든 건물은 각각 건설을 시작하여 완성이 될 때까지 Delay가 존재한다.

![null](https://user-images.githubusercontent.com/50317129/120219763-b1cf1480-c276-11eb-8131-a3471db1cfc4.png)

위의 예시를 보자.

이번 게임에서는 다음과 같이 건설 순서 규칙이 주어졌다. 1번 건물의 건설이 완료된다면 2번과 3번의 건설을 시작할 수 있다. (동시에 진행이 가능하다.) 그리고 4번 건물을 짓기 위해서는 2번과 3번 건물이 모두 건설 완료되어야지만 4번 건물의 건설을 시작할 수 있다.

따라서 4번 건물의 건설을 완료하기 위해서는 우선 처음 1번 건물을 건설하는데 10초가 소요된다. 그리고 2번 건물와 3번 건물을 동시에 건설하기 시작하면 2번은 1초 뒤에 건설이 완료되지만 아직 3번 건물이 완료되지 않았으므로 4번 건물을 건설할 수 없다. 3번 건물이 완성되고 나면 그때 4번 건물을 지을 수 있으므로 4번 건물이 완성되기까지는 총 120초가 소요된다.

프로게이머 최백준은 애인과의 데이트 비용을 마련하기 위해 서강대학교배 ACM Craft 대회에 참가했다! 최백준은 화려한 컨트롤 실력을 가지고 있기 때문에 모든 경기에서 특정 건물만 짓는다면 무조건 게임에서 이길 수 있다. 그러나 매 게임마다 특정 건물을 짓기 위한 순서가 달라지므로 최백준은 좌절하고 있었다. 백준이를 위해 특정 건물을 가장 빨리 지을 때까지 걸리는 최소시간을 알아내는 프로그램을 작성해주자.

## 입력

첫째 줄에는 테스트케이스의 갯수 $T$가 주어진다. 각 테스트 케이스는 다음과 같이 주어진다, 첫째 줄에 건물의 갯수 $N$과 건물 간의 건설순서 규칙의 총 갯수 $K$가 주어진다.(전물의 번호는 1번 부터 $N$번 까지 존재한다.)

둘째 줄에는 각 건물 당 건설에 걸리는 시간 $D$가 공백을 사이로 주어진다. 셋째 줄부터 $K + 2$줄 까지 건설순서 $X$ $Y$가 주어진다.(이는 건물 X를 지은 다음에 건물 $Y$를 짓는 것이 가능하다는 의미이다.)

마지막 줄에는 백준이가 승리하기 위해 건설해야 할 건물의 번호 $W$가 주어진다.

## 출력

건물 $W$를 건설완료 하는데 드는 최소 시간을 출력한다. 편의상 건물을 짓는 명령을 내리는 데는 시간이 소요되지 않는다고 가정한다.  
건설순서는 모든 건물이 건설 가능하도록 주어진다.

## 제한

* $2 ≤ N ≤ 1,000$
* $1 ≤ K ≤ 100,000$
* $1 ≤ X, Y, W ≤ N$
* $0 ≤ D ≤ 100,000)$ $D$는 정수

## 케이스

### 예제 1

+ 입력

``` tc
2
4 4
10 1 100 10
1 2
1 3
2 4
3 4
4
8 8
10 20 1 5 8 7 1 43
1 2
1 3
2 4
2 5
3 6
5 7
6 7
7 8
7
```
+ 출력

``` tc
120
39
```

### 예제 2

+ 입력

``` tc
5
3 2
1 2 3
3 2
2 1
1
4 3
5 5 5 5
1 2
1 3
2 3
4
5 10
100000 99999 99997 99994 99990
4 5
3 5
3 4
2 5
2 4
2 3
1 5
1 4
1 3
1 2
4
4 3
1 1 1 1
1 2
3 2
1 4
4
7 8
0 0 0 0 0 0 0
1 2
1 3
2 4
3 4
4 5
4 6
5 7
6 7
7
```

+ 출력

``` tc
6
5
399990
2
0
```

# 풀이

문제는 이해가 되는데, 이를 코딩으로 풀어내기가 어려웠던 알고리즘. <span class="blue-400">위상정렬</span> 알고리즘에 대한 이해가 있어야한다.  
문제의 경우, 스타크래프트의 건물 테크트리랑 비슷한 개념으로 접근하면 된다. 군수공장을 짓기 위해선 병영을 지어야하는 것처럼, 요구 트리가 있는 건물의 경우 해당 건물을 반드시 완료해야 하며, 하나의 건물이 여러 요구 트리를 가질 경우도 존재한다. 물론 이 경우 요구하는 건물들을 **모두** 건설한 뒤에 건설 가능하다. 요구하는 건물들 중 하나만 건설하면 충족되는게 아니다.

<span class="blue-400">위상정렬</span>은 <span class="green-A400">순서가 정해진 작업을 수행할 때, 이 순서를 결정하는 알고리즘</span>이다. <span class="blue-400">위상정렬</span>은 반드시 DAG(Directed Acyclic Graph, 유향 비순환 그래프) 형태여야 한다. 즉, 순서를 도식화했을 때 반드시 <span class="red-A400">시작/도착점이 존재</span>해야 한다. 시작/도착점이 구분되지 않는 순환 형태일 경우 위상정렬을 적용할 수 없다.

위상정렬은 순서를 정하는 알고리즘이고, 순서도의 형태에 따라 여러가지의 답이 나올 수 있다. 이 문제는 최적의 답을 도출하기 위해 각 **건물을 건설하는데 필요한 요구 건물**과 **건설 시간**을 적용했다.

다음 건물을 건설하기 위해선 요구 건물을 모두 건설해야하므로 요구 건물의 건설시간이 가장 많은 건물이 다음 순서가 된다.

![null](https://user-images.githubusercontent.com/50317129/120219453-3b321700-c276-11eb-9029-ec105c694854.png)

예시 1번의 두 번째 케이스를 예시로 하여 위상정렬을 도식화하면 위 사진과 같다.

|  노드  |   1   |   2   |   3   |   4   |   5   |   6   |   7   |   8   |
| :----: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |
| 진입선 |   0   |   1   |   1   |   1   |   1   |   1   |   2   |   1   |
|  시간  |  10   |  20   |   1   |   5   |   8   |   7   |   1   |  43   |

위 표는 도식를 수치화하여 정리한 것이다.

<br />
<br />

<span class="large orange-A400">1. 순서의 시작점(진입선이 없는 점)을 찾는다. 시작점이 여러개일 경우 시작점 중 무작위로 하나를 선택해도 무방하다. (위 예시는 시작점이 하나)</span>

![null](https://user-images.githubusercontent.com/50317129/120219469-4127f800-c276-11eb-91c8-db36e543c217.png)

<br />
<br />

<span class="large orange-A400">2. 시작점 1을 큐에 넣고, 시작점에 연결된 진출선을 전부 제거한다.</span>

![null](https://user-images.githubusercontent.com/50317129/120219471-438a5200-c276-11eb-9cd3-ca5f31dfb19b.png)

|  노드  |   1   |   2   |   3   |   4   |   5   |   6   |   7   |   8   |
| :----: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |
| 진입선 |   -   |   0   |   0   |   1   |   1   |   1   |   2   |   1   |
|  시간  |  10   |  20   |   1   |   5   |   8   |   7   |   1   |  43   |

|  큐   |   1   |
| :---: | :---: |

이 과정에서 2와 3이 새로운 시작점이 된 것을 확인할 수 있다.

1을 건설하는데 걸리는 시간은 1초.

<br />
<br />

<span class="large orange-A400">3. 2에 대해 2번 과정을 적용한다.</span>

![null](https://user-images.githubusercontent.com/50317129/120219484-45ecac00-c276-11eb-8114-a6c4c8b17036.png)

|  노드  |   1   |   2   |   3   |   4   |   5   |   6   |   7   |   8   |
| :----: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |
| 진입선 |   -   |   -   |   0   |   0   |   0   |   1   |   2   |   1   |
|  시간  |  10   |  20   |   1   |   5   |   8   |   7   |   1   |  43   |

|  큐   |   1   |   2   |
| :---: | :---: | :---: |

4와 5의 진입선이 0이 된다. 즉, 4와 5를 건설할 수 있게 된다.

2를 건설하는데는 $10(1) + 20(2)$로 총 30초가 소요된다.

<br />
<br />

<span class="large orange-A400">4. 3에 대해 2번 과정을 적용한다.</span>

![null](https://user-images.githubusercontent.com/50317129/120219493-48e79c80-c276-11eb-8f48-cf132cab8f5c.png)

|  노드  |   1   |   2   |   3   |   4   |   5   |   6   |   7   |   8   |
| :----: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |
| 진입선 |   -   |   -   |   -   |   0   |   0   |   0   |   2   |   1   |
|  시간  |  10   |  20   |   1   |   5   |   8   |   7   |   1   |  43   |

|  큐   |   1   |   2   |   3   |
| :---: | :---: | :---: | :---: |

6의 진입선이 0이 된다. 6을 건설할 수 있게 된다.

3의 건설시간은 $10(1) + 1(3)$으로 총 11초.

<br />
<br />

<span class="large orange-A400">5. 4에 대해 2번 과정을 적용한다.</span>

![null](https://user-images.githubusercontent.com/50317129/120219504-4be28d00-c276-11eb-9b40-07c5ea51cbd9.png)

|  노드  |   1   |   2   |   3   |   4   |   5   |   6   |   7   |   8   |
| :----: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |
| 진입선 |   -   |   -   |   -   |   -   |   0   |   0   |   2   |   1   |
|  시간  |  10   |  20   |   1   |   5   |   8   |   7   |   1   |  43   |

|  큐   |   1   |   2   |   3   |   4   |
| :---: | :---: | :---: | :---: | :---: |

4는 진출선이 없으므로 큐에만 추가된다.

4의 건설시간은 $10(1) + 20(2) + 5(4)$로 총 35초

<br />
<br />

<span class="large orange-A400">6. 5에 대해 2번 과정을 적용한다.</span>

![null](https://user-images.githubusercontent.com/50317129/120219509-4edd7d80-c276-11eb-9c5f-fc17d373bf50.png)

|  노드  |   1   |   2   |   3   |   4   |   5   |   6   |   7   |   8   |
| :----: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |
| 진입선 |   -   |   -   |   -   |   -   |   -   |   0   |   1   |   1   |
|  시간  |  10   |  20   |   1   |   5   |   8   |   7   |   1   |  43   |

|  큐   |   1   |   2   |   3   |   4   |   5   |
| :---: | :---: | :---: | :---: | :---: | :---: |

7이 5와 6에 연결되어 있으므로, 7의 진입선은 1이 된다. 아직 7을 건설할 수 없다.

5의 건설시간은 $10(1) + 20(2) + 8(5)$로 총 38초

<br />
<br />

<span class="large orange-A400">7. 6에 대해 2번 과정을 적용한다.</span>

![null](https://user-images.githubusercontent.com/50317129/120219520-53099b00-c276-11eb-9c99-060dcd2039d8.png)

|  노드  |   1   |   2   |   3   |   4   |   5   |   6   |   7   |   8   |
| :----: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |
| 진입선 |   -   |   -   |   -   |   -   |   -   |   -   |   0   |   1   |
|  시간  |  10   |  20   |   1   |   5   |   8   |   7   |   1   |  43   |

|  큐   |   1   |   2   |   3   |   4   |   5   |   6   |
| :---: | :---: | :---: | :---: | :---: | :---: | :---: |

7의 진입선이 0이 된다. 7을 건설할 수 있게 된다.

6의 건설시간은 $10(1) + 1(3) + 7(6)$으로 총 18초.

<br />
<br />

<span class="large orange-A400">8. 7에 대해 2번 과정을 적용한다.</span>

![null](https://user-images.githubusercontent.com/50317129/120219527-56048b80-c276-11eb-866b-9b411445b22b.png)

|  노드  |   1   |   2   |   3   |   4   |   5   |   6   |   7   |   8   |
| :----: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |
| 진입선 |   -   |   -   |   -   |   -   |   -   |   -   |   -   |   0   |
|  시간  |  10   |  20   |   1   |   5   |   8   |   7   |   1   |  43   |

|  큐   |   1   |   2   |   3   |   4   |   5   |   6   |   7   |
| :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |

8의 진입선이 0이 된다.

1 ~ 6까지는 요구 건물이 하나였지만, 7은 두개이다. 앞서 언급했듯이, 5와 6 중 건설시간이 더 긴 것을 기준으로 계산해야한다.

즉, 7의 건설시간은 $10(1) + 20(2) + 8(5) + 1(7)$로 총 39초

5번을 기준으로 계산하므로, <span class="red-A400">6번과 중간인 3번은 계산에서 제외</span>된다. 만약, 3의 건설시간을 1초에서 4초로 증가시켜도 결과에 영향을 미치지 않는다. 3의 건설시간을 무시하기 때문이다. 단, 3의 건설시간이 너무 커지게되면 5보다 6의 건설시간이 같이 커지게 되어 결과에 영향을 미치게 된다.

<br />
<br />

<span class="large orange-A400">9. 8에 대해 2번 과정을 적용한다.</span>

![null](https://user-images.githubusercontent.com/50317129/120219535-58ff7c00-c276-11eb-907c-2a90cc84c596.png)

|  노드  |   1   |   2   |   3   |   4   |   5   |   6   |   7   |   8   |
| :----: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |
| 진입선 |   -   |   -   |   -   |   -   |   -   |   -   |   -   |   -   |
|  시간  |  10   |  20   |   1   |   5   |   8   |   7   |   1   |  43   |

|  큐   |   1   |   2   |   3   |   4   |   5   |   6   |   7   |   8   |
| :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |

문제는 7에 대한 건설시간을 요구하고 있으므로 8은 무시해도 무방하다. 
8의 건설시간은 $10(1) + 20(2) + 8(5) + 1(7) + 43(8)$로 총 82초

## 전체 소스

`time`, `matrix`, `link`의 배열 크기가 $N + 1$이다. 별다른 이유는 아니고, 건물은 1번부터 시작하는데 배열은 0번부터 시작한다. 이러한 차이에서 오는 혼란을 방지하기 위해 건물이 총 4개면 배열의 크기를 5로(0, 1, 2, 3, 4, 5)로 지정하여 0을 제외하고 1부터 사용한다.

``` java
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

/**
 * 백준 전체 1005 문제 알고리즘 클래스
 *
 * @author RWB
 * @see <a href="https://blog.itcode.dev/posts/2021/06/01/a1005">1005 풀이</a>
 * @since 2021.05.31 Mon 19:11:58
 */
public class Main
{
	/**
	 * 메인 함수
	 *
	 * @param args: [String[]] 매개변수
	 */
	public static void main(String[] args)
	{
		Scanner scanner = new Scanner(System.in);
		
		StringBuilder builder = new StringBuilder();
		
		// 케이스 갯수
		int T = scanner.nextInt();
		
		for (int i = 0; i < T; i++)
		{
			// 건물 갯수
			int N = scanner.nextInt();
			
			// 규칙(건설시간) 갯수
			int K = scanner.nextInt();
			
			// 건물별 건설시간 배열
			int[] time = new int[N + 1];
			
			// 건물별 연결여부 배열
			boolean[][] matrix = new boolean[N + 1][N + 1];
			
			// 건물별 연결 갯수 배열
			int[] link = new int[N + 1];
			
			for (int j = 1; j < N + 1; j++)
			{
				time[j] = scanner.nextInt();
			}
			
			for (int j = 0; j < K; j++)
			{
				// 하위 건물
				int X = scanner.nextInt();
				
				// 상위 건물
				int Y = scanner.nextInt();
				
				matrix[X][Y] = true;
				link[Y]++;
			}
			
			// 목표 건물
			int W = scanner.nextInt();
			
			builder.append(calcTopologicalSort(time, matrix, link)[W]).append("\n");
		}
		
		System.out.println(builder.toString());
		
		scanner.close();
	}
	
	/**
	 * 위상정렬 결과 반환 함수
	 *
	 * @param time: [int[]] 건물별 건설시간
	 * @param matrix: [boolean[][]] 건물별 연결여부
	 * @param link: [int[]] 건물별 연결 갯수
	 *
	 * @return [int[]] 건물별 종 건설시간 배열
	 */
	private static int[] calcTopologicalSort(int[] time, boolean[][] matrix, int[] link)
	{
		Queue<Integer> queue = new LinkedList<>();
		
		int[] result = new int[link.length];
		
		for (int i = 1; i < link.length; i++)
		{
			// 요구 건물이 없는 건물일 경우
			if (link[i] == 0)
			{
				result[i] = time[i];
				queue.add(i);
			}
		}
		
		while (!queue.isEmpty())
		{
			// 하위 건물
			int prev = queue.poll();
			
			for (int i = 1; i < link.length; i++)
			{
				// 하위 건물 건설을 요구 하는 건물일 경우
				if (matrix[prev][i])
				{
					result[i] = Math.max(result[i], result[prev] + time[i]);
					
					// 해당 건물의 요구 건물 갯수 1 감소
					--link[i];
					
					// 요구 건물이 없는 건물일 경우
					if (link[i] == 0)
					{
						queue.add(i);
					}
				}
			}
		}
		
		return result;
	}
}
```

## 분류

* 다이나믹 프로그래밍
* 그래프 이론
* 위상 정렬21:["markdown","posts/2021/06/01/a1005","c"]
0:["hFYME0bYwoaVQ7GjO0LBE",[[["",{"children":[["markdown","posts/2021/06/01/a1005","c"],{"children":["__PAGE__?{\"markdown\":[\"posts\",\"2021\",\"06\",\"01\",\"a1005\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["markdown","posts/2021/06/01/a1005","c"],{"children":["__PAGE__",{},[["$L1",["$","$L2",null,{"component":"main","data-component":"PageTemplate","children":[["$","$L3",null,{"title":"𝝅번째 알파카의 개발 낙서장","version":"5.0.0-beta11"}],[["$","$L4",null,{"src":"https://user-images.githubusercontent.com/50317129/120028591-d5ece480-c02f-11eb-88f0-e14fc647dd81.png","children":["$","$L2",null,{"className":"MarkdownScreenerTemplate_root__dpmgV","data-component":"BaseScreenerTemplate","height":"100%","position":"relative","width":"100%","children":[["$","$L5",null,{"alignItems":"center","height":"100%","justifyContent":"center","padding":2,"position":"relative","width":"100%","children":[["$","$L5",null,{"direction":"row","children":[["$","$L2",null,{"bgcolor":"dodgerblue","boxShadow":"0px 0px 5px black","height":"100%","width":5}],["$","$L5",null,{"color":"white","paddingLeft":2,"paddingRight":2,"children":[["$","$L6",null,{"className":"MarkdownScreenerTemplate_text__5_mNa","fontWeight":"bold","variant":"h5","children":"[백준 / JAVA] 백준 알고리즘 1005번 ACM Craft"}],["$","$L6",null,{"className":"MarkdownScreenerTemplate_text__5_mNa","children":"⏰ 2021-05-31 (월) 16:27:56"}]]}]]}],["$","$L7",null,{"bottom":"10%","direction":"row","gap":4,"position":"absolute","shareData":{"text":"서기 2012년! 드디어 2년간 수많은 국민들을 기다리게 한 게임 ACM Craft(Association of Construction Mananger Craft)가 발매되었다. 이 게임은 지금까지 나온 게임들과는 다르게 ACM Craft는 다이나믹한 게임 진행을 위해 건물을 짓는 순서가 정해져있지 않다. 즉, 첫 번째 게임과 두 번째 게임이 건물을 짓는 순서가 다를 수도 있다. 매 게임시작 시 건물을 짓는 순서가 주어진다. 또한 모든 건물은 각각 건설을 시작하여 완성이 될 때까지 Delay가 존재한다.","title":"[백준 / JAVA] 백준 알고리즘 1005번 ACM Craft","url":"https://blog.itcode.dev/posts/2021/06/01/a1005"}}]]}],["$","$L2",null,{"bottom":0,"left":0,"position":"absolute","width":"100%","children":["$","svg",null,{"className":"Wave_waves___Plcn","data-component":"Wave","height":80,"preserveAspectRatio":"none","shapeRendering":"auto","viewBox":"0 24 150 28","width":"100%","xmlns":"http://www.w3.org/2000/svg","children":[["$","defs",null,{"children":["$","path",null,{"d":"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z","id":"gentle-wave"}]}],["$","g",null,{"className":"Wave_parallax__AGFbj","children":[["$","use",null,{"fill":"$undefined","opacity":"0.7","x":"48","xlinkHref":"#gentle-wave","y":"0"}],["$","use",null,{"fill":"$undefined","opacity":"0.5","x":"48","xlinkHref":"#gentle-wave","y":"3"}],["$","use",null,{"fill":"$undefined","opacity":"0.3","x":"48","xlinkHref":"#gentle-wave","y":"5"}],["$","use",null,{"fill":"$undefined","x":"48","xlinkHref":"#gentle-wave","y":"7"}]]}]]}]}]]}]}],[["$","$L8",null,{"color":"dodgerblue"}],["$","$L9",null,{"children":["$","$L5",null,{"gap":4,"paddingTop":10,"children":[["$","$La",null,{"current":"/posts/2021/06/01/a1005","groups":[{"title":"[백준 / JAVA] 백준 알고리즘 1021번 회전하는 큐","url":"/posts/2021/08/26/a1021"},{"title":"[백준 / JAVA] 백준 알고리즘 1020번 디지털 카운터","url":"/posts/2021/08/24/a1020"},{"title":"[백준 / JAVA] 백준 알고리즘 1019번 책 페이지","url":"/posts/2021/06/28/a1019"},{"title":"[백준 / JAVA] 백준 알고리즘 1018번 체스판 다시 칠하기","url":"/posts/2021/06/26/a1018"},{"title":"[백준 / JAVA] 백준 알고리즘 1017번 소수 쌍","url":"/posts/2021/06/26/a1017"},{"title":"[백준 / JAVA] 백준 알고리즘 1016번 제곱 ㄴㄴ수","url":"/posts/2021/06/23/a1016"},{"title":"[백준 / JAVA] 백준 알고리즘 1015번 수열 정렬","url":"/posts/2021/06/22/a1015"},{"title":"[백준 / JAVA] 백준 알고리즘 1014번 컨닝","url":"/posts/2021/06/18/a1014"},{"title":"[백준 / JAVA] 백준 알고리즘 1013번 Contact","url":"/posts/2021/06/13/a1013"},{"title":"[백준 / JAVA] 백준 알고리즘 1012번 유기농 배추","url":"/posts/2021/06/13/a1012"},{"title":"[백준 / JAVA] 백준 알고리즘 1011번 Fly me to the Alpha Centauri","url":"/posts/2021/06/11/a1011"},{"title":"[백준 / JAVA] 백준 알고리즘 1010번 다리 놓기","url":"/posts/2021/06/09/a1010"},{"title":"[백준 / JAVA] 백준 알고리즘 1009번 분산처리","url":"/posts/2021/06/09/a1009"},{"title":"[백준 / JAVA] 백준 알고리즘 1008번 A / B","url":"/posts/2021/06/09/a1008"},{"title":"[백준 / JAVA] 백준 알고리즘 1007번 벡터","url":"/posts/2021/06/09/a1007"},{"title":"[백준 / JAVA] 백준 알고리즘 1006번 습격자 초라기","url":"/posts/2021/06/06/a1006"},{"title":"[백준 / JAVA] 백준 알고리즘 1005번 ACM Craft","url":"/posts/2021/06/01/a1005"},{"title":"[백준 / JAVA] 백준 알고리즘 1004번 어린 왕자","url":"/posts/2021/05/22/a1004"},{"title":"백준 알고리즘 시작하기","url":"/posts/2021/05/21/start-beakjoon"},{"title":"[백준 / JAVA] 백준 알고리즘 1003번 피보나치 함수","url":"/posts/2021/05/21/a1003"},{"title":"[백준 / JAVA] 백준 알고리즘 1002번 터렛","url":"/posts/2021/05/21/a1002"},{"title":"[백준 / JAVA] 백준 알고리즘 1001번 A - B","url":"/posts/2021/05/21/a1001"},{"title":"[백준 / JAVA] 백준 알고리즘 1000번 A + B","url":"/posts/2021/05/21/a1000"}],"thumbnail":"https://user-images.githubusercontent.com/50317129/120028591-d5ece480-c02f-11eb-88f0-e14fc647dd81.png","title":"백준 알고리즘"}],["$","$Lb",null,{"list":[{"idx":"1.","level":1,"text":"ACM Craft"},{"idx":"1.1.","level":2,"text":"조건"},{"idx":"1.2.","level":2,"text":"문제"},{"idx":"1.3.","level":2,"text":"입력"},{"idx":"1.4.","level":2,"text":"출력"},{"idx":"1.5.","level":2,"text":"제한"},{"idx":"1.6.","level":2,"text":"케이스"},{"idx":"1.6.1.","level":3,"text":"예제 1"},{"idx":"1.6.2.","level":3,"text":"예제 2"},{"idx":"2.","level":1,"text":"풀이"},{"idx":"2.1.","level":2,"text":"전체 소스"},{"idx":"2.2.","level":2,"text":"분류"}]}],["$","$Lc",null,{"variant":"fullWidth"}],["$","$Ld",null,{"children":"$e"}],["$","$Lc",null,{"variant":"fullWidth"}],["$","$Lf",null,{"tags":["백준","알고리즘","JAVA(자바)","Dynamic Programming(동적 프로그래밍)","위상 정렬","GOLD","GOLD III"],"type":"posts"}],["$","$L5",null,{"alignItems":"center","data-component":"LabNameTag","width":"100%","children":["$","$L2",null,{"boxShadow":"0px 0px 10px #00000050","maxWidth":250,"width":"100%","children":["$","$L10",null,{"href":"https://itcode.dev","target":"_blank","children":["$","$L11",null,{"scale":1.1,"children":[["$","$L2",null,{"borderRadius":2,"className":"NameTag_tag__DZCHu","data-component":"NameTag","padding":1,"sx":{"background":"linear-gradient(45deg, #833AB4, #FD2B20, #fCAA43)"},"children":["$","$L5",null,{"borderRadius":2,"color":"white","gap":3,"padding":2,"children":[["$","$L2",null,{"className":"Tile_tile__czq9P","data-component":"Tile","overflow":"hidden","position":"relative","children":["$","$L2",null,{"height":"100%","left":0,"position":"absolute","top":0,"width":"100%","children":["$","$L12",null,{"src":"https://itcode.dev/logo.png"}]}]}],["$","$L2",null,{"borderTop":"1px solid white","width":"100%"}],["$","$L5",null,{"gap":1,"children":[["$","$L6",null,{"color":"inherit","fontWeight":"bold","children":"𝝅번째 알파카의 개발 연구소"}],["$","$L2",null,{"color":"inherit","width":"100%","children":["$","$L6",null,{"variant":"caption","children":"이 카드를 클릭하고 𝝅번째 알파카의 개발 연구소의 다양한 프로젝트를 확인해보세요!"}]}]]}]]}]}],["$","$L13",null,{}]]}]}]}]}],["$","$L14",null,{"next":{"thumbnail":"https://user-images.githubusercontent.com/50317129/120613280-0a79f980-c491-11eb-81a9-15e63062db75.png","title":"Compiler(컴파일러) & Interpreter(인터프리터)","url":"/posts/2021/06/03/compiler-interpreter"},"prev":{"thumbnail":"https://user-images.githubusercontent.com/50317129/120079117-78b76880-c0ed-11eb-944d-c0d020228db3.png","title":"Unsupported major.minor version 에러 해결하기 (+Servlet 404 에러)","url":"/posts/2021/05/30/unsupported-version-error"},"type":"posts"}],["$","$L5",null,{"alignItems":"center","justifyContent":"center","width":"100%","children":["$","$L11",null,{"children":["$","$L5",null,{"alignItems":"center","bgcolor":"lemonchiffon","borderRadius":1,"boxShadow":"0px 0px 10px #00000030","component":"div","data-component":"ThanksCard","direction":"row","gap":2,"padding":2,"children":[["$","$L15",null,{"iconName":"love-message-burst","width":100}],["$","$L5",null,{"children":[["$","$L6",null,{"color":"black","variant":"h6","gutterBottom":true,"children":"읽어주셔서 고마워요!"}],["$","$L6",null,{"color":"black","children":["도움이 되셨다면, ",["$","$L6",null,{"color":"hotpink","component":"span","fontWeight":"bold","children":"공감"}],"이나 ",["$","$L6",null,{"color":"dodgerblue","component":"span","fontWeight":"bold","children":"댓글"}],"을 달아주시는 건 어떤가요?"]}],["$","$L6",null,{"color":"black","children":"블로그 운영에 큰 힘이 됩니다."}]]}]]}]}]}],["$","$L7",null,{"direction":"row","gap":4,"iconColor":"inherit","justifyContent":"center","shareData":{"text":"서기 2012년! 드디어 2년간 수많은 국민들을 기다리게 한 게임 ACM Craft(Association of Construction Mananger Craft)가 발매되었다. 이 게임은 지금까지 나온 게임들과는 다르게 ACM Craft는 다이나믹한 게임 진행을 위해 건물을 짓는 순서가 정해져있지 않다. 즉, 첫 번째 게임과 두 번째 게임이 건물을 짓는 순서가 다를 수도 있다. 매 게임시작 시 건물을 짓는 순서가 주어진다. 또한 모든 건물은 각각 건설을 시작하여 완성이 될 때까지 Delay가 존재한다.","title":"[백준 / JAVA] 백준 알고리즘 1005번 ACM Craft","url":"/posts/2021/06/01/a1005"}}],["$","$L16",null,{}],["$","$L5",null,{"alignItems":"center","children":["$","img",null,{"alt":"https://hits.seeyoufarm.com/api/count/incr/badge.svg?count_bg=%23484848&icon=react.svg&icon_color=dodgerblue&title=view&title_bg=%23242424&url=https%3A%2F%2Fblog.itcode.dev%2Fposts%2F2021%2F06%2F01%2Fa1005","data-component":"Hits","src":"https://hits.seeyoufarm.com/api/count/incr/badge.svg?count_bg=%23484848&icon=react.svg&icon_color=dodgerblue&title=view&title_bg=%23242424&url=https%3A%2F%2Fblog.itcode.dev%2Fposts%2F2021%2F06%2F01%2Fa1005"}]}]]}]}]]],["$","$L2",null,{"component":"footer","data-component":"Footer","marginTop":10,"children":[["$","$L2",null,{"position":"relative","children":[["$","$L17",null,{}],["$","$L2",null,{"bottom":-20,"className":"Footer_ship__VuMth","left":"10%","position":"absolute","children":["$","img",null,{"alt":"icon","height":100,"src":"https://cdn-icons-png.freepik.com/512/6643/6643562.png","width":100}]}],["$","$L2",null,{"bottom":0,"position":"absolute","width":"100%","children":["$","svg",null,{"className":"Wave_waves___Plcn","data-component":"Wave","height":40,"preserveAspectRatio":"none","shapeRendering":"auto","viewBox":"0 24 150 28","width":"100%","xmlns":"http://www.w3.org/2000/svg","children":[["$","defs",null,{"children":["$","path",null,{"d":"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z","id":"gentle-wave"}]}],["$","g",null,{"className":"Wave_parallax__AGFbj","children":[["$","use",null,{"fill":"#6fb1fc","opacity":"0.7","x":"48","xlinkHref":"#gentle-wave","y":"0"}],["$","use",null,{"fill":"#6fb1fc","opacity":"0.5","x":"48","xlinkHref":"#gentle-wave","y":"3"}],["$","use",null,{"fill":"#6fb1fc","opacity":"0.3","x":"48","xlinkHref":"#gentle-wave","y":"5"}],["$","use",null,{"fill":"#6fb1fc","x":"48","xlinkHref":"#gentle-wave","y":"7"}]]}]]}]}]]}],["$","$L2",null,{"children":["$","$L5",null,{"alignItems":"center","className":"FooterTemplate_footer__97G2c","color":"white","data-component":"FooterTemplate","gap":4,"padding":4,"paddingBottom":8,"paddingTop":8,"children":[["$","$L5",null,{"alignItems":"center","color":"white","children":[["$","$L6",null,{"className":"FooterTemplate_title__Samo8","fontWeight":"bold","variant":"h6","children":"𝝅번째 알파카의 개발 낙서장"}],["$","$L6",null,{"variant":"caption","children":"5.1.0"}]]}],["$","$L2",null,{"display":"grid","gap":2,"gridTemplateColumns":"1fr 1fr 1fr","children":[["$","$L10",null,{"data-component":"FooterLinkButton","href":"https://itcode.dev","target":"_blank","children":["$","$L18",null,{"className":"SymbolicButton_button__Yg0O3","data-component":"SymbolicButton","children":["$","$L5",null,{"alignItems":"center","bgcolor":"$undefined","border":"1px solid","borderColor":"white","borderRadius":"50%","boxShadow":"0px 0px 5px #00000050","height":40,"justifyContent":"center","padding":0.5,"width":40,"children":["$","img",null,{"alt":"itcode.dev","height":"100%","src":"https://itcode.dev/logo-transparent.png","width":"100%"}]}]}]}],["$","$L10",null,{"data-component":"FooterLinkButton","href":"https://github.com/RWB0104","target":"_blank","children":["$","$L18",null,{"className":"SymbolicButton_button__Yg0O3","data-component":"SymbolicButton","children":["$","$L5",null,{"alignItems":"center","bgcolor":"$undefined","border":"1px solid","borderColor":"white","borderRadius":"50%","boxShadow":"0px 0px 5px #00000050","height":40,"justifyContent":"center","padding":0.5,"width":40,"children":["$","$L19",null,{}]}]}]}],["$","$L10",null,{"data-component":"FooterLinkButton","href":"mailto:psj2716@mensakorea.org","target":"_blank","children":["$","$L18",null,{"className":"SymbolicButton_button__Yg0O3","data-component":"SymbolicButton","children":["$","$L5",null,{"alignItems":"center","bgcolor":"$undefined","border":"1px solid","borderColor":"white","borderRadius":"50%","boxShadow":"0px 0px 5px #00000050","height":40,"justifyContent":"center","padding":0.5,"width":40,"children":["$","$L1a",null,{}]}]}]}],["$","$L10",null,{"data-component":"FooterLinkButton","href":"https://www.linkedin.com/in/itcode","target":"_blank","children":["$","$L18",null,{"className":"SymbolicButton_button__Yg0O3","data-component":"SymbolicButton","children":["$","$L5",null,{"alignItems":"center","bgcolor":"$undefined","border":"1px solid","borderColor":"white","borderRadius":"50%","boxShadow":"0px 0px 5px #00000050","height":40,"justifyContent":"center","padding":0.5,"width":40,"children":["$","$L1b",null,{}]}]}]}],["$","$L10",null,{"data-component":"FooterLinkButton","href":"/sitemap.xml","target":"_blank","children":["$","$L18",null,{"className":"SymbolicButton_button__Yg0O3","data-component":"SymbolicButton","children":["$","$L5",null,{"alignItems":"center","bgcolor":"$undefined","border":"1px solid","borderColor":"white","borderRadius":"50%","boxShadow":"0px 0px 5px #00000050","height":40,"justifyContent":"center","padding":0.5,"width":40,"children":["$","$L1c",null,{}]}]}]}],["$","$L10",null,{"data-component":"FooterLinkButton","href":"/rss.xml","target":"_blank","children":["$","$L18",null,{"className":"SymbolicButton_button__Yg0O3","data-component":"SymbolicButton","children":["$","$L5",null,{"alignItems":"center","bgcolor":"$undefined","border":"1px solid","borderColor":"white","borderRadius":"50%","boxShadow":"0px 0px 5px #00000050","height":40,"justifyContent":"center","padding":0.5,"width":40,"children":["$","$L1d",null,{}]}]}]}]]}],["$","$L5",null,{"alignItems":"center","color":"white","children":[["$","$L5",null,{"alignItems":"center","direction":"row","gap":0.5,"children":[["$","$L1e",null,{"fontSize":"inherit","htmlColor":"darkblue"}],["$","$L6",null,{"variant":"caption","children":"Developed by RWB since 2021.05"}]]}],["$","$L5",null,{"alignItems":"center","direction":"row","gap":0.5,"children":[["$","$L1f",null,{"fontSize":"inherit","htmlColor":"crimson"}],["$","$L6",null,{"variant":"caption","children":"5th upgraded at 2024.05"}]]}]]}],["$","img",null,{"alt":"https://hits.seeyoufarm.com/api/count/incr/badge.svg?count_bg=%23484848&icon=react.svg&icon_color=dodgerblue&title=view&title_bg=%23242424&url=https%3A%2F%2Fblog.itcode.dev","data-component":"Hits","src":"https://hits.seeyoufarm.com/api/count/incr/badge.svg?count_bg=%23484848&icon=react.svg&icon_color=dodgerblue&title=view&title_bg=%23242424&url=https%3A%2F%2Fblog.itcode.dev"}]]}]}]]}]]}]],null],null]},["$","$L20",null,{"parallelRouterKey":"children","segmentPath":["children","$21","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L22",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/3fbaca06e46f760b.css","precedence":"next","crossOrigin":"$undefined"}]]}],null]},[["$","html",null,{"lang":"ko","children":[["$","head",null,{"children":["$","meta",null,{"content":"ca-pub-5522045122225064","name":"google-adsense-account"}]}],["$","body",null,{"children":["$","$23",null,{"children":["$","$L24",null,{"gaKey":"G-7QYWYNZ90R","children":["$","$L25",null,{"children":["$","$L26",null,{"children":[["$","$L20",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L22",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}],["$","$L27",null,{}],["$","$L28",null,{}]]}]}]}]}]}]]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/ca108af39b388357.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/bc8633ce02ba4b2d.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","2",{"rel":"stylesheet","href":"/_next/static/css/344a3fd496f82ada.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","3",{"rel":"stylesheet","href":"/_next/static/css/d880172cf76a61a7.css","precedence":"next","crossOrigin":"$undefined"}]],"$L29"]]]]
29:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"[백준 / JAVA] 백준 알고리즘 1005번 ACM Craft - 𝝅번째 알파카의 개발 낙서장"}],["$","meta","3",{"name":"description","content":"서기 2012년! 드디어 2년간 수많은 국민들을 기다리게 한 게임 ACM Craft(Association of Construction Mananger Craft)가 발매되었다. 이 게임은 지금까지 나온 게임들과는 다르게 ACM Craft는 다이나믹한 게임 진행을 위해 건물을 짓는 순서가 정해져있지 않다. 즉, 첫 번째 게임과 두 번째 게임이 건물을 짓는 순서가 다를 수도 있다. 매 게임시작 시 건물을 짓는 순서가 주어진다. 또한 모든 건물은 각각 건설을 시작하여 완성이 될 때까지 Delay가 존재한다."}],["$","meta","4",{"name":"application-name","content":"𝝅번째 알파카의 개발 낙서장"}],["$","link","5",{"rel":"author","href":"https://github.com/RWB0104"}],["$","meta","6",{"name":"author","content":"Kapoo"}],["$","link","7",{"rel":"author","href":"https://www.linkedin.com/in/itcode"}],["$","meta","8",{"name":"author","content":"RWB"}],["$","link","9",{"rel":"manifest","href":"/manifest.webmanifest","crossOrigin":"use-credentials"}],["$","meta","10",{"name":"generator","content":"Next.js"}],["$","meta","11",{"name":"keywords","content":"백준,알고리즘,JAVA(자바),Dynamic Programming(동적 프로그래밍),위상 정렬,GOLD,GOLD III"}],["$","meta","12",{"name":"creator","content":"RWB"}],["$","meta","13",{"name":"publisher","content":"GitHub Pages"}],["$","meta","14",{"property":"og:title","content":"[백준 / JAVA] 백준 알고리즘 1005번 ACM Craft - 𝝅번째 알파카의 개발 낙서장"}],["$","meta","15",{"property":"og:description","content":"서기 2012년! 드디어 2년간 수많은 국민들을 기다리게 한 게임 ACM Craft(Association of Construction Mananger Craft)가 발매되었다. 이 게임은 지금까지 나온 게임들과는 다르게 ACM Craft는 다이나믹한 게임 진행을 위해 건물을 짓는 순서가 정해져있지 않다. 즉, 첫 번째 게임과 두 번째 게임이 건물을 짓는 순서가 다를 수도 있다. 매 게임시작 시 건물을 짓는 순서가 주어진다. 또한 모든 건물은 각각 건설을 시작하여 완성이 될 때까지 Delay가 존재한다."}],["$","meta","16",{"property":"og:url","content":"https://blog.itcode.dev/posts/2021/06/01/a1005"}],["$","meta","17",{"property":"og:site_name","content":"𝝅번째 알파카의 개발 낙서장"}],["$","meta","18",{"property":"og:locale","content":"ko-KR"}],["$","meta","19",{"property":"og:image","content":"https://user-images.githubusercontent.com/50317129/120028591-d5ece480-c02f-11eb-88f0-e14fc647dd81.png"}],["$","meta","20",{"property":"og:type","content":"website"}],["$","meta","21",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","22",{"name":"twitter:title","content":"[백준 / JAVA] 백준 알고리즘 1005번 ACM Craft - 𝝅번째 알파카의 개발 낙서장"}],["$","meta","23",{"name":"twitter:description","content":"서기 2012년! 드디어 2년간 수많은 국민들을 기다리게 한 게임 ACM Craft(Association of Construction Mananger Craft)가 발매되었다. 이 게임은 지금까지 나온 게임들과는 다르게 ACM Craft는 다이나믹한 게임 진행을 위해 건물을 짓는 순서가 정해져있지 않다. 즉, 첫 번째 게임과 두 번째 게임이 건물을 짓는 순서가 다를 수도 있다. 매 게임시작 시 건물을 짓는 순서가 주어진다. 또한 모든 건물은 각각 건설을 시작하여 완성이 될 때까지 Delay가 존재한다."}],["$","meta","24",{"name":"twitter:image","content":"https://user-images.githubusercontent.com/50317129/120028591-d5ece480-c02f-11eb-88f0-e14fc647dd81.png"}],["$","link","25",{"rel":"icon","href":"/favicon.ico"}],["$","link","26",{"rel":"shortcut icon","href":"/favicon.ico"}],["$","link","27",{"rel":"apple-touch-icon","href":"/favicon.ico"}],["$","meta","28",{"name":"next-size-adjust"}]]
1:null
