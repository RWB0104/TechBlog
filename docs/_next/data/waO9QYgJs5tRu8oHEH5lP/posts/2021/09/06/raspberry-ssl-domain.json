{"pageProps":{"header":{"title":"[라즈베리파이 4] Let's Ecrypt로 Ubuntu 서버에 HTTPS 통신 제공하기","excerpt":"이전 장에서 Google Domains를 통해 dev 도메인을 발급받았다. 이 블로그의 주소는 실제로 구입한 https://blog.itcode.dev 도메인이 적용되어있다. dev 도메인은 강화된 보안정책이 적용되어있다. 해당 도메인으로의 모든 HTTP 통신은 반드시 HTTPS 보안 통신으로만 제공된다. 네트워크 계층에서 https 프로토콜로 라우팅하므로 좋든 싫든 HTTPS 서비스를 제공해야만 한다.","coverImage":"https://user-images.githubusercontent.com/50317129/131238727-666f2aaa-d759-4f62-af73-3856086da73d.png","date":"2021-09-06T16:50:40","type":"posts","category":"RaspberryPi","tag":["라즈베리파이","Ubuntu","Tomcat(톰캣)","SSL"],"group":"라즈베리파이","comment":true,"publish":true},"name":"2021-09-06-raspberry-ssl-domain.md","url":["2021-09-06-raspberry-ssl-domain","2021","09","06","raspberry-ssl-domain"],"toc":"<ul><li><a href=\"#개요\">개요</a></li><li><a href=\"#Cerbot으로-SSL 인증서 발급하기\">Cerbot으로 SSL 인증서 발급하기</a></li><ul><li><a href=\"#어?-전 윈도우로 하고싶은데....\">어? 전 윈도우로 하고싶은데....</a></li><li><a href=\"#준비물\">준비물</a></li><li><a href=\"#1.-Certbot 설치하기\">1. Certbot 설치하기</a></li><li><a href=\"#2.-Certbot으로 인증 수행하기\">2. Certbot으로 인증 수행하기</a></li><li><a href=\"#3.-DNS TXT Record 설정\">3. DNS TXT Record 설정</a></li><ul><li><a href=\"#주의점\">주의점</a></li></ul><li><a href=\"#4.-인증 확인 요청\">4. 인증 확인 요청</a></li></ul><li><a href=\"#Tomcat에-SSL 인증서 적용하기\">Tomcat에 SSL 인증서 적용하기</a></li><ul><li><a href=\"#Tomcat-Native 설치\">Tomcat Native 설치</a></li><li><a href=\"#Tomcat의-server.xml에 인증서 적용하기\">Tomcat의 server.xml에 인증서 적용하기</a></li></ul><li><a href=\"#목표\">목표</a></li></ul>","content":"<h1 id=\"개요\">개요 <a href=\"#개요\">🔗</a></h1><p>이전 장에서 Google Domains를 통해 <code class=\"inline-code\">dev</code> 도메인을 발급받았다. 이 블로그의 주소는 실제로 구입한 https://blog.itcode.dev 도메인이 적용되어있다.</p>\n<p><code class=\"inline-code\">dev</code> 도메인은 강화된 보안정책이 적용되어있다. 해당 도메인으로의 모든 HTTP 통신은 반드시 HTTPS 보안 통신으로만 제공된다. 네트워크 계층에서 https 프로토콜로 라우팅하므로 좋든 싫든 HTTPS 서비스를 제공해야만 한다.</p>\n<br />\n\n<p>이 장에서는 Let's Encrypt로 SSL 인증서를 발급받아 라즈베이파이서버의 Tomcat에 적용한다. 기존의 1:1 도메인 매칭 SSL이 아니라, 여러 서브도메인에 전부 대응 가능한 와일드카드 인증서를 받을 것이다.</p>\n<blockquote>\n<p><b class=\"teal-600\">와일드카드(Wildcard) 인증서?</b><br>프로그래밍에서의 <span class=\"primary\">와일드카드</span>란 무작위 대상의 허용이란 의미를 가진다. 도메인과 1:1 매칭되는 기존의 인증서와 달리, 와일드카드 인증서는 주체가 <code class=\"inline-code\">*.example.com</code>로 표기되며, 모든 서브도메인에 적용이 가능하다.</p>\n</blockquote>\n<h1 id=\"Cerbot으로-SSL 인증서 발급하기\">Cerbot으로 SSL 인증서 발급하기 <a href=\"#Cerbot으로-SSL 인증서 발급하기\">🔗</a></h1><p>Ubuntu 서버에서 SSL 인증서를 발급받아보자. 일반적인 SSL 인증서는 인증 과정에서 웹 서버에 특정 파일을 배포한 뒤, 인증 서버에서 해당 파일의 접근 및 유효성 검증을 통해 도메인의 소유권을 확인한다.<br>하지만 와일드카드 인증서는 여러 서브도메인에 전부 적용되는 특별한 인증서라 위의 인증방식을 사용하지 않는다. 위의 인증방식은 하나의 도메인의 소유권만 보증하기 때문. <span class=\"orange-600\">와일드카드 인증서는 DNS 레코드를 통해 소유권을 인증</span>한다. DNS 레코드는 도메인의 소유권자만 설정 가능하기 때문.</p>\n<p>만약, 어떠한 이유로든 도메인의 DNS 설정을 변경할 수 없다면 와일드카드 인증서를 발급받을 수 없다.</p>\n<h2 id=\"어?-전 윈도우로 하고싶은데....\">어? 전 윈도우로 하고싶은데.... <a href=\"#어?-전 윈도우로 하고싶은데....\">🔗</a></h2><p>DNS 레코드 인증으로 진행하기 때문에 Tomcat에 파일을 배포할 필요가 없어서 아무데서나 진행해도 상관 없다.</p>\n<p>Windows 환경에서 인증서를 발급받는 방법은 이전에 작성한 게시물 <a href=\"/posts/2021/08/19/lets-encrypt\" target=\"_blank\">[SSL] Windows 10에서 Let's Encrypt로 SSL 인증서 무료 발급받기</a>을 참고하길 바란다.</p>\n<h2 id=\"준비물\">준비물 <a href=\"#준비물\">🔗</a></h2><ul>\n<li>Ubuntu OS</li>\n<li>DNS Record 설정 권한</li>\n</ul>\n<p>필자는 Google Domains에서 도메인을 구입했으므로, Google Domains에서 DNS 설정을 관리할 수 있다. 만약, 가비아나 후이즈, 도레지 등 다른 도메인 사이트에서 도메인을 구매했다면 그 사이트에서 DNS 설정을 할 수 있으니 참고할 것.</p>\n<p>이 장에서는 Google Domains를 기준으로 진행한다.</p>\n<h2 id=\"1.-Certbot 설치하기\">1. Certbot 설치하기 <a href=\"#1.-Certbot 설치하기\">🔗</a></h2><p>Ubuntu에서 Certbot을 설치한다.</p>\n\n\t\t\t\t\t<div class=\"codeblock\">\n\t\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t\t<p>BASH</p>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t\t<pre class=\"language-bash\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> certbot</td></tr></tbody></table></pre>\n\t\t\t\t\t</div>\n\t\t\t\t<h2 id=\"2.-Certbot으로 인증 수행하기\">2. Certbot으로 인증 수행하기 <a href=\"#2.-Certbot으로 인증 수행하기\">🔗</a></h2><p>Certbot을 수행하여 인증서 발급을 수행한다.</p>\n<p class=\"red-500\" align=\"center\">※ 아래의 itcode.dev 도메인은 예시로, 실제로 입력 시엔 직접 사용할 자신의 도메인을 입력한다.</p>\n\n\n\t\t\t\t\t<div class=\"codeblock\">\n\t\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t\t<p>BASH</p>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t\t<pre class=\"language-bash\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token function\">sudo</span> certbot certonly --manual --preferred-challenges dns --email psj2716@gmail.com -d *.itcode.dev</td></tr></tbody></table></pre>\n\t\t\t\t\t</div>\n\t\t\t\t<ul>\n<li><code class=\"inline-code\">--manual</code> - 수동 설정</li>\n<li><code class=\"inline-code\">--preferred-challenges</code> - 인증방식 지정</li>\n<li><code class=\"inline-code\">--email</code> 소유주 이메일</li>\n<li><code class=\"inline-code\">-d</code> - 도메인 지정</li>\n</ul>\n<p>위 명령어를 사용하면 별다른 명령어 입력 없이 즉시 인증을 수행할 수 있다. <code class=\"inline-code\">-d</code>의 인자값으로 구입한 도메인을 입력하되, 서브도메인을 <code class=\"inline-code\">*</code>로 지정함을 잊지말자.</p>\n\n\t\t\t\t\t<div class=\"codeblock\">\n\t\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t\t<p>OUTPUT</p>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t\t<pre class=\"language-output\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0>- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1>Please read the Terms of Service at</td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2>https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf. You must</td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3>agree in order to register with the ACME server at</td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4>https://acme-v02.api.letsencrypt.org/directory</td></tr>\n<tr data-number=5><td class=\"line-number\" data-number=\"5\">5</td><td class=\"line-code\" data-number=5>- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</td></tr>\n<tr data-number=6><td class=\"line-number\" data-number=\"6\">6</td><td class=\"line-code\" data-number=6>(A)gree/(C)ancel:</td></tr></tbody></table></pre>\n\t\t\t\t\t</div>\n\t\t\t\t<p><span class=\"pink-600\">서비스 이용 약관에 동의</span>해달라는 의미로, A를 입력하여 동의한다. 동의하지 않으면 SSL 발급을 진행할 수 없다.</p>\n\n\t\t\t\t\t<div class=\"codeblock\">\n\t\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t\t<p>OUTPUT</p>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t\t<pre class=\"language-output\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0>- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1>Would you be willing to share your email address with the Electronic Frontier</td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2>Foundation, a founding partner of the Let's Encrypt project and the non-profit</td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3>organization that develops Certbot? We'd like to send you email about our work</td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4>encrypting the web, EFF news, campaigns, and ways to support digital freedom.</td></tr>\n<tr data-number=5><td class=\"line-number\" data-number=\"5\">5</td><td class=\"line-code\" data-number=5>- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</td></tr>\n<tr data-number=6><td class=\"line-number\" data-number=\"6\">6</td><td class=\"line-code\" data-number=6>(Y)es/(N)o:</td></tr></tbody></table></pre>\n\t\t\t\t\t</div>\n\t\t\t\t<p>Certbot 개발기관에서 웹 암호화, EFF 뉴스, 이벤트 등의 <span class=\"pink-600\">정보를 소유주의 이메일로 발송</span>하는데 동의하냐는 질문이다.</p>\n<p>좋으면 Y, 싫으면 N을 입력하자. <span class=\"red-400\">동의하지 않아도 SSL 발급엔 지장없다.</span></p>\n\n\t\t\t\t\t<div class=\"codeblock\">\n\t\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t\t<p>OUTPUT</p>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t\t<pre class=\"language-output\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0>- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1>NOTE: The IP of this machine will be publicly logged as having requested this</td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2>certificate. If you're running certbot in manual mode on a machine that is not</td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3>your server, please ensure you're okay with that.</td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4></td></tr>\n<tr data-number=5><td class=\"line-number\" data-number=\"5\">5</td><td class=\"line-code\" data-number=5>Are you OK with your IP being logged?</td></tr>\n<tr data-number=6><td class=\"line-number\" data-number=\"6\">6</td><td class=\"line-code\" data-number=6>- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</td></tr>\n<tr data-number=7><td class=\"line-number\" data-number=\"7\">7</td><td class=\"line-code\" data-number=7>(Y)es/(N)o:</td></tr></tbody></table></pre>\n\t\t\t\t\t</div>\n\t\t\t\t<p><span class=\"pink-600\">IP 수집에 동의</span>하냐는 질문으로, Y를 입력하여 동의한다. 동의하지 않으면 SSL 발급을 진행할 수 없다.</p>\n\n\t\t\t\t\t<div class=\"codeblock\">\n\t\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t\t<p>OUTPUT</p>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t\t<pre class=\"language-output\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0>- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1>Please deploy a DNS TXT record under the name</td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2>_acme-challenge.itcode.dev with the following value:</td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3></td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4>1sz-pJgM-3jL7mZacyByOO0S2lclAF0QmxtqujRuRHM</td></tr>\n<tr data-number=5><td class=\"line-number\" data-number=\"5\">5</td><td class=\"line-code\" data-number=5></td></tr>\n<tr data-number=6><td class=\"line-number\" data-number=\"6\">6</td><td class=\"line-code\" data-number=6>Before continuing, verify the record is deployed.</td></tr>\n<tr data-number=7><td class=\"line-number\" data-number=\"7\">7</td><td class=\"line-code\" data-number=7>- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</td></tr>\n<tr data-number=8><td class=\"line-number\" data-number=\"8\">8</td><td class=\"line-code\" data-number=8>Press Enter to Continue</td></tr></tbody></table></pre>\n\t\t\t\t\t</div>\n\t\t\t\t<p>certbot에서 서브도메인명 <code class=\"inline-code\">_acme-challenge</code>과 랜덤한 문자열을 제공한다. 제시한 도메인 <code class=\"inline-code\">_acme-challenge.itcode.dev</code>의 DNS TXT Record에 제공한 값 <code class=\"inline-code\">O3WQbIWv73aOzneZBu_4XAoE9ieZT1ZLdvbX7UPCkyk</code>을 할당하면 된다.</p>\n<p>도메인은 사용자가 입력한 값에 따라 달라지니 참고할 것.</p>\n<h2 id=\"3.-DNS TXT Record 설정\">3. DNS TXT Record 설정 <a href=\"#3.-DNS TXT Record 설정\">🔗</a></h2><p>DNS Record 종류엔 A, CNAME 등 여러 종류가 존재한다. 이 중 TXT 레코드에 값을 할당하면 된다.</p>\n<p>Google Domains의 DNS 설정에서 Record 하나를 추가하고, 타입을 TXT로 설정한다. 이후 certbot에서 제시한 값을 입력한다. 설정한 DNS 정보가 전파되기까지 수 분의 시간이 걸릴 수 있다. Google Domains의 경우 전파속도는 빠른 것 같다.</p>\n\n\t\t\t\t\t<div class=\"codeblock\">\n\t\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t\t<p>BASH</p>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t\t<pre class=\"language-bash\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token function\">nslookup</span> -q<span class=\"token operator\">=</span>txt _acme-challenge.itcode.dev</td></tr></tbody></table></pre>\n\t\t\t\t\t</div>\n\t\t\t\t<p>TXT Record이므로 브라우저에서 해당 도메인에 접근해도 별다른 내용이 출력되지 않는다. <code class=\"inline-code\">nslookup</code> 명령어를 통해 Record의 종류를 지정하여 조회해야한다.</p>\n\n\t\t\t\t\t<div class=\"codeblock\">\n\t\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t\t<p>OUTPUT</p>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t\t<pre class=\"language-output\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0>Server:         127.0.0.53</td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1>Address:        127.0.0.53#53</td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3>Non-authoritative answer:</td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4>_acme-challenge.itcode.dev      text = \"1sz-pJgM-3jL7mZacyByOO0S2lclAF0QmxtqujRuRHM\"</td></tr>\n<tr data-number=5><td class=\"line-number\" data-number=\"5\">5</td><td class=\"line-code\" data-number=5></td></tr>\n<tr data-number=6><td class=\"line-number\" data-number=\"6\">6</td><td class=\"line-code\" data-number=6>Authoritative answers can be found from:</td></tr></tbody></table></pre>\n\t\t\t\t\t</div>\n\t\t\t\t<p>위 처럼 해당 도메인의 TXT Record에 입력한 문자열이 나오면 DNS 설정이 전파된 것으로, 인증을 진행할 수 있다. 만약, 값이 나오지 않는다면 시간을 두고 기다리자.</p>\n<p>Enter를 누르면 인증확인을 시도하는데, DNS 레코드 설정이 완료될 때까지 절대로 진행하지 말자.</p>\n<h3 id=\"주의점\">주의점 <a href=\"#주의점\">🔗</a></h3><p>DNS TXT Record가 미처 전파되지 않았음에도 불구하고 한국인 특성이 발동하여 certbot에 Enter를 눌러 인증확인 단계로 넘어가는 경우가 왕왕 발생한다.</p>\n<p>만약, TXT Record가 확인되지 않는다면, 관련 메시지와 함께 인증과정을 다시 시작한다. 문제는 이 때 <span class=\"red-600\">TXT Record에 등록할 문자열을 새로 갱신</span>한다. 즉, DNS TXT Record을 갱신된 값으로 재지정해야한다.</p>\n<p>DNS 전파가 느리다면 대기시간이 많이 늘어나버리니 주의할 것. 반드시 <code class=\"inline-code\">nslookup</code> 명령어를 통해 DNS 적용 여부를 확인하자.</p>\n<h2 id=\"4.-인증 확인 요청\">4. 인증 확인 요청 <a href=\"#4.-인증 확인 요청\">🔗</a></h2><p>DNS TXT Record가 정상적으로 전파됐다면, 콘솔에서 Enter를 눌러 다음 단계로 넘어간다. certbot이 인증확인을 시도하며, 인증이 완료되면 <span class=\"blue-600\">인증서를 발급</span>해준다.</p>\n\n\t\t\t\t\t<div class=\"codeblock\">\n\t\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t\t<p>BASH</p>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t\t<pre class=\"language-bash\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token comment\" data-tag=\"new\"># itcode.dev는 인증한 도메인 이름</span></td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1><span class=\"token builtin class-name\">cd</span> /etc/letsencrypt/live/itcode.dev</td></tr></tbody></table></pre>\n\t\t\t\t\t</div>\n\t\t\t\t<p>기본적으로 위 경로에 인증서가 생성된다. 마지막 폴더 <code class=\"inline-code\">itcode.dev</code>는 도메인 이름이니, 각자가 입력한 도메인으로 변경하여 입력한다.</p>\n<ul>\n<li><code class=\"inline-code\">cert.pem</code> - 도메인의 인증서</li>\n<li><code class=\"inline-code\">chain.pem</code> - 발급기관의 인증서</li>\n<li><code class=\"inline-code\">fullchain.pem</code> - 도메인과 발급기관의 통합 인증서</li>\n<li><code class=\"inline-code\">privkey.pem</code> - 인증서의 개인키</li>\n</ul>\n<p>SSL은 도메인의 인증서 뿐만 아니라, 이를 발급해준 CA의 인증서까지 같이 검증한다. 도메인의 인증이 올바르더라도, 이를 발급해준 기관이 이상할 경우 해당 인증서 또한 믿을 수 없기 때문. 일종의 보증서라고 봐도 무방하다.</p>\n<p>일례로, 한국의 화폐 만원권이 만원의 가치를 가질 수 있는 이유는 한국은행이 이를 보증하기 때문. 반대로 핫한 가상화폐의 경우, 가상화폐의 가치를 보증해주는 기관이 없다. 때문에 가치가 수시로 변동하며, 언제든 그 가치와 기능을 잃을 수 있다.</p>\n<blockquote>\n<p><b class=\"teal-600\">fullchain.pem</b>의 존재의미<br>어차피 <code class=\"inline-code\">cert.pem</code>과 <code class=\"inline-code\">chain.pem</code>이 제공되는데, 둘의 통합인증서가 무슨 의미가 있냐고 생각할 수 있다. <code class=\"inline-code\">fullchain.pem</code>은 두 인증서를 통합함으로써, <code class=\"inline-code\">cert.pem</code>과 <code class=\"inline-code\">chain.pem</code>의 매칭여부를 확인할 수 있다.</p>\n</blockquote>\n<h1 id=\"Tomcat에-SSL 인증서 적용하기\">Tomcat에 SSL 인증서 적용하기 <a href=\"#Tomcat에-SSL 인증서 적용하기\">🔗</a></h1><p>Tomcat Native 설치여부에 따라 적용방법이 조금씩 달라진다. SSL 인증서는 기본적으로 <code class=\"inline-code\">pem</code> 확장자로 제공된다.</p>\n<p>Tomcat Native는 <code class=\"inline-code\">pem</code> 확장자 인증서를 바로 인식할 수 있지만, 일반적인 Tomcat은 <code class=\"inline-code\">pem</code>을 인식할 수 없어 <code class=\"inline-code\">jks</code> 등 다른 형태의 인증서로 변환해야한다.</p>\n<h2 id=\"Tomcat-Native 설치\">Tomcat Native 설치 <a href=\"#Tomcat-Native 설치\">🔗</a></h2>\n\t\t\t\t\t<div class=\"codeblock\">\n\t\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t\t<p>BASH</p>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t\t<pre class=\"language-bash\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> libtcnative-1</td></tr></tbody></table></pre>\n\t\t\t\t\t</div>\n\t\t\t\t<p>Ubuntu에선 위 라이브러리 설치를 통해 Tomcat Native를 적용할 수 있다.</p>\n<h2 id=\"Tomcat의-server.xml에 인증서 적용하기\">Tomcat의 server.xml에 인증서 적용하기 <a href=\"#Tomcat의-server.xml에 인증서 적용하기\">🔗</a></h2><p><a href=\"/posts/2021/08/20/apply-ssl#SSL-인증서%20적용하기\" target=\"_blank\">[SSL] Tomcat에 SSL 적용하기</a> 게시글에서 자세한 내용을 확인할 수 있다.</p>\n<p>위 게시글의 방법대로 인증서를 적용하고 Tomcat을 재기동한 뒤 <code class=\"inline-code\">https://itcode.dev</code>와 같이 HTTPS 프로토콜을 사용하여 접속을 시도하자. 반드시 접속 전에 HTTPS의 서비스 포트를 확인하자. Tomcat의 기본 HTTPS 포트는 8443이다.</p>\n<p>HTTPS 접속이 정상적이라면 성공이다. 인증서 정보 또한 확인할 수 있다.</p>\n<h1 id=\"목표\">목표 <a href=\"#목표\">🔗</a></h1><ul>\n<li><del class=\"grey-400\">라즈베리파이에 Ubuntu 서버를 구축한다.</del></li>\n<li><del class=\"grey-400\">Tomcat을 구동하여 페이지를 호스팅한다.</del></li>\n<li><del class=\"grey-400\">도메인을 입힌다.</del></li>\n<li><del class=\"grey-400\">SSL 인증서를 발급하여 HTTPS 통신을 제공한다.</del></li>\n<li>SSH, RDP 등의 원격 통신환경을 구축한다.</li>\n<li>MariaDB를 설치하여 DB 통신을 수행한다.</li>\n</ul>\n","meta":{"prev":{"header":{"title":"[라즈베리파이 4] 원격 환경 구축하기 (SSH, RDP)","excerpt":"이제 얼추 라즈베리파이에 그럴듯한 웹서버 환경이 구축됐다. 하지만 라즈베리파이를 다루기 위해서 기기에 직접 모니터랑 키보드, 마우스를 연결해서 쓰긴 좀 번거롭다. 이 주제에서의 라즈베리파이는 어디까지나 서브로 운영되는 웹서버이므로, 메인 컴퓨터가 될 수 없다. 즉, 개발같은 대부분의 작업은 메인 컴퓨터에서 진행하고, 배포만 서버가 담당하는 방식이다. 이렇게 디바이스가 서로 나뉠 경우, 두 디바이스의 접근이 서로 원활해야한다. 한 마디로, 원격 환경이 필요하다. 이 장에서는 라즈베리파이에 원격 환경을 구축한다. SSH, RDP 통신을 구축함으로써 SSH 혹은 윈도우 PC 어디에서나 라즈베리파이에 접근할 수 있도록 구성한다.","coverImage":"https://user-images.githubusercontent.com/50317129/131238727-666f2aaa-d759-4f62-af73-3856086da73d.png","date":"2021-09-08T22:40:38","type":"posts","category":"RaspberryPi","tag":["라즈베리파이","Ubuntu","SSH","RDP"],"group":"라즈베리파이","comment":true,"publish":true},"name":"2021-09-08-raspberry-remote.md","url":["2021-09-08-raspberry-remote","2021","09","08","raspberry-remote"]},"next":{"header":{"title":"[라즈베리파이 4] 라즈베리파이에 도메인 입히기","excerpt":"지금까지 과정을 거치면서 라즈베리파이에 OS를 설치하고, Tomcat을 구동하여 웹 서버로 동작할 수 있도록 환경을 구축했다. 이제 우리는 라즈베리파이의 IP로 접속하여 웹 사이트를 호스팅할 수 있다. 하지만 정상적인 페이지라면 IP를 입력하여 접속하지 않는다. Domain을 발급받아 IP에 연동하고, 이를 URL 주소로 사용할 것이다. 이 장에서는 Domain을 직접 구입하고 라즈베리파이 서버에 이를 연동한다.","coverImage":"https://user-images.githubusercontent.com/50317129/131238727-666f2aaa-d759-4f62-af73-3856086da73d.png","date":"2021-09-04T12:09:04","type":"posts","category":"RaspberryPi","tag":["라즈베리파이","Ubuntu","도메인"],"group":"라즈베리파이","comment":true,"publish":true},"name":"2021-09-04-raspberry-domain.md","url":["2021-09-04-raspberry-domain","2021","09","04","raspberry-domain"]},"group":[{"header":{"title":"[라즈베리파이 4] MariaDB 구축하기","excerpt":"드디어 라즈베리파이 개발환경 구축의 마지막 장이다. DBMS는 다양한 데이터를 저장하는 저장소인 DB(Database)를 관리하는 시스템이다. 필요한 데이터를 DB에 저장하고, 이를 적재적소에 꺼내어 데이터를 다룰 수 있도록 해준다. 웹 서버와 DBMS를 연동하면 사용자의 계정 정보, 설정 등을 저장하고 활용할 수 있다.","coverImage":"https://user-images.githubusercontent.com/50317129/131238727-666f2aaa-d759-4f62-af73-3856086da73d.png","date":"2021-09-14T02:04:02","type":"posts","category":"RaspberryPi","tag":["라즈베리파이","Ubuntu","MariaDB","RDBMS"],"group":"라즈베리파이","comment":true,"publish":true},"name":"2021-09-14-ubuntu-in-mariadb.md","url":["2021-09-14-ubuntu-in-mariadb","2021","09","14","ubuntu-in-mariadb"]},{"header":{"title":"[라즈베리파이 4] 원격 환경 구축하기 (SSH, RDP)","excerpt":"이제 얼추 라즈베리파이에 그럴듯한 웹서버 환경이 구축됐다. 하지만 라즈베리파이를 다루기 위해서 기기에 직접 모니터랑 키보드, 마우스를 연결해서 쓰긴 좀 번거롭다. 이 주제에서의 라즈베리파이는 어디까지나 서브로 운영되는 웹서버이므로, 메인 컴퓨터가 될 수 없다. 즉, 개발같은 대부분의 작업은 메인 컴퓨터에서 진행하고, 배포만 서버가 담당하는 방식이다. 이렇게 디바이스가 서로 나뉠 경우, 두 디바이스의 접근이 서로 원활해야한다. 한 마디로, 원격 환경이 필요하다. 이 장에서는 라즈베리파이에 원격 환경을 구축한다. SSH, RDP 통신을 구축함으로써 SSH 혹은 윈도우 PC 어디에서나 라즈베리파이에 접근할 수 있도록 구성한다.","coverImage":"https://user-images.githubusercontent.com/50317129/131238727-666f2aaa-d759-4f62-af73-3856086da73d.png","date":"2021-09-08T22:40:38","type":"posts","category":"RaspberryPi","tag":["라즈베리파이","Ubuntu","SSH","RDP"],"group":"라즈베리파이","comment":true,"publish":true},"name":"2021-09-08-raspberry-remote.md","url":["2021-09-08-raspberry-remote","2021","09","08","raspberry-remote"]},{"header":{"title":"[라즈베리파이 4] Let's Ecrypt로 Ubuntu 서버에 HTTPS 통신 제공하기","excerpt":"이전 장에서 Google Domains를 통해 dev 도메인을 발급받았다. 이 블로그의 주소는 실제로 구입한 https://blog.itcode.dev 도메인이 적용되어있다. dev 도메인은 강화된 보안정책이 적용되어있다. 해당 도메인으로의 모든 HTTP 통신은 반드시 HTTPS 보안 통신으로만 제공된다. 네트워크 계층에서 https 프로토콜로 라우팅하므로 좋든 싫든 HTTPS 서비스를 제공해야만 한다.","coverImage":"https://user-images.githubusercontent.com/50317129/131238727-666f2aaa-d759-4f62-af73-3856086da73d.png","date":"2021-09-06T16:50:40","type":"posts","category":"RaspberryPi","tag":["라즈베리파이","Ubuntu","Tomcat(톰캣)","SSL"],"group":"라즈베리파이","comment":true,"publish":true},"name":"2021-09-06-raspberry-ssl-domain.md","url":["2021-09-06-raspberry-ssl-domain","2021","09","06","raspberry-ssl-domain"]},{"header":{"title":"[라즈베리파이 4] 라즈베리파이에 도메인 입히기","excerpt":"지금까지 과정을 거치면서 라즈베리파이에 OS를 설치하고, Tomcat을 구동하여 웹 서버로 동작할 수 있도록 환경을 구축했다. 이제 우리는 라즈베리파이의 IP로 접속하여 웹 사이트를 호스팅할 수 있다. 하지만 정상적인 페이지라면 IP를 입력하여 접속하지 않는다. Domain을 발급받아 IP에 연동하고, 이를 URL 주소로 사용할 것이다. 이 장에서는 Domain을 직접 구입하고 라즈베리파이 서버에 이를 연동한다.","coverImage":"https://user-images.githubusercontent.com/50317129/131238727-666f2aaa-d759-4f62-af73-3856086da73d.png","date":"2021-09-04T12:09:04","type":"posts","category":"RaspberryPi","tag":["라즈베리파이","Ubuntu","도메인"],"group":"라즈베리파이","comment":true,"publish":true},"name":"2021-09-04-raspberry-domain.md","url":["2021-09-04-raspberry-domain","2021","09","04","raspberry-domain"]},{"header":{"title":"[라즈베리파이 4] Ubuntu에 톰캣 설치하기","excerpt":"OS가 준비되었으므로 본격적으로 웹 서버 환경을 구축해보자. 대표적인 WAS인 Tomcat을 활용하여 페이지를 호스팅한다.","coverImage":"https://user-images.githubusercontent.com/50317129/131238727-666f2aaa-d759-4f62-af73-3856086da73d.png","date":"2021-09-02T23:07:19","type":"posts","category":"RaspberryPi","tag":["라즈베리파이","Ubuntu","도메인"],"group":"라즈베리파이","comment":true,"publish":true},"name":"2021-09-02-ubuntu-in-tomcat.md","url":["2021-09-02-ubuntu-in-tomcat","2021","09","02","ubuntu-in-tomcat"]},{"header":{"title":"[라즈베리파이 4] 라즈베리파이에 Unbuntu 설치하기","excerpt":"목요일을 기점으로 모든 준비물의 배송이 완료됐다. 클린 상태의 라즈베리파이는 OS가 별도로 깔려있지 않은 FreeDOS 상태이므로, 직접 OS를 설치해야한다. 컴퓨터도 주기적으로 포맷하고, 가상머신도 몇 개 돌려본 나로썬 크게 문제될 건 없지만, 이건 내가 지금까지 다루던 컴퓨터와는 좀 다르다는점이 흠. 한 번도 다뤄보지 않은 장비인데다, 일반적인 데스크탑에 비해 여러 차이점과 제약사항이 있어 그리 순탄하진 않았다.","coverImage":"https://user-images.githubusercontent.com/50317129/131238727-666f2aaa-d759-4f62-af73-3856086da73d.png","date":"2021-08-31T01:51:39","type":"posts","category":"RaspberryPi","tag":["라즈베리파이","Ubuntu"],"group":"라즈베리파이","comment":true,"publish":true},"name":"2021-08-31-ubuntu-in-raspberry.md","url":["2021-08-31-ubuntu-in-raspberry","2021","08","31","ubuntu-in-raspberry"]},{"header":{"title":"[라즈베리파이 4] Hello Raspberry!","excerpt":"개발자의 적지않은 수가 클라우드든, 디바이스든 자신만의 서버를 구축하여 다양하게 활용하고 있다. 개발을 하다보면 필연적으로 24시간 언제나 가동되는 서버 비스무리한 것이 필요할 때가 있다. 일례로 GitHub Pages의 경우 정적 페이지만 호스팅해줄 뿐, 백엔드나 DB는 사용할 수가 없어 동적 페이지 호스팅은 불가능하다. 그러나 개인 API 혹은 DB 서버가 존재한다면, 해당 서버와의 통신을 통해 더욱 동적 페이지 호스팅이 가능하다. 웹에서 백엔드가 갖는 역할을 생각해본다면, 개인이 활용 가능한 서버가 있고 없고의 차이는 천지차이가 난다. 나 역시도 개발하는 입장에서 제약없이 사용할 수 있는 서버의 소요가 이전부터 있어왔고, 개인 서버를 구축하기 위한 방안을 모색했다.","coverImage":"https://user-images.githubusercontent.com/50317129/131238727-666f2aaa-d759-4f62-af73-3856086da73d.png","date":"2021-08-29T13:41:41","type":"posts","category":"RaspberryPi","tag":["라즈베리파이"],"group":"라즈베리파이","comment":true,"publish":true},"name":"2021-08-29-hello-raspberry.md","url":["2021-08-29-hello-raspberry","2021","08","29","hello-raspberry"]}]}},"__N_SSG":true}