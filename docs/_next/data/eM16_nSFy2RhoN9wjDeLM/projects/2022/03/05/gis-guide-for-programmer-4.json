{"pageProps":{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 4. QGIS 체험하기","excerpt":"이전에 대부분의 공간정보 데이터는 SHP를 기본으로 제공한다고 언급했었다. 그런데 문제는 이 SHP. 어떻게 여는지 모르겠다. GeoJSON이나 CSV 같은 텍스트 기반 데이터는 어찌됐든 열어서 검증을 해볼 수 있지만, SHP는 그게 안 된다는 말이다. 때문에 SHP를 열어서 조작할 수 있는 일종의 툴이 필요한데, 이미 여러 툴이 있으니 크게 문제되진 않는다. 가장 대표적인 툴은 두 가지가 있다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-05T03:05:25+09:00","type":"projects","category":"GIS","tag":["GIS","QGIS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-05-gis-guide-for-programmer-4.md","url":["2022-03-05-gis-guide-for-programmer-4","2022","03","05","gis-guide-for-programmer-4"],"toc":"<ul><li><a href=\"#QGIS\">QGIS</a></li><ul><li><a href=\"#설치하기\">설치하기</a></li><li><a href=\"#SHP-열어보기\">SHP 열어보기</a></li><li><a href=\"#Open-Street Map 띄워서 비교하기\">Open Street Map 띄워서 비교하기</a></li><li><a href=\"#데이터-확인하기\">데이터 확인하기</a></li><li><a href=\"#좌표계-설정하기\">좌표계 설정하기</a></li><li><a href=\"#레이어-저장하기\">레이어 저장하기</a></li></ul>","content":"<h1 id=\"QGIS\">QGIS <a href=\"#QGIS\">🔗</a></h1><p>이전에 대부분의 공간정보 데이터는 SHP를 기본으로 제공한다고 언급했었다. 그런데 문제는 이 SHP. 어떻게 여는지 모르겠다. GeoJSON이나 CSV 같은 텍스트 기반 데이터는 어찌됐든 열어서 검증을 해볼 수 있지만, SHP는 그게 안 된다는 말이다.</p>\n<p>때문에 SHP를 열어서 조작할 수 있는 일종의 툴이 필요한데, 이미 여러 툴이 있으니 크게 문제되진 않는다. 가장 대표적인 툴은 두 가지가 있다.</p>\n<ul>\n<li>ArcGIS: ESRI에서 개발한 강력한 퍼포먼스를 가진 상용 프로그램. GIS 업계에서 압도적인 파이를 가지고 있지만, 비싸다.</li>\n<li>QGIS: 오픈소스 프로그램. 무료지만, 대용량 처리 시 좀 버벅인다.</li>\n</ul>\n<p>타일맵 제작이나 초대용량 데이터 처리가 아니라면, 대부분은 QGIS로 충분히 커버할 수 있다. Python과의 호환성이 좋아, 덕분에 Python을 활용한 다양한 플러그인을 사용할 수 있다. 본인이 Python에 조예가 있다면, 직접 스크립트를 입력하여 복잡한 동작을 수행할 수도 있다. 하지만 QGIS로 이 정도 수준의 업무를 수행한다면, 개발자라기보단 데이터 관련 직무에 더 가깝다.</p>\n<p>공간정보 데이터에 대한 충분한 이해 없이 OpenLayers를 다뤄봤자, 혼란만 가중된다. 때문에 OpenLayers에 대해 설명하기 이전에, QGIS를 통해 SHP를 다루는 방법을 먼저 다루고 넘어간다.</p>\n<br />\n<br />\n\n\n\n\n\n<h2 id=\"설치하기\">설치하기 <a href=\"#설치하기\">🔗</a></h2><p>QGIS는 <a href=\"https://qgis.org/ko/site/\" target=\"_blank\">공식 홈페이지</a>에서 다운로드 받을 수 있다.</p>\n<br />\n<br />\n\n\n\n\n\n<h2 id=\"SHP-열어보기\">SHP 열어보기 <a href=\"#SHP-열어보기\">🔗</a></h2><p>QGIS를 실행하고, SHP를 드래그해보자. 정상적인 공간정보 파일이라면, 관련 데이터가 창에 표시된다.</p>\n<p>\n\t\t<a href=\"https://user-images.githubusercontent.com/50317129/156781770-e5540bed-d1c3-4fde-be69-e3dac0e08c8c.png\" target=\"_blank\" data-title=\"null\">\n\t\t\t<img src=\"https://user-images.githubusercontent.com/50317129/156781770-e5540bed-d1c3-4fde-be69-e3dac0e08c8c.png\" alt=\"image\" />\n\t\t</a>\n\t</p>\n<p>위 데이터는 도로명주소에서 제공하는 세종시 건물 데이터다. 처음 해보는 사람도, 일단 뭔가 유효한 데이터가 출력됐다 정도는 인식할 수 있다.</p>\n<p>건물은 면(Polygon) 형태를 띈다. 각 도형은 건물을 의미한다.</p>\n<br />\n<br />\n\n\n\n\n\n<h2 id=\"Open-Street Map 띄워서 비교하기\">Open Street Map 띄워서 비교하기 <a href=\"#Open-Street Map 띄워서 비교하기\">🔗</a></h2><p>데이터가 나왔다는 건 알겠는데, 저 건물이 실제로 어떤 위치에 있는지 확인하기 매우 어렵다. 즉, 위치를 비교할 수 있는 완전한 지도를 같이 띄워놓고 비교하는 것이 편하다.</p>\n<p>QGIS는 Open Street Map(이하 OSM) 레이어를 기본으로 제공한다.</p>\n<p>OSM이란, 전세계 지도 종사자들이 자율적으로 관리하는 세계지도다. 각국의 지도는 해당 국가의 개발자들이 기여하므로, 로컬라이징은 물론, 세계화도 잘 되어있어 당장 간편하게 쓰기 좋은 지도다. 단, 네이버나 카카오처럼 국내에 특화된 지도는 아니라서, 국내 한정 서비스에 적용하기는 다소 아쉽다.</p>\n<br />\n\n<p>물론 이건 어디까지나 서비스할 때 얘기고, 당장 데이터 놓고 위치 비교하기엔 이만한 게 없다.</p>\n<p>좌측 사이드바에서 [XYZ Tiles - OpenStreetMap]을 더블 클릭하여 레이어에 추가하자.</p>\n<p>레이어 순서에 따라 표시되는 우선순위가 달라지니, 가급적 OpenLayers를 제일 밑에 두도록 하자.</p>\n<p>\n\t\t<a href=\"https://user-images.githubusercontent.com/50317129/156783705-707ce5d6-c6ce-4d7f-9b49-ce13d824f9e6.png\" target=\"_blank\" data-title=\"null\">\n\t\t\t<img src=\"https://user-images.githubusercontent.com/50317129/156783705-707ce5d6-c6ce-4d7f-9b49-ce13d824f9e6.png\" alt=\"image\" />\n\t\t</a>\n\t</p>\n<p>더욱 비교하기 쉬워졌다. 데이터를 보면 얼추 세종시의 지형에 맞게 데이터가 배치된 것을 확인할 수 있다.</p>\n<br />\n<br />\n\n\n\n\n\n<h2 id=\"데이터-확인하기\">데이터 확인하기 <a href=\"#데이터-확인하기\">🔗</a></h2><p>\n\t\t<a href=\"https://user-images.githubusercontent.com/50317129/156788688-ce4efff3-9648-45a9-8f19-fed8fc81ee21.png\" target=\"_blank\" data-title=\"null\">\n\t\t\t<img src=\"https://user-images.githubusercontent.com/50317129/156788688-ce4efff3-9648-45a9-8f19-fed8fc81ee21.png\" alt=\"image\" />\n\t\t</a>\n\t</p>\n<p>데이터를 클릭해서 정보를 확인할 수 있다. 상단 메뉴에서 [객체 식별 (Ctrl + Shift + I)] 버튼을 클릭하고 객체를 누르면 정보를 확인할 수 있다.</p>\n<br />\n\n<p>\n\t\t<a href=\"https://user-images.githubusercontent.com/50317129/156793866-a6d13e58-fc2b-4b63-aabc-5e16112b07b2.png\" target=\"_blank\" data-title=\"null\">\n\t\t\t<img src=\"https://user-images.githubusercontent.com/50317129/156793866-a6d13e58-fc2b-4b63-aabc-5e16112b07b2.png\" alt=\"image\" />\n\t\t</a>\n\t</p>\n<p>레이어를 오른쪽 마우스로 클릭하면 사용 가능한 메뉴를 볼 수 있다. [속성 테이블 열기]를 클릭하면 모든 데이터의 속성을 볼 수 있다. DB의 형태와 매우 유사하다.</p>\n<p>\n\t\t<a href=\"https://user-images.githubusercontent.com/50317129/156789125-2c96cf14-43d8-4202-bfbf-752aacad0bcb.png\" target=\"_blank\" data-title=\"null\">\n\t\t\t<img src=\"https://user-images.githubusercontent.com/50317129/156789125-2c96cf14-43d8-4202-bfbf-752aacad0bcb.png\" alt=\"image\" />\n\t\t</a>\n\t</p>\n<p>데이터를 찾거나, 선택한 데이터를 지도에 표시하는 것은 물론, 데이터의 수정, 삭제 또한 가능하다.</p>\n<br />\n<br />\n\n\n\n\n\n<h2 id=\"좌표계-설정하기\">좌표계 설정하기 <a href=\"#좌표계-설정하기\">🔗</a></h2><p>QGIS는 각 레이어의 좌표계를 확인하고 주 좌표계로 변환하여 QGIS에 표시한다.</p>\n<p>예를 들어, 아래와 같다고 해보자.</p>\n<ul>\n<li>주 좌표계: EPSG:4326</li>\n<li>A 레이어 좌표계: EPSG:5179</li>\n<li>B 레이어 좌표계: EPSG:3857</li>\n</ul>\n<p>주 좌표계가 <code class=\"inline-code\">EPSG:4326</code>이므로, A, B 좌표를 <code class=\"inline-code\">EPSG:4326</code>으로 변환하여 QGIS에 표시한다. 최종적으로 사용자는 <code class=\"inline-code\">EPSG:4326</code>으로 표현된 지도를 볼 수 있다.</p>\n<p>\n\t\t<a href=\"https://user-images.githubusercontent.com/50317129/156792339-013c91ae-0762-44f0-a03d-fe76144271b2.png\" target=\"_blank\" data-title=\"null\">\n\t\t\t<img src=\"https://user-images.githubusercontent.com/50317129/156792339-013c91ae-0762-44f0-a03d-fe76144271b2.png\" alt=\"image\" />\n\t\t</a>\n\t</p>\n<p>주 좌표계는 QGIS 우측 하단에서 설정할 수 있다. 원하는 EPSG 코드를 찾아 지정하면, 해당 좌표계로 데이터가 자동 변환되어 표시된다.</p>\n<br />\n\n<p>\n\t\t<a href=\"https://user-images.githubusercontent.com/50317129/156792509-a23d95b7-0a64-4e2e-a483-0cfd0f553d93.png\" target=\"_blank\" data-title=\"null\">\n\t\t\t<img src=\"https://user-images.githubusercontent.com/50317129/156792509-a23d95b7-0a64-4e2e-a483-0cfd0f553d93.png\" alt=\"image\" />\n\t\t</a>\n\t</p>\n<p>각 레이어의 좌표계는 해당 메뉴를 통해 변환할 수 있다. 반드시 해당 레이어에 맞는 좌표계를 지정해야한다.</p>\n<p>예를 들어, <code class=\"inline-code\">EPSG:5181</code> 좌표계로 정의된 레이어를 <code class=\"inline-code\">EPSG:4326</code>으로 잘 못 지정하면 전혀 엉뚱한 위치로 계산된다.</p>\n<p>쉽게 설명하자면, 번역기에 이탈리아어를 영어로 인식하고 번역하는 것과 같은 이치다. 영어가 아닌 것을 영어라고 번역하니 전혀 의미없는 단어가 번역되기 때문. 마찬가지로, 레이어 좌표계를 잘 못 지정하면 전혀 엉뚱한 위치로 변환되므로 주의해야한다. 만약 이 현상이 나타났다면, 레이어의 좌표계를 다시 확인하기 바란다.</p>\n<br />\n<br />\n\n\n\n\n\n<h2 id=\"레이어-저장하기\">레이어 저장하기 <a href=\"#레이어-저장하기\">🔗</a></h2><p>QGIS에서 데이터의 내용이나, 좌표계를 변경했을 경우, 이 데이터를 SHP 혹은 그에 준하는 공간정보 데이터로 출력해서 사용할 수 있다.</p>\n<p>\n\t\t<a href=\"https://user-images.githubusercontent.com/50317129/156793756-eb05a60b-be4f-4554-a309-610b0a61ab4b.png\" target=\"_blank\" data-title=\"null\">\n\t\t\t<img src=\"https://user-images.githubusercontent.com/50317129/156793756-eb05a60b-be4f-4554-a309-610b0a61ab4b.png\" alt=\"image\" />\n\t\t</a>\n\t</p>\n<p>[내보내기 - 객체를 다른 이름으로 저장]을 클릭하여 저장 메뉴를 호출한다.</p>\n<p>\n\t\t<a href=\"https://user-images.githubusercontent.com/50317129/156800667-0ef7c428-c905-4fa3-94a9-2cdda89193e3.png\" target=\"_blank\" data-title=\"null\">\n\t\t\t<img src=\"https://user-images.githubusercontent.com/50317129/156800667-0ef7c428-c905-4fa3-94a9-2cdda89193e3.png\" alt=\"image\" />\n\t\t</a>\n\t</p>\n<p>원하는 데이터 형식과 설정을 입력하면, 데이터를 저장할 수 있다.</p>\n<br />\n<br />\n\n<p class=\"primary\">※ 잘못된 정보를 정정해주신 Justin Chi님에게 감사의 말씀들 드립니다.</p>","meta":{"group":[{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 25. WebGL로 초대용량 데이터 표시하기","excerpt":"WFS 마커는 표현 대상이 많아지면 많아질수록 비용으로 직결된다고 언급한 적이 있었다. 하지만 만약, 정말 만약에, 수 많은 객체를 온전히 마커로 전부 보여줘야 한다면? 어떠한 이유로든 이러한 문제에 당면했을 경우, WebGL이 그 해결책이 될 수 있다. 이 장에서는 WebGL 렌더러를 활용하여 30만개의 마커를 표현해본다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-06-02T00:57:11+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer","OpenLayers","WFS","WebGL"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-06-02-gis-guide-for-programmer-25.md","url":["2022-06-02-gis-guide-for-programmer-25","2022","06","02","gis-guide-for-programmer-25"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 24. Heat Map 표현하기","excerpt":"데이터는 보는 관점에 따라, 전혀 새로운 결과를 도출하기도 한다. 지금까지 다뤘던 지도들은 하나같이 데이터를 지도 상에 있는 그대로 보여주는 것에 중점을 뒀었다. 이번 장에서는 Heat Map을 통해, 데이터를 바라보는 관점을 조금 바꿔본다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-06-02T00:27:57+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer","OpenLayers","WFS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-06-02-gis-guide-for-programmer-24.md","url":["2022-06-02-gis-guide-for-programmer-24","2022","06","02","gis-guide-for-programmer-24"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 23. Cluster Map 표현하기","excerpt":"지도에서 마커의 경우, 사용자와의 상호작용이 일어나는 주요소이기 때문에 통상 WFS 객체로 관리한다. 객체를 기반으로 렌더링하다보니, 데이터가 많아지면 많아질수록 곧 서비스의 비용으로 직결된다. 보다시피, 너무 많은 양의 마커는 데이터로써의 의미를 잃게 된다. 너무나도 많은 요소로 인해 시인성은 극도로 떨어지며, 유의미한 상호작용 또한 불가능하다. 최대한 많은 데이터를 보여주고자 흔히 하는 실수이기도 하다. 시인성 이전에, 저렇게 많은 마커를 표현하는 지도는 매우 느리다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-06-01T02:59:12+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer","OpenLayers","WFS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-06-01-gis-guide-for-programmer-23.md","url":["2022-06-01-gis-guide-for-programmer-23","2022","06","01","gis-guide-for-programmer-23"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 22. WFS Transaction으로 데이터 삭제하기","excerpt":"세 가지 WFS Transaction API 중, 마지막 단계로 데이터 삭제에 대해 다뤄보자.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-05-31T01:46:17+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer","OpenLayers","WFS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-05-31-gis-guide-for-programmer-22.md","url":["2022-05-31-gis-guide-for-programmer-22","2022","05","31","gis-guide-for-programmer-22"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 21. WFS Transaction으로 데이터 수정하기","excerpt":"세 가지 WFS Transaction API 중, 데이터를 수정하는 Update에 대해 다뤄보자.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-05-31T01:10:12+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer","OpenLayers","WFS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-05-31-gis-guide-for-programmer-21.md","url":["2022-05-31-gis-guide-for-programmer-21","2022","05","31","gis-guide-for-programmer-21"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 20. WFS Transaction으로 데이터 추가하기","excerpt":"지금까지는 GeoServer를 통해 데이터를 호출하고, 이를 표현하는 것이 전부였다. 객체로 표현을 하던, 이미지로 그리던, 데이터를 직접 표현해주던, 결국 어떠한 형태로든 데이터를 보여주는 수준에 그쳤다. 이 문서를 포함하여, 앞으로 서술할 3개 문서는 공간정보 데이터의 삽입/수정/삭제에 대해 다룬다. WFS Transaction 프로토콜을 활용하면 정해진 패턴으로 데이터의 CUD를 수행할 수 있다. 이 중 이 문서에서는 WFS Transaction Insert. 즉, 공간정보 데이터의 추가에 대해 다룬다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-05-30T00:55:46+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer","OpenLayers","WFS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-05-30-gis-guide-for-programmer-20.md","url":["2022-05-30-gis-guide-for-programmer-20","2022","05","30","gis-guide-for-programmer-20"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 19. WMS에 팝업 붙이기","excerpt":"지도에 표시된 마커 혹은 객체를 클릭하면, 팝업을 통해 해당 객체의 자세한 정보를 보여준다. 이 장에서는 WFS 지도에 팝업을 출력하여 마커의 세부 정보를 표현해본다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-05-28T20:55:23+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer","OpenLayers","WMS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-05-28-gis-guide-for-programmer-19.md","url":["2022-05-28-gis-guide-for-programmer-19","2022","05","28","gis-guide-for-programmer-19"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 18. WFS에 팝업 붙이기","excerpt":"지도에 표시된 마커 혹은 객체를 클릭하면, 팝업을 통해 해당 객체의 자세한 정보를 보여준다. 이 장에서는 WFS 지도에 팝업을 출력하여 마커의 세부 정보를 표현해본다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-05-25T23:00:06+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer","OpenLayers","WFS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-05-25-gis-guide-for-programmer-18.md","url":["2022-05-25-gis-guide-for-programmer-18","2022","05","25","gis-guide-for-programmer-18"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 17. WFS 객체에 상호작용 추가하기","excerpt":"WFS와 WMS의 가장 큰 특징은 데이터의 결과물이다. WFS는 GeoJSON으로 공간정보 요소를 반환해주는 반면, WMS는 공간정보 요소를 토대로 직접 지도를 렌더링하여 제공해준다. OpenLayers는 WFS의 데이터를 토대로 `canvas`에 객체를 렌더링한다. 공간정보를 토대로 일종의 도형을 그린다고 생각하면 쉽다. 이미지와 다르게 웹 상에서 직접 그려지는 객체이므로, 웹은 이를 인식하거나 조작할 수 있다는 큰 장점이 있다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-05-21T03:04:59+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer","OpenLayers"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-05-21-gis-guide-for-programmer-17.md","url":["2022-05-21-gis-guide-for-programmer-17","2022","05","21","gis-guide-for-programmer-17"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 16. WMS GetImage를 사용하여 지도에 이미지 표시하기","excerpt":"이 장에선 WFS를 통해 지도에 이미지를 표시하는 방법에 대해 다룬다. 이전 장의 WFS는 공간정보 데이터를 GeoJSON으로 받아 직접 객체로 표시하지만, WMS는 객체를 GeoServer에서 이미지로 렌더링한 이미지를 받아 표시한다. 즉, GeoServer로 부터 직접 Tile Map을 받아 표현한다고 생각하면 된다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-05-16T02:13:10+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer","OpenLayers","OGC","WMS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-05-16-gis-guide-for-programmer-16.md","url":["2022-05-16-gis-guide-for-programmer-16","2022","05","16","gis-guide-for-programmer-16"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 15. WFS GetFeature를 사용하여 지도에 객체 표시하기","excerpt":"지금까지는 온전히 OpenLayers만의 기능이였다면, 이 장부터 슬슬 GeoServer와의 연동을 다루게 된다. 그 중 첫 번째로 다룰 기능은, WFS다. GeoServer에서 WFS는 지정한 요소의 정보를 GeoJSON의 형태로 반환해준다. 이 정보를 적절히 활용하여 지도에 표시할 수 있다. 이러한 기능을 통해 직접 관리하거나 가공한 데이터를 지도에 표시할 수 있다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-05-15T02:48:50+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer","OpenLayers","OGC","WFS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-05-15-gis-guide-for-programmer-15.md","url":["2022-05-15-gis-guide-for-programmer-15","2022","05","15","gis-guide-for-programmer-15"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 14. 지도에 사용자의 위치 표시하기","excerpt":"사용자의 위치를 기반으로 다양한 서비스를 제공할 수 있겠지만, 그 중에서 가장 기본적인 기능은 사용자의 위치를 지도 상에 직접 표시하는 것이다. 이전 장에서 설명한 지오로케이션을 토대로, OpenLayers를 활용하여 위치를 지도에 표시한다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-04-04T01:56:03+09:00","type":"projects","category":"GIS","tag":["GIS","OpenLayers"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-04-04-gis-guide-for-programmer-14.md","url":["2022-04-04-gis-guide-for-programmer-14","2022","04","04","gis-guide-for-programmer-14"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 13. 브라우저에서 사용자 위치정보 수집하기","excerpt":"지도 서비스 중에서는 사용자의 위치를 분석하고, 위치에 더욱 적절한 컨텐츠를 제시하기도 한다. 일례로, 배달 어플은 사용자의 위치에 따라 일정 범위 내의 음식점만을 우선으로 보여준다던가 하는 방식이다. 어플리케이션의 경우, 주 구동 기기인 스마트폰의 GPS를 활용할 수 있다. 비슷하게 브라우저는 브라우저 자체적으로 사용자의 동의에 따라 위치정보를 수집하여 활용할 수 있다. 당연하게도 인터넷이 반드시 연결되어야 한다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-04-03T02:50:05+09:00","type":"projects","category":"GIS","tag":["GIS","OpenLayers"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-04-03-gis-guide-for-programmer-13.md","url":["2022-04-03-gis-guide-for-programmer-13","2022","04","03","gis-guide-for-programmer-13"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 12. 맵의 유용한 정보 표시하기","excerpt":"지도를 다루다보면, 내가 현재 보고있는 영역의 좌표, 지도 상에서 마우스가 위치한 좌표, 줌 레벨 등 다양한 정보를 얻어야할 경우가 생긴다. 이런 니즈를 충족하기 위해, 지도 상에 상태창을 만들어 관련 정보를 출력해주면 필요할 때 유용하게 사용할 수 있을 것이다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-22T22:37:21+09:00","type":"projects","category":"GIS","tag":["GIS","OpenLayers"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-22-gis-guide-for-programmer-12.md","url":["2022-03-22-gis-guide-for-programmer-12","2022","03","22","gis-guide-for-programmer-12"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 11. VWorld 맵 만들기","excerpt":"이전 장에서 OSM을 통해 지도를 표시해봤다. 하지만, OSM의 지도는 디테일함이 떨어진다는 무시할 수 없는 단점이 존재한다. OSM은 사용하기 쉬운 세계지도라는 큰 장점이 있음에도, 저 단점 하나로 인해 국내 서비스용 지도로 사용하기 어렵다. 즉, 예제 이상의 실질적인 서비스에 사용하려면 국내 지리에 특화된 지도가 필요하다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-21T23:51:45+09:00","type":"projects","category":"GIS","tag":["GIS","OpenLayers"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-21-gis-guide-for-programmer-11.md","url":["2022-03-21-gis-guide-for-programmer-11","2022","03","21","gis-guide-for-programmer-11"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 10. Open Street Map(OSM) 맵 만들기","excerpt":"OSM이란, 전세계 지도 종사자들이 자율적으로 관리하는 세계지도다. 즉, 지도 분야의 오픈 소스라고 생각하면 이해하기 쉽다. 각 국의 기여자들이 지도를 관리하고 있으며, 각 국가의 영역은 해당하는 국가의 언어로 표시된다. 전세계를 대상으로 하는 서비스에도 무리없이 적용 가능하다는 장점이 있다. 단, 한국 기준으로 지도의 퀄리티가 그리 뛰어나진 않다. OpenLayers는 라이브러리 단계에서 OSM을 기본 제공한다. 즉, 별다른 API 호출이나 설정 없이 간단한 코드 몇 줄 만으로도 웹 상에 세계지도를 띄울 수 있다. 이 장에서는 OpenLayers6를 활용하여 웹 상에 OSM을 띄우는 매우 기초적인 방법에 대해 다룬다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-15T04:53:00+09:00","type":"projects","category":"GIS","tag":["GIS","OpenLayers"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-19-gis-guide-for-programmer-10.md","url":["2022-03-19-gis-guide-for-programmer-10","2022","03","19","gis-guide-for-programmer-10"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 9. 데이터 필터링하기","excerpt":"WFS나 WMS를 호출할 때, 좀 더 다채로운 필터링이 필요한 경우가 존재할 수 있다. 특정 영역 밖의 객체를 호출한다거나, 특정 영역에 걸치는 데이터만 호출하는 것, 혹은 다양한 조건을 조합하여 데이터를 조회해야 할 수도 있다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-15T01:11:19+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-15-gis-guide-for-programmer-9.md","url":["2022-03-15-gis-guide-for-programmer-9","2022","03","15","gis-guide-for-programmer-9"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 8. 공간정보 데이터를 주문하는 법. OGC","excerpt":"OpenLayers는 웹 브라우저에서 지도나 GIS 서비스를 제공하기 위한 JavaScript Library다. GIS 라이브러리 중 진입 장벽은 가장 높지만, 그에 상응하는 강력한 기능을 제공한다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-14T23:37:32+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-14-gis-guide-for-programmer-8.md","url":["2022-03-14-gis-guide-for-programmer-8","2022","03","14","gis-guide-for-programmer-8"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 7. 공간정보 데이터를 관리하는 법. GeoServer","excerpt":"이전 장에서 공간정보 데이터를 DB에 넣어봤다. 이제 데이터를 적절한 방법으로 통신할 방법만 마련한다면, DB에 저장한 공간정보 데이터를 웹에서든 앱에서든 자유롭게 활용할 수 있을 것이다. 하지만 누누히 언급했듯이, 공간정보 데이터는 다른 데이터와 엄연한 차별점이 존재한다. 바로 공간 데이터라는 점이다. 공간정보 데이터는 일반적인 텍스트 기반의 데이터가 아니다보니, CRUD에 있어서 굉장히 취약하다. 좀 더 자유로운 통신을 위해 DB에 넣었음에도 CRUD에 전혀 강점이 없는 것. 즉, MyBatis든, JPA든, 일반적인 DB 통신으로는 공간정보 데이터를 온전히 받기가 어렵다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-07T01:12:33+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-07-gis-guide-for-programmer-7.md","url":["2022-03-07-gis-guide-for-programmer-7","2022","03","07","gis-guide-for-programmer-7"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 6. 공간정보의 DB화","excerpt":"데이터의 CRUD 소요가 있는 서비스는 DB를 사용한다. 서비스 운영에 필요한 데이터를 DB에 저장하고, 이를 적절히 관리, 조작함으로써 서비스의 기능을 제공한다. GIS의 경우, 그 특성상 대용량 데이터를 자주 접하게 된다. 일례로, 전국의 건물 수는 몇백만을 우습게 상회하기 때문. 단순 row가 백만 단위인 것도 문제지만, 건물 정보의 특성 상 column의 갯수 또한 수십 개 정도다. 때문의 데이터의 용량이 매우 커진다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-05T04:35:41+09:00","type":"projects","category":"GIS","tag":["GIS","MariaDB","QGIS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-05-gis-guide-for-programmer-6.md","url":["2022-03-05-gis-guide-for-programmer-6","2022","03","05","gis-guide-for-programmer-6"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 5. OpenLayers","excerpt":"OpenLayers는 웹 브라우저에서 지도나 GIS 서비스를 제공하기 위한 JavaScript Library다. GIS 라이브러리 중 진입 장벽은 가장 높지만, 그에 상응하는 강력한 기능을 제공한다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-05T03:39:25+09:00","type":"projects","category":"GIS","tag":["GIS","OpenLayers"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-05-gis-guide-for-programmer-5.md","url":["2022-03-05-gis-guide-for-programmer-5","2022","03","05","gis-guide-for-programmer-5"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 4. QGIS 체험하기","excerpt":"이전에 대부분의 공간정보 데이터는 SHP를 기본으로 제공한다고 언급했었다. 그런데 문제는 이 SHP. 어떻게 여는지 모르겠다. GeoJSON이나 CSV 같은 텍스트 기반 데이터는 어찌됐든 열어서 검증을 해볼 수 있지만, SHP는 그게 안 된다는 말이다. 때문에 SHP를 열어서 조작할 수 있는 일종의 툴이 필요한데, 이미 여러 툴이 있으니 크게 문제되진 않는다. 가장 대표적인 툴은 두 가지가 있다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-05T03:05:25+09:00","type":"projects","category":"GIS","tag":["GIS","QGIS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-05-gis-guide-for-programmer-4.md","url":["2022-03-05-gis-guide-for-programmer-4","2022","03","05","gis-guide-for-programmer-4"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 3. 좌표계","excerpt":"1986년, NASA에서 우주왕복선 챌린저호를 발사했으나, 발사한 지 약 73초만에 폭발한 안타까운 사고가 있었다. 원인은 어이없게도 단위 실수. 국제적인 표준은 미터법임에도 불구하고, 미국을 포함한 몇몇 국가는 인치법을 표준으로 사용하고 있었다. 이러한 상황에서 우주선의 설계도 중 미터법으로 표기된 부품 O Ring을 인치법으로 제작했기 때문에 일어난 사고였다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-04T01:47:29+09:00","type":"projects","category":"GIS","tag":["GIS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-04-gis-guide-for-programmer-3.md","url":["2022-03-04-gis-guide-for-programmer-3","2022","03","04","gis-guide-for-programmer-3"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 2. GIS랑 인사하기","excerpt":"여러분들이 GIS를 처음 접했다면, 한 번 물어보고 싶다. 공간이란 뭘로 이루어져 있을까? 한 번 생각해보자. 다양한 답이 나왔을 것이라 생각한다. 무슨 답인지 내가 직접 못 듣는다는 게 좀 아쉽지만. 아마 대부분 추상적인 답이 나왔을 것이라 생각한다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-03T23:36:04+09:00","type":"projects","category":"GIS","tag":["GIS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-03-gis-guide-for-programmer-2.md","url":["2022-03-03-gis-guide-for-programmer-2","2022","03","03","gis-guide-for-programmer-2"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 1. 머릿말","excerpt":"공간정보, 지리쪽에 업이 있거나 관심있는 사람이 아니라면, GIS라는 단어는 다소 생소한 단어다. 혹자는 GIS가 아니라 GPS 아니냐고 반문하기도 한다. GPS(Global Positioning System)는 3개 이상의 위성 신호를 통해 수신기의 위치를 계산할 수 있는 기법이다. GPS라 하면 흔히 네비게이션을 연상하기 쉽지만, 알게 모르게 GPS는 일상생활에 깊게 녹아들어 있다. 네비게이션, 스마트폰 지도, 배달 플랫폼의 라이더 위치 추적, 드론 군집비행, 군사학 등. GPS는 다양한 영역에 스며들어 그 이로움을 전해준다. 우리는 GPS를 통해, 공간정보라는 디지털 시대에서 공간을 디지털화한다는 것이 어떤 능력을 발휘하는 지 엿볼 수 있다. GIS(Global Information System)는 GPS와 같이 공간정보를 다루는 모든 기술에 대한 포괄적인 기술을 의미한다. GPS 뿐만 아니라, 지도, 좌표계와 같이 공간과 엮이는 모든 기술은 GIS라는 커다란 범주로 묶을 수 있다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-03T23:05:35+09:00","type":"projects","category":"GIS","tag":["GIS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-03-gis-guide-for-programmer-1.md","url":["2022-03-03-gis-guide-for-programmer-1","2022","03","03","gis-guide-for-programmer-1"]}],"next":{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 3. 좌표계","excerpt":"1986년, NASA에서 우주왕복선 챌린저호를 발사했으나, 발사한 지 약 73초만에 폭발한 안타까운 사고가 있었다. 원인은 어이없게도 단위 실수. 국제적인 표준은 미터법임에도 불구하고, 미국을 포함한 몇몇 국가는 인치법을 표준으로 사용하고 있었다. 이러한 상황에서 우주선의 설계도 중 미터법으로 표기된 부품 O Ring을 인치법으로 제작했기 때문에 일어난 사고였다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-04T01:47:29+09:00","type":"projects","category":"GIS","tag":["GIS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-04-gis-guide-for-programmer-3.md","url":["2022-03-04-gis-guide-for-programmer-3","2022","03","04","gis-guide-for-programmer-3"]},"prev":{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 5. OpenLayers","excerpt":"OpenLayers는 웹 브라우저에서 지도나 GIS 서비스를 제공하기 위한 JavaScript Library다. GIS 라이브러리 중 진입 장벽은 가장 높지만, 그에 상응하는 강력한 기능을 제공한다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-05T03:39:25+09:00","type":"projects","category":"GIS","tag":["GIS","OpenLayers"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-05-gis-guide-for-programmer-5.md","url":["2022-03-05-gis-guide-for-programmer-5","2022","03","05","gis-guide-for-programmer-5"]}}},"__N_SSG":true}