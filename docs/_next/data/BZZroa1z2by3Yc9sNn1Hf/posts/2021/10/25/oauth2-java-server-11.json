{"pageProps":{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 11. OAuth 서비스 심사 신청하기","excerpt":"OAuth 서비스를 등록하고 인증 서버까지 별도로 구축했지만, 이렇게 했다고 해서 그 즉시 사용 가능한 것은 아니다. 이 장에서는 OAuth 서비스 심사를 신청하여 OAuth 서비스를 온전히 사용할 수 있도록 한다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-25T22:41:21","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-25-oauth2-java-server-11.md","url":["2021-10-25-oauth2-java-server-11","2021","10","25","oauth2-java-server-11"],"toc":"<ul><li><a href=\"#개요\">개요</a></li><li><a href=\"#OAuth-서비스의 구분\">OAuth 서비스의 구분</a></li><ul><li><a href=\"#테스트-단계\">테스트 단계</a></li><li><a href=\"#프로덕션-단계\">프로덕션 단계</a></li></ul><li><a href=\"#심사-신청하기\">심사 신청하기</a></li><ul><li><a href=\"#네이버\">네이버</a></li><ul><li><a href=\"#1.-NAVER Developers 접속\">1. NAVER Developers 접속</a></li><li><a href=\"#2.-로고 등록하기\">2. 로고 등록하기</a></li><li><a href=\"#3.-자료 제출하기\">3. 자료 제출하기</a></li><ul><li><a href=\"#필수/추가로-지정한 정보를 제대로 활용하고 있는지\">필수/추가로 지정한 정보를 제대로 활용하고 있는지</a></li><li><a href=\"#서비스를-정상적으로 적용했는지\">서비스를 정상적으로 적용했는지</a></li><li><a href=\"#OAuth를-등록하려는 서비스의 종류가 적합한지\">OAuth를 등록하려는 서비스의 종류가 적합한지</a></li></ul><li><a href=\"#3.-심사 신청\">3. 심사 신청</a></li><li><a href=\"#여담\">여담</a></li></ul><li><a href=\"#Google\">Google</a></li><ul><li><a href=\"#1.-Google Cloud Platform 접속\">1. Google Cloud Platform 접속</a></li><li><a href=\"#2.-로고 등록\">2. 로고 등록</a></li><li><a href=\"#2.-게시하기\">2. 게시하기</a></li><li><a href=\"#3.-인증하기\">3. 인증하기</a></li></ul><li><a href=\"#KAKAO\">KAKAO</a></li><li><a href=\"#GitHub\">GitHub</a></li></ul><li><a href=\"#정리\">정리</a></li></ul>","content":"<h1 id=\"개요\">개요 <a href=\"#개요\">🔗</a></h1><p>OAuth 서비스를 등록하고 인증 서버까지 별도로 구축했지만, 이렇게 했다고 해서 그 즉시 사용 가능한 것은 아니다.</p>\n<p>이 장에서는 OAuth 서비스 심사를 신청하여 OAuth 서비스를 온전히 사용할 수 있도록 한다.</p>\n<h1 id=\"OAuth-서비스의 구분\">OAuth 서비스의 구분 <a href=\"#OAuth-서비스의 구분\">🔗</a></h1><p>OAuth 서비스를 신청했다고 해서, 그 즉시 OAuth를 온전히 이용할 수 있는 것은 아니다. <span class=\"blue-500\">대부분의 Service Provider는 일종의 단계를 구분하여 서비스를 제공</span>한다.</p>\n<p>그 이유는 보안 때문이다. OAuth 서비스를 사용한다는 뜻은 사용자의 인증 정보를 받아 사용자의 정보를 호출할 수 있다는 뜻이다.</p>\n<p><span class=\"red-600\">만약 비정상적인 사이트가 이를 악용한다면, 개인정보 보안 문제가 발생</span>하기 매우 쉽다.</p>\n<p>때문에 서비스 제공자들 대부분은 <span class=\"blue-500\">테스트 단계와 프로덕션 단계로 구분하여 서비스를 제공</span>한다.</p>\n<h2 id=\"테스트-단계\">테스트 단계 <a href=\"#테스트-단계\">🔗</a></h2><p><span class=\"primary\">OAuth 서비스를 제한적으로 사용</span>할 수 있는 단계다.</p>\n<p>제공된 API 정보로 인증 서버를 구축하고, 수행하는덴 문제가 없지만 <span class=\"green-500\">반드시 정해진 계정으로만 OAuth 서비스를 이용</span>할 수 있다.</p>\n<p>위와 같은 특성으로 인해 불특정 다수를 타겟하는 서비스와는 맞지 않다.</p>\n<br />\n\n<p>OAuth를 신청하면 자동으로 테스트 단계로 구성되고, 이후 심사를 거쳐야만 프로덕션 단계로 이용할 수 있다.</p>\n<p>서비스 제공자에 따라서 테스트 단계를 세분화하거나, 아예 테스트 단계 자체를 제공하지 않는 경우도 있다.</p>\n<h2 id=\"프로덕션-단계\">프로덕션 단계 <a href=\"#프로덕션-단계\">🔗</a></h2><p><span class=\"primary\">OAuth 서비스를 제한없이 이용</span>할 수 있는 단계다.</p>\n<p>정해진 계정만 이용이 가능했던 테스트 단계와 달리 <span class=\"green-500\">모든 계정에서 사용</span>할 수 있다.</p>\n<p>서비스 제공자가 요구하는 심사 혹은 정책에 맞춰야만 프로덕션 단계로 이용할 수 있다.</p>\n<p>서비스 제공자들은 OAuth를 적용하는 서비스의 심사를 수행하여 OAuth를 사용할 정도로 신뢰할만한 서비스인지를 확인한다.</p>\n<h1 id=\"심사-신청하기\">심사 신청하기 <a href=\"#심사-신청하기\">🔗</a></h1><p>현재 OAuth 서비스를 적용한 플랫폼은 아래와 같다.</p>\n<ul>\n<li>NAVER</li>\n<li>Google</li>\n<li>KAKAO</li>\n<li>GitHub</li>\n</ul>\n<p>각 플랫폼별로 OAuth 서비스 심사를 신청하여 어떤 계정이든 OAuth 서비스에 접근할 수 있도록 제공하자.</p>\n<h2 id=\"네이버\">네이버 <a href=\"#네이버\">🔗</a></h2><p>네이버는 OAuth 서비스 등록 시 개발 중 단계로 등록된다.</p>\n<p>이 단계에선 등록된 계정만 로그인 수행이 가능하다.</p>\n<p>심사를 수행하여 배포 모드로 변경하자. 심사는 많이 까다로운 편이다.</p>\n<p>위 4개 플랫폼 중 요구하는 자료도 제일 많다.</p>\n<h3 id=\"1.-NAVER Developers 접속\">1. NAVER Developers 접속 <a href=\"#1.-NAVER Developers 접속\">🔗</a></h3><p>로그인 후 <a href=\"https://developers.naver.com/main/\" target=\"_blank\">네이버 개발자센터</a>에 접속한다.</p>\n<p>상단 헤더의 [<span class=\"lightBlue-600\">Application</span> - <span class=\"lightBlue-600\">내 애플리케이션</span>] 메뉴로 접속하자.</p>\n<p>심사할 애플리케이션을 클릭하자.</p>\n<h3 id=\"2.-로고 등록하기\">2. 로고 등록하기 <a href=\"#2.-로고 등록하기\">🔗</a></h3><p>로고가 등록되어있지 않다면, 로고를 우선 등록하자. <span class=\"primary\">로고가 있어야 심사를 신청</span>할 수 있다.</p>\n<p>네이버 로그인 창에서 해당 로고 사진이 표시될 것이다.</p>\n<p>필수 사항이니, 마땅한 로고가 없다면 적당히 하나 만들어서 사용하자.</p>\n<p>[<span class=\"lightBlue-600\">API 설정</span>]에서 로고 이미지를 지정할 수 있다. 지원하는 확장자는 <code class=\"inline-code\">jpg</code>, <code class=\"inline-code\">png</code>, <code class=\"inline-code\">gif</code>다.</p>\n<p>이후 수정 버튼을 눌러 완료하자.</p>\n<h3 id=\"3.-자료 제출하기\">3. 자료 제출하기 <a href=\"#3.-자료 제출하기\">🔗</a></h3><p>아래 두 사항에 대해 확인 및 증빙자료를 제출해야 한다.</p>\n<ul>\n<li>필수/추가로 지정한 정보를 제대로 활용하고 있는지</li>\n<li>서비스를 정상적으로 적용했는지</li>\n<li>OAuth를 등록하려는 서비스의 종류가 적합한지</li>\n</ul>\n<h4 id=\"필수/추가로-지정한 정보를 제대로 활용하고 있는지\">필수/추가로 지정한 정보를 제대로 활용하고 있는지 <a href=\"#필수/추가로-지정한 정보를 제대로 활용하고 있는지\">🔗</a></h4><p><span class=\"primary\">필수/추가로 지정한 정보를 서비스에서 실제로 유의미하게 사용하고 있는지를 증빙</span>해야한다. 굳이 필요하지 않는 정보 요청을 막겠다는 취지로 보인다. 반드시 필요한 정보만을 필요한 곳에 사용하도록 강제하는 정책이다.</p>\n<p>이 프로젝트의 경우, 로그인 시 관련 정보를 출력하므로 <span class=\"blue-500\">해당 페이지의 스크린샷을 첨부</span>했다.</p>\n<h4 id=\"서비스를-정상적으로 적용했는지\">서비스를 정상적으로 적용했는지 <a href=\"#서비스를-정상적으로 적용했는지\">🔗</a></h4><p>아래 항목 중 하나를 선택한다.</p>\n<ul>\n<li>네이버 아이디로 로그인을 통한 신규 회원 가입에 적용</li>\n<li><b class=\"green-600\">회원가입 없이 단순 로그인 인증에 적용</b></li>\n<li>게시판 글쓰기 또는 댓글 작성 등 일부 메뉴에 적용</li>\n<li>기타</li>\n</ul>\n<p>이 프로젝트는 로그인만 수행하므로, 2번을 선택한다.</p>\n<p><span class=\"primary\">네아로를 정상적으로 적용하고 사용할 수 있는지를 증빙</span>해야한다. 로그인 절차에 문제는 없는지 확인하는 취지로 보인다.</p>\n<p>로그인 절차에 따라 스크린샷을 찍어 제공하면 되며, 이 프로젝트의 경우 일련의 과정을 촬영하여 <code class=\"inline-code\">gif</code>로 제공했다.</p>\n<h4 id=\"OAuth를-등록하려는 서비스의 종류가 적합한지\">OAuth를 등록하려는 서비스의 종류가 적합한지 <a href=\"#OAuth를-등록하려는 서비스의 종류가 적합한지\">🔗</a></h4><p>일부 민감한 서비스를 제공하는 사이트의 경우 추가 증빙 자료 제출을 요구한다.</p>\n<ul>\n<li>스포츠 게임 배팅, 투표권발행 유사행위를 제공하는 서비스</li>\n<li>온라인으로 주류를 판매하는 서비스</li>\n<li>P2P 웹하드 서비스</li>\n<li>타투 시술 서비스</li>\n<li><b class=\"green-600\">없음</b></li>\n</ul>\n<p>위 서비스 중 어느 것에도 해당되지 않으므로 5번을 선택한다.</p>\n<h3 id=\"3.-심사 신청\">3. 심사 신청 <a href=\"#3.-심사 신청\">🔗</a></h3><p>자료 업로드가 완료되었다면, 심사를 신청하자.</p>\n<p>심사는 통상 1 ~ 3일 정도가 소요된다.</p>\n<h3 id=\"여담\">여담 <a href=\"#여담\">🔗</a></h3><p>네이버는 심사하는 데 우여곡절이 좀 있었다.</p>\n<p>처음엔 단순히 OAuth 로그인만 수행하는 프로젝트라서 적을 것도 없고, 그냥 이메일이랑 이름 표출되는 페이지랑 로그인 절차 스크린샷만 잘 찍어서 보냈는데, 거절당했다.</p>\n<p>\n\t\t<a href=\"https://user-images.githubusercontent.com/50317129/138678286-e20471c5-c385-4005-b9a1-6fc0dc5fc966.png\" target=\"_blank\" data-title=\"null\">\n\t\t\t<img src=\"https://user-images.githubusercontent.com/50317129/138678286-e20471c5-c385-4005-b9a1-6fc0dc5fc966.png\" alt=\"image\" />\n\t\t</a>\n\t\t</p>\n<p>???: 사유 명확하게 적어와.</p>\n<br />\n\n<p>심사가 거부됐다.</p>\n<p>심사 사유를 같이 적어 보내라길래, 나름 필요한 사유를 잘 기입하여 재검토를 요청했다.</p>\n<br />\n<br />\n\n<p>\n\t\t<a href=\"https://user-images.githubusercontent.com/50317129/138678601-1eea1ba7-9926-4507-aec3-b61a2e32428d.png\" target=\"_blank\" data-title=\"null\">\n\t\t\t<img src=\"https://user-images.githubusercontent.com/50317129/138678601-1eea1ba7-9926-4507-aec3-b61a2e32428d.png\" alt=\"image\" />\n\t\t</a>\n\t\t</p>\n<p>???: 아 그딴 간단한 건 걍 개발 중으로 써^^</p>\n<br />\n\n<p>흠... 아무래도 프로젝트가 너무 간단하다보니, 네이버에서도 딱히 심사를 승인해줄 이유가 없는 듯 하다.</p>\n<p>그래도 다른 플랫폼은 전부 프로덕션 모드인데, 네이버만 테스트 모드인 것도 그림이 이상해서 다시 한 번 심사를 신청하기로 했다.</p>\n<p>지금과 같은 방식은 승산이 없다고 판단, 네이버가 원하는 방식대로 내 나름대로의 \"성의\"라는 것을 보여주기로 했다.</p>\n<br />\n<br />\n\n<p>\n\t\t<a href=\"https://user-images.githubusercontent.com/50317129/138678930-c2d93ae7-d449-414a-b66a-4a1db9eda49a.png\" target=\"_blank\" data-title=\"null\">\n\t\t\t<img src=\"https://user-images.githubusercontent.com/50317129/138678930-c2d93ae7-d449-414a-b66a-4a1db9eda49a.png\" alt=\"image\" />\n\t\t</a>\n\t\t</p>\n<p>방법은 제안서의 정석 PPT. 내가 생각하기에도 반드시 OAuth 심사를 신청해야하는 마땅한 이유가 없어서, 반 장난식으로 \"다 활성화인데 너네만 이렇게 냅둘꺼야...?\"같은 뉘앙스를 잔뜩 담아 PPT로 제출했다.</p>\n<p>이 시도마저 무산된다면, 그냥 네이버는 깔끔하게 포기할 생각이고, PPT에도 이 마저도 안 된다면 더 귀찮게 굴지 않겠다는 언급도 했겠다. 이제 기다리는 수 밖에 없다.</p>\n<br />\n<br />\n<br />\n<br />\n\n<p>\n\t\t<a href=\"https://user-images.githubusercontent.com/50317129/138703203-d9edc619-f4ec-4edf-8535-ad1db832b2f4.png\" target=\"_blank\" data-title=\"null\">\n\t\t\t<img src=\"https://user-images.githubusercontent.com/50317129/138703203-d9edc619-f4ec-4edf-8535-ad1db832b2f4.png\" alt=\"image\" />\n\t\t</a>\n\t\t</p>\n<p>이왜진?</p>\n<br />\n\n<p>이게 통했다.</p>\n<p>왜 승인됐는진 잘 모르겠다. 나름 사유를 잘 적어서 그런건지, 원래 안 되는데 \"그래 걍 해준다 아ㅋㅋㅋㅋㅋㅋ\"로 된건지.</p>\n<p>어쨌든 네이버 신청은 완료됐고, 나름 재밌는 경험이지 않나 싶다. 여러분들도 심사 신청할 때 간단한 프로젝트라고 겁먹지 말고 최대한 성의를 담아 신청하도록 해보자.</p>\n<ul>\n<li><a href=\"https://github.com/RWB0104/Kapoo/files/7409284/default.pptx\" target=\"_blank\">네아로 신청.pptx</a></li>\n</ul>\n<p>내가 첨부했던 PPT다. 혹시 관심이 있다면 참고하길 바란다.</p>\n<h2 id=\"Google\">Google <a href=\"#Google\">🔗</a></h2><p>구글은 OAuth 서비스 신청 시 테스트 모드로 등록된다.</p>\n<p>프로덕션 모드로 변경하기 위해 아래의 절차를 수행한다.</p>\n<h3 id=\"1.-Google Cloud Platform 접속\">1. Google Cloud Platform 접속 <a href=\"#1.-Google Cloud Platform 접속\">🔗</a></h3><p>OAuth 서비스를 등록했던 <a href=\"https://console.cloud.google.com/\" target=\"_blank\">Google Cloud Platform</a>에 접속한다. </p>\n<h3 id=\"2.-로고 등록\">2. 로고 등록 <a href=\"#2.-로고 등록\">🔗</a></h3><p>로고 이미지를 등록하지 않았다면, 등록하자.</p>\n<p>[<span class=\"lightBlue-600\">OAuth 동의 화면</span>]을 클릭하면 나오는 화면에서 [<span class=\"lightBlue-600\">앱 수정</span>]을 클릭하여 로고를 추가하면 된다.</p>\n<h3 id=\"2.-게시하기\">2. 게시하기 <a href=\"#2.-게시하기\">🔗</a></h3><p>\n\t\t<a href=\"https://user-images.githubusercontent.com/50317129/138680360-a51a8830-ca37-4a93-8912-20f529199621.png\" target=\"_blank\" data-title=\"null\">\n\t\t\t<img src=\"https://user-images.githubusercontent.com/50317129/138680360-a51a8830-ca37-4a93-8912-20f529199621.png\" alt=\"image\" />\n\t\t</a>\n\t\t</p>\n<p>해당 페이지에서 [<span class=\"lightBlue-600\">게시</span>]를 클릭하여 프로덕션 모드로 전환한다.</p>\n<br />\n\n<p>\n\t\t<a href=\"https://user-images.githubusercontent.com/50317129/138680486-cd0d27a7-42f1-4b66-8abf-04bb2d0ce12c.png\" target=\"_blank\" data-title=\"null\">\n\t\t\t<img src=\"https://user-images.githubusercontent.com/50317129/138680486-cd0d27a7-42f1-4b66-8abf-04bb2d0ce12c.png\" alt=\"image\" />\n\t\t</a>\n\t\t</p>\n<p>이와 같이 변경된다. [<span class=\"lightBlue-600\">테스트로 돌아가기</span>]를 선택하면 다시 이전처럼 테스트 모드로 되돌릴 수 있다.</p>\n<h3 id=\"3.-인증하기\">3. 인증하기 <a href=\"#3.-인증하기\">🔗</a></h3><p>[<span class=\"lightBlue-600\">확인 준비</span>]를 클릭하여 애플리케이션을 인증하자.</p>\n<p>필요한 내용을 작성하고 제출하면 심사가 시작된다.</p>\n<p>구글은 약 4 ~ 6주간 소요된다고 하니, 천천히 기다리자.</p>\n<h2 id=\"KAKAO\">KAKAO <a href=\"#KAKAO\">🔗</a></h2><p>카카오는 OAuth 서비스 신청 시 제한적인 프로덕션 모드로 등록된다.</p>\n<p>카카오의 심사 방식은 조금 특이하다. <span class=\"blue-500\">별도의 심사를 거치지 않아도, 모든 카카오 계정이 제한없이 OAuth 서비스를 이용</span>할 수 있다.</p>\n<p>네이버나 구글같이 별도의 테스트모드를 두어 별도의 심사를 요구한 뒤 접근 권한을 열어주는 것과는 반대되는 방식이다.</p>\n<br />\n\n<p>카카오의 차이는 정보 제공 동의 선택에서 나타난다.</p>\n<p>\n\t\t<a href=\"https://user-images.githubusercontent.com/50317129/138683825-b7442ce0-7afe-4179-bc10-c74d1dca822b.png\" target=\"_blank\" data-title=\"null\">\n\t\t\t<img src=\"https://user-images.githubusercontent.com/50317129/138683825-b7442ce0-7afe-4179-bc10-c74d1dca822b.png\" alt=\"image\" />\n\t\t</a>\n\t\t</p>\n<p>정보 제공 선택 시, 몇몇 정보는 검수가 필요하다는 이유로 필수 선택이 불가능하다.</p>\n<p>이러한 정보는 비즈니스 앱을 별도로 신청하여 심사를 통과해야만 필수 선택이 가능하다.</p>\n<p>그런데 문제는 이거, 비즈니스란 이름답게 <span class=\"red-600\">심사 시 사업자번호를 요구</span>한다...</p>\n<br />\n\n<p>그렇다고 개인은 신청이 불가능하냐? 그건 또 아니다. <a href=\"https://devtalk.kakao.com/t/how-can-i-switch-to-a-biz-app-if-i-do-not-have-any-business-registration-number/71983\" target=\"_blank\">이 링크</a>에서 이와 관련한 카카오 개발자의 답변을 확인할 수 있다.</p>\n<p>\n\t\t<a href=\"https://user-images.githubusercontent.com/50317129/138684484-c40a6381-1428-47ae-a056-7813be503492.png\" target=\"_blank\" data-title=\"null\">\n\t\t\t<img src=\"https://user-images.githubusercontent.com/50317129/138684484-c40a6381-1428-47ae-a056-7813be503492.png\" alt=\"image\" />\n\t\t</a>\n\t\t</p>\n<ul>\n<li>앱 이름</li>\n<li>애플리케이션 ID</li>\n<li>애플리케이션 소유자 이메일</li>\n<li>본인 인증 완료 여부</li>\n<li>신청 목적</li>\n</ul>\n<p>위 항목을 빠짐없이 기입하여 데브톡에 글을 올리면 되는 것 같다.</p>\n<p>앱 이름은 애플리케이션의 성격에 맞게 등록하도록 권고하고 있다.</p>\n<ul>\n<li>test</li>\n<li>테스트</li>\n<li>oauth2</li>\n<li>로그인</li>\n</ul>\n<p>위와 같은 범용적인 이름은 등록을 가급적 지양하는 모양이니, 애플리케이션의 아이덴티티를 드러낼 수 있는 이름을 선택하자.</p>\n<br />\n\n<p>카카오는 반드시 심사를 신청하지 않더라도 로그인은 누구나 수행할 수 있으니 신청 유무는 자유다.</p>\n<ul>\n<li><a href=\"https://devtalk.kakao.com/t/oauth/119006\" target=\"_blank\">신청 예시</a></li>\n</ul>\n<p>필자는 위와 같이 신청했다.</p>\n<p>밤에 작성했는데, 그 다음날 아침에 바로 승인해줬다. 로그인 API는 별다른 서류나 증빙자료를 요구하지 않는 듯 하니, 원한다면 부담없이 신청하자.</p>\n<p>이제 이메일을 필수로 받을 수 있다!</p>\n<h2 id=\"GitHub\">GitHub <a href=\"#GitHub\">🔗</a></h2><p>GitHub는 서비스 등록 즉시 프로덕션 모드로 동작하므로 <span class=\"blue-500\">심사 과정이 없다.</span></p>\n<p>OAuth App 생성 즉시 모든 GitHub 계정에서 사용이 가능하다.</p>\n<h1 id=\"정리\">정리 <a href=\"#정리\">🔗</a></h1><p>프로젝트에 적용된 플랫폼에 대한 OAuth 서비스 심사를 진행했다.</p>\n<p>심사가 모두 완료되면 누구나 제한없이 OAuth 로그인을 사용할 수 있을 것이다.</p>\n<br />\n\n<p>이 장을 끝으로 OAuth 인증 서버 개발기에 대한 기술적인 부분은 정리가 끝났다.</p>\n","meta":{"group":[{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 12. 마치며","excerpt":"그 동안 만들어 놓은건 많은데, 정작 정리같은 건 해두지 않았었다. GitHub를 활용하지 않기도 했고, 블로그도 딱히 운영하지 않고 있었으니.. 개인 서버도 샀겠다. 나름의 개발 포트폴리오를 위해 시험삼아 만든 프로젝트다. 개발부터 정리까지 차근차근 작성한 프로젝트는 이게 처음이 아닌가 싶다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-25T22:41:21","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-25-oauth2-java-server-12.md","url":["2021-10-25-oauth2-java-server-12","2021","10","25","oauth2-java-server-12"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 11. OAuth 서비스 심사 신청하기","excerpt":"OAuth 서비스를 등록하고 인증 서버까지 별도로 구축했지만, 이렇게 했다고 해서 그 즉시 사용 가능한 것은 아니다. 이 장에서는 OAuth 서비스 심사를 신청하여 OAuth 서비스를 온전히 사용할 수 있도록 한다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-25T22:41:21","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-25-oauth2-java-server-11.md","url":["2021-10-25-oauth2-java-server-11","2021","10","25","oauth2-java-server-11"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 10. 컨트롤러 구현하기","excerpt":"Jersey 라이브러리를 통해 요청을 받아 응답을 반환하는 컨트롤러를 구성해보자. Jersey에 대해 자세히 알아보고 싶다면 이전 글을 참고하자.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-25T02:24:17","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0","Jersey"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-25-oauth2-java-server-10.md","url":["2021-10-25-oauth2-java-server-10","2021","10","25","oauth2-java-server-10"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 9. Jersey로 RESTful API 서비스 제공하기","excerpt":"이 장에서는 Jersey를 활용하여 RESTful API 서비스를 제공하는 방법에 대해 다룬다. 이 프로젝트는 Jersey를 통해 요청을 받아 응답하므로, 컨트롤러를 구성하기 이전에 Jersey에 대해 잠깐 다루고 넘어간다. 통상 JAVA 서버를 구축하는데 Spring 프레임워크를 많이 사용할 것이다. 그럼에도 굳이 Jersey를 선택하는 이유는 일단 내가 Spring을 잘 모른다. 그것도 그거지만, Spring에 비해 규모가 작고 설정이 간단해서 온전히 RESTful 서버를 구축하는데 집중할 수 있다. Spring 설정의 악랄함은 고사하고, 이 프로젝트의 특성 상 복잡한 로직이나 다채로운 기능을 요구하지 않는다. Spring의 방대한 규모를 온전히 쓰지 못 하므로 배보다 배꼽이 더 크다는 뜻이다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-25T00:12:58","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0","Jersey"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-25-oauth2-java-server-9.md","url":["2021-10-25-oauth2-java-server-9","2021","10","25","oauth2-java-server-9"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 8. 프로세스 구현하기","excerpt":"4장부터 7장까지 진행하며 각 플랫폼의 인증 모듈을 구현했다. 이 장에서는 모듈을 사용하는 주체인 프로세스를 구현한다. 프로세스는 HTTP 메소드에 따라 구분하여 관리한다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-24T23:58:10","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0"],"group":"OAuth2.0 인증서버 구축기","comment":"trueㄴ","publish":true},"name":"2021-10-24-oauth2-java-server-8.md","url":["2021-10-24-oauth2-java-server-8","2021","10","24","oauth2-java-server-8"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 7. GitHub OAuth 서비스 신청 및 모듈 구현하기","excerpt":"마지막 플랫폼으로, GitHub에 OAuth 서비스를 신청하고 인증 모듈을 구현한다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-23T05:08:46","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0","scribeJAVA"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-23-oauth2-java-server-7.md","url":["2021-10-23-oauth2-java-server-7","2021","10","23","oauth2-java-server-7"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 6. KAKAO OAuth 서비스 신청 및 모듈 구현하기","excerpt":"세 번째 플랫폼으로, KAKAO에 OAuth 서비스를 신청하고 인증 모듈을 구현한다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-23T03:51:04","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0","scribeJAVA"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-23-oauth2-java-server-6.md","url":["2021-10-23-oauth2-java-server-6","2021","10","23","oauth2-java-server-6"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 5. Google OAuth 서비스 신청 및 모듈 구현하기","excerpt":"두 번째 플랫폼으로, Google에 OAuth 서비스를 신청하고 인증 모듈을 구현한다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-23T01:51:53","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0","scribeJAVA"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-23-oauth2-java-server-5.md","url":["2021-10-23-oauth2-java-server-5","2021","10","23","oauth2-java-server-5"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 4. NAVER OAuth 서비스 신청 및 모듈 구현하기","excerpt":"첫 번째 플랫폼으로, NAVER에 OAuth 서비스를 신청하고 인증 모듈을 구현한다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-22T22:25:16","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0","scribeJAVA"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-22-oauth2-java-server-4.md","url":["2021-10-22-oauth2-java-server-4","2021","10","22","oauth2-java-server-4"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 3. scribeJAVA로 OAuth2.0 인증 모듈 구현하기","excerpt":"OAuth 라이브러리인 scribeJAVA를 통해 인증 모듈을 구현해보자.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-20T01:26:40","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0","Jersey"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-20-oauth2-java-server-3.md","url":["2021-10-20-oauth2-java-server-3","2021","10","20","oauth2-java-server-3"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 2. 인증서버 설계하기","excerpt":"OAuth2.0 프로토콜에 대한 사전 지식도 얻었으니, 이를 통해 인증서버를 직접 구축해보자. Frontend, Backend 부분으로 나누어 웹 페이지를 통해 소셜 로그인을 수행하고, 직접 구현한 인증서버에서 이를 처리하는 시스템 일체를 구축하는 것이 궁극적인 목표다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-14T22:12:25","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-14-oauth2-java-server-2.md","url":["2021-10-14-oauth2-java-server-2","2021","10","14","oauth2-java-server-2"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 1. OAuth2.0이란?","excerpt":"사이트를 돌아다니다보면 로그인이 필요한 사이트를 심심치않게 만나볼 수 있다. 그리고 이런 사이트들은 대부분 \"네이버로 로그인하기\"와 같은 플랫폼 로그인을 제공한다. 사이트 뿐만 아니라 근래 들어 출시되는 앱 역시 대부분 플랫폼을 통한 인증 서비스를 제공한다. 이를 활용하면 매우 간단한 절차를 통해 회원가입 또는 로그인을 수행할 수 있게 된다. 이러한 서비스는 네이버 뿐만 아니라 Google, 카카오 등 어느정도 규모있는 플랫폼의 대부분은 이러한 \"플랫폼으로 로그인하기\"와 같은 기능을 제공한다. 이렇게 플랫폼의 정보를 활용하여 타 사이트에서 인증을 수행하는 것을 OAuth 프로토콜이라 한다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-14T00:56:31","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-14-oauth2-java-server-1.md","url":["2021-10-14-oauth2-java-server-1","2021","10","14","oauth2-java-server-1"]}],"next":{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 10. 컨트롤러 구현하기","excerpt":"Jersey 라이브러리를 통해 요청을 받아 응답을 반환하는 컨트롤러를 구성해보자. Jersey에 대해 자세히 알아보고 싶다면 이전 글을 참고하자.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-25T02:24:17","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0","Jersey"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-25-oauth2-java-server-10.md","url":["2021-10-25-oauth2-java-server-10","2021","10","25","oauth2-java-server-10"]},"prev":{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 12. 마치며","excerpt":"그 동안 만들어 놓은건 많은데, 정작 정리같은 건 해두지 않았었다. GitHub를 활용하지 않기도 했고, 블로그도 딱히 운영하지 않고 있었으니.. 개인 서버도 샀겠다. 나름의 개발 포트폴리오를 위해 시험삼아 만든 프로젝트다. 개발부터 정리까지 차근차근 작성한 프로젝트는 이게 처음이 아닌가 싶다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-25T22:41:21","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-25-oauth2-java-server-12.md","url":["2021-10-25-oauth2-java-server-12","2021","10","25","oauth2-java-server-12"]}}},"__N_SSG":true}