{"pageProps":{"images":["celeb1.webm","celeb10.webm","celeb11.webm","celeb12.webm","celeb13.webm","celeb14.webm","celeb15.webm","celeb16.webm","celeb17.webm","celeb2.webm","celeb3.webm","celeb4.webm","celeb5.webm","celeb6.webm","celeb7.webm","celeb8.webm","celeb9.webm","city1.webm","city10.webm","city11.webm","city12.webm","city13.webm","city2.webm","city3.webm","city4.webm","city5.webm","city6.webm","city7.webm","city8.webm","city9.webm","code1.webm","code2.webm","code3.webm","funk1.webm","funk2.webm","funk3.webm","funk4.webm","funk5.webm","funk6.webm","game1.webm"],"posts":[{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 12. 마치며","excerpt":"그 동안 만들어 놓은건 많은데, 정작 정리같은 건 해두지 않았었다. GitHub를 활용하지 않기도 했고, 블로그도 딱히 운영하지 않고 있었으니.. 개인 서버도 샀겠다. 나름의 개발 포트폴리오를 위해 시험삼아 만든 프로젝트다. 개발부터 정리까지 차근차근 작성한 프로젝트는 이게 처음이 아닌가 싶다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-25T22:41:21","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-25-oauth2-java-server-12.md","content":"","url":["2021-10-25-oauth2-java-server-12","2021","10","25","oauth2-java-server-12"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 11. OAuth 서비스 심사 신청하기","excerpt":"OAuth 서비스를 등록하고 인증 서버까지 별도로 구축했지만, 이렇게 했다고 해서 그 즉시 사용 가능한 것은 아니다. 이 장에서는 OAuth 서비스 심사를 신청하여 OAuth 서비스를 온전히 사용할 수 있도록 한다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-25T22:41:21","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-25-oauth2-java-server-11.md","content":"","url":["2021-10-25-oauth2-java-server-11","2021","10","25","oauth2-java-server-11"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 10. 컨트롤러 구현하기","excerpt":"Jersey 라이브러리를 통해 요청을 받아 응답을 반환하는 컨트롤러를 구성해보자. Jersey에 대해 자세히 알아보고 싶다면 이전 글을 참고하자.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-25T02:24:17","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0","Jersey"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-25-oauth2-java-server-10.md","content":"","url":["2021-10-25-oauth2-java-server-10","2021","10","25","oauth2-java-server-10"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 9. Jersey로 RESTful API 서비스 제공하기","excerpt":"이 장에서는 Jersey를 활용하여 RESTful API 서비스를 제공하는 방법에 대해 다룬다. 이 프로젝트는 Jersey를 통해 요청을 받아 응답하므로, 컨트롤러를 구성하기 이전에 Jersey에 대해 잠깐 다루고 넘어간다. 통상 JAVA 서버를 구축하는데 Spring 프레임워크를 많이 사용할 것이다. 그럼에도 굳이 Jersey를 선택하는 이유는 일단 내가 Spring을 잘 모른다. 그것도 그거지만, Spring에 비해 규모가 작고 설정이 간단해서 온전히 RESTful 서버를 구축하는데 집중할 수 있다. Spring 설정의 악랄함은 고사하고, 이 프로젝트의 특성 상 복잡한 로직이나 다채로운 기능을 요구하지 않는다. Spring의 방대한 규모를 온전히 쓰지 못 하므로 배보다 배꼽이 더 크다는 뜻이다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-25T00:12:58","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0","Jersey"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-25-oauth2-java-server-9.md","content":"","url":["2021-10-25-oauth2-java-server-9","2021","10","25","oauth2-java-server-9"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 8. 프로세스 구현하기","excerpt":"4장부터 7장까지 진행하며 각 플랫폼의 인증 모듈을 구현했다. 이 장에서는 모듈을 사용하는 주체인 프로세스를 구현한다. 프로세스는 HTTP 메소드에 따라 구분하여 관리한다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-24T23:58:10","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0"],"group":"OAuth2.0 인증서버 구축기","comment":"trueㄴ","publish":true},"name":"2021-10-24-oauth2-java-server-8.md","content":"","url":["2021-10-24-oauth2-java-server-8","2021","10","24","oauth2-java-server-8"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 7. GitHub OAuth 서비스 신청 및 모듈 구현하기","excerpt":"마지막 플랫폼으로, GitHub에 OAuth 서비스를 신청하고 인증 모듈을 구현한다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-23T05:08:46","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0","scribeJAVA"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-23-oauth2-java-server-7.md","content":"","url":["2021-10-23-oauth2-java-server-7","2021","10","23","oauth2-java-server-7"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 6. KAKAO OAuth 서비스 신청 및 모듈 구현하기","excerpt":"세 번째 플랫폼으로, KAKAO에 OAuth 서비스를 신청하고 인증 모듈을 구현한다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-23T03:51:04","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0","scribeJAVA"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-23-oauth2-java-server-6.md","content":"","url":["2021-10-23-oauth2-java-server-6","2021","10","23","oauth2-java-server-6"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 5. Google OAuth 서비스 신청 및 모듈 구현하기","excerpt":"두 번째 플랫폼으로, Google에 OAuth 서비스를 신청하고 인증 모듈을 구현한다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-23T01:51:53","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0","scribeJAVA"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-23-oauth2-java-server-5.md","content":"","url":["2021-10-23-oauth2-java-server-5","2021","10","23","oauth2-java-server-5"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 4. NAVER OAuth 서비스 신청 및 모듈 구현하기","excerpt":"첫 번째 플랫폼으로, NAVER에 OAuth 서비스를 신청하고 인증 모듈을 구현한다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-22T22:25:16","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0","scribeJAVA"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-22-oauth2-java-server-4.md","content":"","url":["2021-10-22-oauth2-java-server-4","2021","10","22","oauth2-java-server-4"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 3. scribeJAVA로 OAuth2.0 인증 모듈 구현하기","excerpt":"OAuth 라이브러리인 scribeJAVA를 통해 인증 모듈을 구현해보자.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-20T01:26:40","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0","Jersey"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-20-oauth2-java-server-3.md","content":"","url":["2021-10-20-oauth2-java-server-3","2021","10","20","oauth2-java-server-3"]}],"projects":[{"header":{"title":"[React] 𝝅번째 알파카의 개발 낙서장 프로젝트","excerpt":"어쩌다 독학하게 된 React를 유의미하게 써먹기위해 직접 만든 개발 블로그. 정적 블로그를 위한 NextJS를 활용하여 개발했다. Typescript를 사용하고 있으며, SCSS를 통한 CSS-in-CSS 방식으로 디자인을 렌더링한다. 라즈베리파이를 구매하면서 서버 구축을 위해 같이 구입한 도메인 itcode.dev를 적용했다. blog.itcode.dev로, 서브도메인 blog를 사용했다.","coverImage":"https://user-images.githubusercontent.com/50317129/138741601-2bca31f3-d08a-4789-9c99-6a835883fbe4.png","date":"2021-10-25T22:41:21","type":"projects","category":"React","tag":["NextJS","React","Typescript","SCSS"],"comment":true,"publish":true},"name":"2021-10-26-github-react-blog.md","content":"\r\n# 𝝅번째 알파카의 개발 낙서장 프로젝트\r\n\r\n![image](https://user-images.githubusercontent.com/50317129/138726633-1576b0dd-55bd-492c-ac1d-ccfbdc5472dc.png)\r\n\r\n<p align=\"center\"><b class=\"large\">𝝅번째 알파카의 개발 낙서장 프로젝트</b></p>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n# 📙 Information\r\n\r\n\r\n\r\n\r\n\r\n## **💬 Language**\r\n\r\n* [![TypeScript](http://img.shields.io/badge/TypeScript-3178C6?style=flat-square&logo=typescript&logoWidth=25&logoColor=FFF)](https://www.typescriptlang.org/)\r\n* [![SCSS](http://img.shields.io/badge/SCSS-CC6699?style=flat-square&logo=sass&logoWidth=25&logoColor=FFF)](https://sass-lang.com/)\r\n\r\n\r\n\r\n\r\n\r\n## **🧱 Framework**\r\n\r\n* [![React](http://img.shields.io/badge/React-333?style=flat-square&logo=react&logoWidth=25&logoColor=61DAFB)](https://ko.reactjs.org/)\r\n* [![NextJS](http://img.shields.io/badge/NextJS-FFF?style=flat-square&logo=next.js&logoWidth=25&logoColor=000)](https://nextjs.org/)\r\n\r\n\r\n\r\n\r\n\r\n## **📦 Publish**\r\n\r\n* [![GitHub](http://img.shields.io/badge/GitHub-000?style=flat-square&logo=github&logoWidth=25&logoColor=FFF)](https://github.com/)\r\n\r\n\r\n\r\n\r\n\r\n## **📚 NodeJS Dependency**\r\n\r\n\r\n\r\n### dependency\r\n\r\n* ![@material-ui/core](https://img.shields.io/badge/@material--ui\\/core-^4.12.1-green)\r\n* ![@material-ui/icons](https://img.shields.io/badge/@material--ui\\/icons-^4.12.2-green)\r\n* ![katex](https://img.shields.io/badge/katex-^0.13.11-green)\r\n* ![next](https://img.shields.io/badge/next-11.0.1-green)\r\n* ![next-pwa](https://img.shields.io/badge/next--pwa-^5.3.1-green)\r\n* ![prismjs](https://img.shields.io/badge/prismjs-^1.24.1-green)\r\n* ![react](https://img.shields.io/badge/react-17.0.2-green)\r\n* ![react-cookie](https://img.shields.io/badge/react--cookie-^4.0.3-green)\r\n* ![react-dom](https://img.shields.io/badge/react--dom-17.0.2-green)\r\n* ![recoil](https://img.shields.io/badge/recoil-^0.3.1-green)\r\n\r\n\r\n\r\n### devdependency\r\n\r\n* ![@types/katex](https://img.shields.io/badge/@types\\/katex-^0.11.1-lightgrey)\r\n* ![@types/marked](https://img.shields.io/badge/@types\\/marked-^2.0.4-lightgrey)\r\n* ![@types/prismjs](https://img.shields.io/badge/@types\\/prismjs-^1.16.6-lightgrey)\r\n* ![@types/react](https://img.shields.io/badge/@types\\/react-17.0.14-lightgrey)\r\n* ![@typescript-eslint/eslint-plugin](https://img.shields.io/badge/@typescript--eslint\\/eslint--plugin-^4.28.2-lightgrey)\r\n* ![@typescript-eslint/parser](https://img.shields.io/badge/@typescript--eslint\\/parser-^4.28.2-lightgrey)\r\n* ![@zeit/next-sass](https://img.shields.io/badge/@zeit\\/next--sass-^1.0.1-lightgrey)\r\n* ![babel-plugin-styled-components](https://img.shields.io/badge/babel--plugin--styled--components-^1.13.2-lightgrey)\r\n* ![eslint](https://img.shields.io/badge/eslint-7.30.0-lightgrey)\r\n* ![eslint-config-next](https://img.shields.io/badge/eslint--config--next-^11.0.1-lightgrey)\r\n* ![eslint-plugin-unused-imports](https://img.shields.io/badge/eslint--plugin--unused--imports-^1.1.2-lightgrey)\r\n* ![gray-matter](https://img.shields.io/badge/gray--matter-^4.0.3-lightgrey)\r\n* ![marked](https://img.shields.io/badge/marked-^2.1.3-lightgrey)\r\n* ![node-sass](https://img.shields.io/badge/node--sass-5.0.0-lightgrey)\r\n* ![typescript](https://img.shields.io/badge/typescript-4.3.5-lightgrey)\r\n* ![xml-formatter](https://img.shields.io/badge/xml--formatter-^2.4.0-lightgrey)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n# 📋 Contents\r\n\r\n어쩌다 독학하게 된 React를 유의미하게 써먹기위해 직접 만든 개발 블로그.\r\n\r\n정적 블로그를 위한 NextJS를 활용하여 개발했다. Typescript를 사용하고 있으며, SCSS를 통한 CSS-in-CSS 방식으로 디자인을 렌더링한다.\r\n\r\n라즈베리파이를 구매하면서 서버 구축을 위해 같이 구입한 도메인 `itcode.dev`를 적용했다. `blog.itcode.dev`로, 서브도메인 `blog`를 사용했다.\r\n\r\n<br />\r\n\r\n직접 개발한 블로그를 사용함으로써 블로그 운영에 애착을 가질 수 있었고, 직접 개발한 만큼 개발자의 면모를 나름대로 보여줄 수 있어서 좋다.\r\n\r\n\r\n\r\n\r\n\r\n## 📅 Timeline\r\n\r\n* [<b class=\"large amber-600\">지금</b>] 당신에게 선보이다..\r\n\r\n<br />\r\n\r\n* [<b class=\"large amber-600\">2021.10.08</b>] 기능 개선\r\n  * 스크리너가 비디오일 경우, 첫 비디오로 고정되는 현상 개선\r\n  * 인덱스 페이지의 비동기 데이터량 최적화\r\n* [<b class=\"large amber-600\">2021.09.28</b>] 기능 개선\r\n  * Footer에 Hits를 적용하여 블로그 방문자 수 카운팅 기능 추가\r\n  * Posts, Projects 리스트를 렌더링하는데 필요한 최소한의 데이터만을 가지도록 최적화함\r\n  * 리스트 컴포넌트가 전체 데이터를 요구하지 않도록 변경\r\n  * 컨텐츠 아이템, 메타의 기본 이미지 정의\r\n* [<b class=\"large amber-600\">2021.09.27</b>] 기능 개선\r\n  * Hits의 URL 표시 방식 변경\r\n  * 컨텐츠 리스트가 최소한의 데이터만 가지도록 데이터 최적화\r\n* [<b class=\"large amber-600\">2021.09.25</b>] 기능 개선\r\n  * 스크리너가 이미지, 비디오에 각각 대응할 수 있도록 개선\r\n  * Hits를 활용한 게시글 조회수 수 카운팅 기능 추가\r\n* [<b class=\"large amber-600\">2021.09.20</b>] 스크리너 이미지를 동영상 기반으로 변경 (GIF to WEBM)\r\n* [<b class=\"large amber-600\">2021.09.18</b>] 디자인 개선\r\n  * 모바일 화면에서 카테고리 타이틀의 위치 오류 수정\r\n  * SEO 스크립트가 `.html` 확장자로 끝나는 게시글에 대한 SEO 파일을 별도로 생성하도록 개선\r\n  * 일부 UI 가독성 개선\r\n* [<b class=\"large amber-600\">2021.09.15</b>] 디자인 개선\r\n  * 새 컨텐츠 표시 디자인 변경\r\n  * 카테고리 UI 개선\r\n* [<b class=\"large amber-600\">2021.09.14</b>] 디자인 개선\r\n  * 스크리너 텍스트 크기 변경\r\n  * 컨텐츠 아이템 텍스트 크기 축소\r\n  * 카테고리 이미지가 직관적으로 보이도록 적절히 수정\r\n  * 카테고리의 줄 당 아이템 수 증가 (데스크탑, 모바일)\r\n  * 블로그 명칭 𝝅번째 알파카의 개발 낙서장으로 변경\r\n  * 페이지 이동 시 스크리너 이미지 변하지 않는 현상 수정\r\n* [<b class=\"large amber-600\">2021.09.06</b>] 기능 개선\r\n  * 로딩 화면 디자인 개선, Fade In/Out으로 출력되도록 변경\r\n  * 테마에 따른 Heading 태그 컬러 변경\r\n  * ServiceWorker 적용\r\n* [<b class=\"large amber-600\">2021.09.06</b>] 다크모드 시 헤더 색상 변경\r\n* [<b class=\"large amber-600\">2021.09.03</b>] 기능 개선\r\n  * 컨텐츠 제목 UI 개선\r\n  * 카테고리 항목 중 전체를 보여주는 ALL 항목 추가\r\n* [<b class=\"large amber-600\">2021.08.30</b>] 기능 개선\r\n  * 커스텀 도메인 `blog.itcode.dev` 적용\r\n  * 프로젝트에 교체한 도메인 일괄 적용\r\n  * 빌드 버전 생성 스크립트 추가\r\n  * 링크 태크 클릭 시 새 창에서 뜨도록 개선\r\n* [<b class=\"large amber-600\">2021.08.26</b>] 기능 개선\r\n  * 카테고리 접힙 버그 수정\r\n  * 화질 문제로 인한 WEBP to GIF 롤백\r\n  * 인덱스 페이지 디자인 오류 수정\r\n* [<b class=\"large amber-600\">2021.08.24</b>] 스타일 개선\r\n  * Footer SEO 버튼 추가\r\n  * 헤더 컬러 변경\r\n* [<b class=\"large amber-600\">2021.08.20</b>] 다음 웹마스터 도구 등록\r\n* [<b class=\"large amber-600\">2021.08.19</b>] 용량 최적화\r\n  * 용량 저감을 위한 GIF to WEBP 교체\r\n  * 폰트 용량 저감을 위한 서브셋화\r\n* [<b class=\"large amber-600\">2021.08.17</b>] 일주일 이내 게시글 하이라이팅 기능 추가\r\n* [<b class=\"large amber-600\">2021.08.13</b>] PrismJS 스타일 개선\r\n  * 코드 디자인 및 색상 개선\r\n  * LaTex 인식 로직 추가\r\n* [<b class=\"large amber-600\">2021.08.11</b>] 코드블럭 디자인 개선\r\n  * 전체적인 외관 개선\r\n  * 사용 중인 언어 표시\r\n  * 코드 라인 수 표시\r\n  * 마우스 오버 시 하이라이팅 추가\r\n  * 복사 버튼 추가\r\n* [<b class=\"large amber-600\">2021.08.05</b>] UI 갱신\r\n  * 카테고리 높이 변경\r\n  * 모바일 테마 UI 스위치를 Sidebar로 편입\r\n  * 쿠키를 통한 테마 저장 기능 추가\r\n* [<b class=\"large amber-600\">2021.07.31</b>] 페이지 이동 시 출력되는 로딩 컴포넌트 추가\r\n* [<b class=\"large amber-600\">2021.07.26</b>] 모바일 메뉴 개선\r\n  * 기존의 BottomNavigator에서 Sidebar로 교체\r\n* [<b class=\"large amber-600\">2021.07.25</b>] 개편 블로그 배포\r\n  * Typescript 적용\r\n  * SCSS로 리팩토링하여 CSS-in-CSS 방식의 렌더링을 사용하여 FOUC 현상 제거\r\n  * 블로그 디자인 전면 개편\r\n  * 컴포넌트 세분화\r\n  * 파일 구조 정립\r\n* [<b class=\"large amber-600\">2021.06.07</b>] Google Analytics 등록\r\n* [<b class=\"large amber-600\">2021.05.27</b>] SEO 생성 스크립트 개발\r\n  * JavaScript 기반 생성 스크립트\r\n  * Sitemap, RSS 생성\r\n* [<b class=\"large amber-600\">2021.05.20</b>] Utterances 댓글 플러그인 적용\r\n  * 기존에 사용 중이던 Disqus는 광고 이슈로 인해 교체함\r\n* [<b class=\"large amber-600\">2021.05.18</b>] 마크다운 CSS 추가\r\n* [<b class=\"large amber-600\">2021.05.10</b>] 개발 블로그 개발 시작\r\n  * NextJS, GatsbyJS 테스트 운영 및 배포\r\n  * NextJS 채택\r\n  * JavaScript, Material-UI를 활용한 CSS-in-JS 방식의 렌더링 사용\r\n  * 블로그 컴포넌트 개발\r\n  * 웹/모바일 간의 반응형 지향\r\n* [<b class=\"large amber-600\">2020.08.13</b>] 개발 블로그 배포\r\n  * Jekyll 기반 블로그\r\n  * [Moon Theme](http://jekyllthemes.org/themes/moon/) 적용\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n# 🌐 Page\r\n\r\n* [𝝅번째 알파카의 개발 낙서장](https://blog.itcode.dev)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n# 📄 관련 문서\r\n\r\n* [블로그 개편기 1 외 다수](https://blog.itcode.dev/posts/2021/09/21/nextjs-reorganization-1)\r\n* [Blog Repository](https://github.com/RWB0104/TechBlog)","url":["2021-10-26-github-react-blog","2021","10","26","github-react-blog"]}],"hash":"27b796ab013"},"__N_SSG":true}