{"pageProps":{"posts":[{"header":{"title":"자료구조가 중요한 까닭","excerpt":"혼자 공부하는건 다 좋은데 효율이 떨어진다. 컴퓨터 앞에 앉아있는 시간은 거의 대부분이라 할 수 있지만, 순수하게 공부하는 시간이 얼마나 되냐고 물어보면 눈치보기 바쁘다. 마침 블로그도 새로 개발해서 쓰고 있고, 공부도 할 겸 적절한 스터디에 하나 참가했다. 노트북 팔아버린 뒤로 스터디에 가입하고 싶어도 할 수가 없었던 차에, 노트북 없이도 할 수 있다는 말에 바로 들어갔다.","coverImage":"https://user-images.githubusercontent.com/50317129/125144706-add9c080-e159-11eb-9522-063c655ddf36.png","date":"2021-07-10T01:30:56","type":"posts","category":"알고리즘","tag":["자료구조","알고리즘","누구나 자료 구조와 알고리즘","배열"],"group":"누구나 자료 구조와 알고리즘","comment":true,"publish":true},"name":"2021-07-10-about-algorithm-chapter01.md","content":"","url":["2021-07-10-about-algorithm-chapter01","2021","07","10","about-algorithm-chapter01"]},{"header":{"title":"[백준 / JAVA] 백준 알고리즘 1019번 책 페이지","excerpt":"지민이는 전체 페이지의 수가 N인 책이 하나 있다. 첫 페이지는 1페이지이고, 마지막 페이지는 N페이지이다. 각 숫자가 전체 페이지 번호에서 모두 몇 번 나오는지 구해보자.","coverImage":"https://user-images.githubusercontent.com/50317129/120028591-d5ece480-c02f-11eb-88f0-e14fc647dd81.png","date":"2021-06-28T12:28:50","type":"posts","category":"알고리즘","tag":["백준","알고리즘","JAVA(자바)","GOLD","GOLD I"],"group":"백준 알고리즘","comment":true,"publish":true},"name":"2021-06-28-a1019.md","content":"","url":["2021-06-28-a1019","2021","06","28","a1019"]},{"header":{"title":"[백준 / JAVA] 백준 알고리즘 1018번 체스판 다시 칠하기","excerpt":"지민이는 자신의 저택에서 MN개의 단위 정사각형으로 나누어져 있는 M*N 크기의 보드를 찾았다. 어떤 정사각형은 검은색으로 칠해져 있고, 나머지는 흰색으로 칠해져 있다. 지민이는 이 보드를 잘라서 8*8 크기의 체스판으로 만들려고 한다. 체스판은 검은색과 흰색이 번갈아서 칠해져 있어야 한다. 구체적으로, 각 칸이 검은색과 흰색 중 하나로 색칠되어 있고, 변을 공유하는 두 개의 사각형은 다른 색으로 칠해져 있어야 한다. 따라서 이 정의를 따르면 체스판을 색칠하는 경우는 두 가지뿐이다. 하나는 맨 왼쪽 위 칸이 흰색인 경우, 하나는 검은색인 경우이다. 보드가 체스판처럼 칠해져 있다는 보장이 없어서, 지민이는 8 X 8 크기의 체스판으로 잘라낸 후에 몇 개의 정사각형을 다시 칠해야겠다고 생각했다. 당연히 8*8 크기는 아무데서나 골라도 된다. 지민이가 다시 칠해야 하는 정사각형의 최소 개수를 구하는 프로그램을 작성하시오.","coverImage":"https://user-images.githubusercontent.com/50317129/120028591-d5ece480-c02f-11eb-88f0-e14fc647dd81.png","date":"2021-06-26T16:46:20","type":"posts","category":"알고리즘","tag":["백준","알고리즘","JAVA(자바)","SILVER","SILVER V","Brute Force(무차별 대입 공격)"],"group":"백준 알고리즘","comment":true,"publish":true},"name":"2021-06-26-a1018.md","content":"","url":["2021-06-26-a1018","2021","06","26","a1018"]},{"header":{"title":"[백준 / JAVA] 백준 알고리즘 1017번 소수 쌍","excerpt":"지민이는 수의 리스트가 있을 때, 이를 짝지어 각 쌍의 합이 소수가 되게 하려고 한다. 예를 들어, {1, 4, 7, 10, 11, 12}가 있다고 하자. 지민이는 다음과 같이 그룹지을 수 있다. 1 + 4 = $, 7 + 10 = 17$, $11 + 12 = 23 또는 1 + 10 = 11, 4 + 7 = 11, 11 + 12 = 23 수의 리스트가 주어졌을 때, 지민이가 모든 수를 다 짝지었을 때, 첫 번째 수와 어떤 수를 짝지었는지 오름차순으로 출력하는 프로그램을 작성하시오. 위의 예제에서 1 + 12 = 13으로 소수이다. 그러나, 남은 4개의 수를 합이 소수가 되게 짝지을 수 있는 방법이 없다. 따라서 예제의 답은 4, 10이다.","coverImage":"https://user-images.githubusercontent.com/50317129/120028591-d5ece480-c02f-11eb-88f0-e14fc647dd81.png","date":"2021-06-26T03:19:32","type":"posts","category":"알고리즘","tag":["백준","알고리즘","JAVA(자바)","PLATINUM","PLATINUM III","에라토스 테네스의 체","이분 매칭"],"group":"백준 알고리즘","comment":true,"publish":true},"name":"2021-06-26-a1017.md","content":"","url":["2021-06-26-a1017","2021","06","26","a1017"]},{"header":{"title":"[백준 / JAVA] 백준 알고리즘 1016번 제곱 ㄴㄴ수","excerpt":"어떤 수 X가 1보다 큰 제곱수로 나누어 떨어지지 않을 때, 제곱ㄴㄴ수라고 한다. 제곱수는 정수의 제곱이다. min과 max가 주어지면, min과 max를 포함한 사이에 제곱ㄴㄴ수가 몇 개 있는지 출력한다.","coverImage":"https://user-images.githubusercontent.com/50317129/120028591-d5ece480-c02f-11eb-88f0-e14fc647dd81.png","date":"2021-06-23T00:22:31","type":"posts","category":"알고리즘","tag":["백준","알고리즘","JAVA(자바)","GOLD","GOLD I","에라토스 테네스의 체"],"group":"백준 알고리즘","comment":true,"publish":true},"name":"2021-06-23-a1016.md","content":"","url":["2021-06-23-a1016","2021","06","23","a1016"]},{"header":{"title":"[백준 / JAVA] 백준 알고리즘 1015번 수열 정렬","excerpt":"P[0], P[1], ..., P[N - 1]은 0부터 N - 1까지(포함)의 수를 한 번씩 포함하고 있는 수열이다. 수열 P를 길이가 N인 배열 A에 적용하면 길이가 N인 배열 B가 된다. 적용하는 방법은 B[P[i]] = A[i]이다. 배열 A가 주어졌을 때, 수열 P를 적용한 결과가 비내림차순이 되는 수열을 찾는 프로그램을 작성하시오. 비내림차순이란, 각각의 원소가 바로 앞에 있는 원소보다 크거나 같을 경우를 말한다. 만약 그러한 수열이 여러개라면 사전순으로 앞서는 것을 출력한다.","coverImage":"https://user-images.githubusercontent.com/50317129/120028591-d5ece480-c02f-11eb-88f0-e14fc647dd81.png","date":"2021-06-22T01:23:31","type":"posts","category":"알고리즘","tag":["백준","알고리즘","JAVA(자바)","SILVER","SILVER IV","정렬"],"group":"백준 알고리즘","comment":true,"publish":true},"name":"2021-06-22-a1015.md","content":"","url":["2021-06-22-a1015","2021","06","22","a1015"]},{"header":{"title":"[백준 / JAVA] 백준 알고리즘 1014번 컨닝","excerpt":"최백준은 서강대학교에서 “컨닝의 기술”이라는 과목을 가르치고 있다. 이 과목은 상당히 까다롭기로 정평이 나있기 때문에, 몇몇 학생들은 시험을 보는 도중에 다른 사람의 답지를 베끼려 한다. 시험은 N행 X M열 크기의 직사각형 교실에서 이루어진다. 교실은 1 X 1 크기의 단위 정사각형으로 이루어져 있는데, 각 단위 정사각형은 자리 하나를 의미한다. 최백준은 컨닝을 방지하기 위해서 다음과 같은 전략을 세웠다. 모든 학생은 자신의 왼쪽, 오른쪽, 왼쪽 대각선 위, 오른쪽 대각선 위, 이렇게 총 네 자리에 앉아있는 친구의 답지를 항상 베낀다고 가정한다. 따라서, 자리 배치는 모든 학생이 컨닝을 할 수 없도록 배치되어야 한다.","coverImage":"https://user-images.githubusercontent.com/50317129/120028591-d5ece480-c02f-11eb-88f0-e14fc647dd81.png","date":"2021-06-18T16:42:44","type":"posts","category":"알고리즘","tag":["백준","알고리즘","JAVA(자바)","PLATINUM","PLATINUM IV","네트워크 플로우","최소 버텍스 커버","이분 매칭"],"group":"백준 알고리즘","comment":true,"publish":true},"name":"2021-06-18-a1014.md","content":"","url":["2021-06-18-a1014","2021","06","18","a1014"]},{"header":{"title":"IntelliJ(인텔리제이) 시작 시 오류(java.net.BindException: Address already in use: bind)","excerpt":"","coverImage":"https://user-images.githubusercontent.com/50317129/121893356-d6d48480-cd58-11eb-80bb-d4611be3bd40.png","date":"2021-06-14T21:59:16","type":"posts","category":"JAVA","tag":["IntelliJ(인텔리제이)","Hyper-V","오류 해결책"],"comment":true,"publish":true},"name":"2021-06-14-intellij-error-onstart.md","content":"","url":["2021-06-14-intellij-error-onstart","2021","06","14","intellij-error-onstart"]},{"header":{"title":"[JAVA] split vs StringTokenizer","excerpt":"알고리즘을 풀다보면, 필연적으로 입력값 처리를 하게된다. 다양한 케이스에 대응하기 위해, 사용자의 값을 직접 입력받아 이를 처리하게 된다. 이 때, 우리는 십중팔구 이와 같은 상황이 발생한다. 데이터셋을 보내기 위해 데이터의 모음을 구분자(공백 혹은 쉼표)를 통해 하나의 문자열로 합쳐 전달한다.","coverImage":"https://www.textrazor.com/img/letters3.png","date":"2021-06-14T01:56:01","type":"posts","category":"JAVA","tag":["JAVA(자바)","String(문자열)","split","StringTokenizer"],"comment":true,"publish":true},"name":"2021-06-14-split-and-stringtokenizer.md","content":"","url":["2021-06-14-split-and-stringtokenizer","2021","06","14","split-and-stringtokenizer"]},{"header":{"title":"[백준 / JAVA] 백준 알고리즘 1013번 Contact","excerpt":"푸에르토리코 아레시보에 위치한 아레시보 전파망원경(Arecibo radio telescope)은 수십 년째 존재하지 않을 지도 모르는 외계 문명으로부터의 전파를 수신하기 위해 밤하늘을 바라보고 있다. 이 망원경이 수집한 전파 속에서 자연적으로 발생하기 힘든 패턴들을 찾아내어, 그것을 증거로 외계 문명의 존재 여부를 가리려는 노력은 줄곧 이어져왔지만 아직까지도 그러한 패턴은 발견되지 않았다. 한국 천문학계의 자존심 김동혁 박사는 국내 기술로 이러한 탐사를 진행하기 위하여 다음의 전파 표기를 표준으로 삼았다.","coverImage":"https://user-images.githubusercontent.com/50317129/120028591-d5ece480-c02f-11eb-88f0-e14fc647dd81.png","date":"2021-06-13T04:53:32","type":"posts","category":"알고리즘","tag":["백준","알고리즘","JAVA(자바)","정규 표현식","GOLD","GOLD V"],"group":"백준 알고리즘","comment":true,"publish":true},"name":"2021-06-13-a1013.md","content":"","url":["2021-06-13-a1013","2021","06","13","a1013"]}],"categories":{"All":{"count":85,"flag":true},"JAVA":{"count":15,"flag":true},"NextJS":{"count":3,"flag":false},"Ubuntu":{"count":2,"flag":false},"RaspberryPi":{"count":7,"flag":false},"알고리즘":{"count":32,"flag":false},"잡담":{"count":2,"flag":false},"WEB":{"count":7,"flag":false},"CS":{"count":10,"flag":false},"React":{"count":1,"flag":false},"Jekyll":{"count":4,"flag":false},"WAS":{"count":2,"flag":false}},"images":["celeb1.webm","celeb10.webm","celeb11.webm","celeb12.webm","celeb13.webm","celeb14.webm","celeb15.webm","celeb16.webm","celeb17.webm","celeb2.webm","celeb3.webm","celeb4.webm","celeb5.webm","celeb6.webm","celeb7.webm","celeb8.webm","celeb9.webm","city1.webm","city10.webm","city11.webm","city12.webm","city13.webm","city2.webm","city3.webm","city4.webm","city5.webm","city6.webm","city7.webm","city8.webm","city9.webm","code1.webm","code2.webm","code3.webm","funk1.webm","funk2.webm","funk3.webm","funk4.webm","funk5.webm","funk6.webm","game1.webm"],"page":6,"total":9,"hash":"27b796ab013"},"__N_SSG":true}