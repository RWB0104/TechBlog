{"pageProps":{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 12. 맵의 유용한 정보 표시하기","excerpt":"지도를 다루다보면, 내가 현재 보고있는 영역의 좌표, 지도 상에서 마우스가 위치한 좌표, 줌 레벨 등 다양한 정보를 얻어야할 경우가 생긴다. 이런 니즈를 충족하기 위해, 지도 상에 상태창을 만들어 관련 정보를 출력해주면 필요할 때 유용하게 사용할 수 있을 것이다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-22T22:37:21+09:00","type":"projects","category":"GIS","tag":["GIS","OpenLayers"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-22-gis-guide-for-programmer-12.md","url":["2022-03-22-gis-guide-for-programmer-12","2022","03","22","gis-guide-for-programmer-12"],"toc":"<ul><li><a href=\"#편의성-확보하기\">편의성 확보하기</a></li><li><a href=\"#정보-추출하기\">정보 추출하기</a></li><ul><li><a href=\"#1.-EPSG 코드 추출하기\">1. EPSG 코드 추출하기</a></li><li><a href=\"#2.-줌 레벨 추출하기\">2. 줌 레벨 추출하기</a></li><li><a href=\"#3.-현재 영역 좌표 추출하기\">3. 현재 영역 좌표 추출하기</a></li><li><a href=\"#4.-마우스 위치 좌표 추출하기\">4. 마우스 위치 좌표 추출하기</a></li></ul><li><a href=\"#지도-객체 변경하기\">지도 객체 변경하기</a></li><ul><li><a href=\"#레이어-추가하기\">레이어 추가하기</a></li><li><a href=\"#레이어-삭제하기\">레이어 삭제하기</a></li><li><a href=\"#기타\">기타</a></li></ul><li><a href=\"#맵-정보 컴포넌트 만들기\">맵 정보 컴포넌트 만들기</a></li><ul><li><a href=\"#배경지도-변경 컴포넌트\">배경지도 변경 컴포넌트</a></li><li><a href=\"#확장지도-변경 컴포넌트\">확장지도 변경 컴포넌트</a></li><li><a href=\"#EPSG-코드 표시하기\">EPSG 코드 표시하기</a></li><li><a href=\"#줌-레벨 표시하기\">줌 레벨 표시하기</a></li><li><a href=\"#현재-영역 표시하기\">현재 영역 표시하기</a></li><li><a href=\"#마우스-커서 위치 표시하기\">마우스 커서 위치 표시하기</a></li></ul><li><a href=\"#예제-확인하기\">예제 확인하기</a></li></ul>","content":"<h1 id=\"편의성-확보하기\">편의성 확보하기 <a href=\"#편의성-확보하기\">🔗</a></h1><p>지도를 다루다보면, 내가 현재 보고있는 영역의 좌표, 지도 상에서 마우스가 위치한 좌표, 줌 레벨 등 다양한 정보를 얻어야할 경우가 생긴다.</p>\n<p>이런 니즈를 충족하기 위해, 지도 상에 상태창을 만들어 관련 정보를 출력해주면 필요할 때 유용하게 사용할 수 있을 것이다.</p>\n<br />\n\n<p>이 장에선 <code class=\"inline-code\">Map</code>에서 유용할만한 정보를 추출하는 방법에 대해 다룬다.</p>\n<p>추출할 정보는 아래와 같다.</p>\n<ul>\n<li>좌표계 EPSG 코드</li>\n<li>줌 레벨</li>\n<li>현재 영역의 좌표</li>\n<li>마우스의 좌표</li>\n</ul>\n<p>또한, 아래의 기능을 구현하는 방법 또한 다룬다.</p>\n<ul>\n<li>지도 레이어 변경</li>\n</ul>\n<p>이 과정을 통해 지도의 정보를 직관적으로 보여주고, 사용자가 원하는 타입의 지도(ex. 위성지도)로 즉시 변경할 수 있을 것이다.</p>\n<br />\n<br />\n<br />\n\n\n\n\n\n\n\n\n\n\n<h1 id=\"정보-추출하기\">정보 추출하기 <a href=\"#정보-추출하기\">🔗</a></h1><p><code class=\"inline-code\">Map</code> 객체에서 유용할만한 정보를 추출해보자.</p>\n<p>\n\t\t<a href=\"https://user-images.githubusercontent.com/50317129/156811772-4fd36475-dcc9-41a5-a3ab-c7bcef24e8da.png\" target=\"_blank\" data-title=\"null\">\n\t\t\t<img src=\"https://user-images.githubusercontent.com/50317129/156811772-4fd36475-dcc9-41a5-a3ab-c7bcef24e8da.png\" alt=\"image\" />\n\t\t</a>\n\t</p>\n<ul>\n<li><code class=\"inline-code\">Feature</code>: 점, 선, 면과 같은 요소 (벡터 레이어 한정)</li>\n<li><code class=\"inline-code\">Source</code>: 레이이의 데이터 원천. Feature의 모음과 같다. (SHP, GeoJSON 등)</li>\n<li><code class=\"inline-code\">Layer</code>: 데이터 원천을 토대로 정의한 데이터셋 (벡터, 이미지)</li>\n<li><code class=\"inline-code\">View</code>: 사용자가 현재 맵을 바라보는 방식의 정보</li>\n<li><code class=\"inline-code\">Interaction</code>: 맵의 상호작용 요소 (Zoom in, out 버튼 등)</li>\n<li><code class=\"inline-code\">Overlay</code>: 맵에 표시할 요소</li>\n</ul>\n<p>OpenLayers의 구조와 연관지어 생각해보자.</p>\n<p><code class=\"inline-code\">Map</code> 객체는 코드에서 <code class=\"inline-code\">map</code>으로 표기한다.</p>\n<br />\n<br />\n\n\n\n\n\n<h2 id=\"1.-EPSG 코드 추출하기\">1. EPSG 코드 추출하기 <a href=\"#1.-EPSG 코드 추출하기\">🔗</a></h2><p>EPSG 코드는 현재 우리가 지도를 바라볼 때 사용하는 좌표계 코드다. 우리가 선언한 좌표계에 맞게 모든 배경지도와 객체들이 지도에 렌더링되어 표현된다.</p>\n<p>즉, 우리가 바라보는 방식에 따라 결정되므로, <code class=\"inline-code\">View</code> 객체가 EPSG 코드와 관련된 정보를 갖고 있을 것이다.</p>\n\n\t\t\t\t<div class=\"block-code\">\n\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t<p>TYPESCRIPT</p>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t<pre class=\"language-typescript\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token keyword\">const</span> epsg<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">getView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProjection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr></tbody></table></pre>\n\t\t\t\t</div>\n\t\t\t<ul>\n<li><code class=\"inline-code\">getView()</code>: 맵의 <code class=\"inline-code\">View</code> 객체를 반환하는 메서드</li>\n<li><code class=\"inline-code\">getProjection()</code>: <code class=\"inline-code\">View</code>에 선언된 <code class=\"inline-code\">Projection</code> 객체를 반환하는 메서드</li>\n<li><code class=\"inline-code\">getCode()</code>: <code class=\"inline-code\">Projection</code>에 사용된 EPSG 코드를 <code class=\"inline-code\">string</code> 형태로 반환하는 메서드</li>\n</ul>\n<p>우리가 원하는 EPSG 코드는 최종적으로 <code class=\"inline-code\">getCode()</code>에서 얻을 수 있다.</p>\n<br />\n<br />\n\n\n\n\n\n<h2 id=\"2.-줌 레벨 추출하기\">2. 줌 레벨 추출하기 <a href=\"#2.-줌 레벨 추출하기\">🔗</a></h2><p>줌 레벨은 현재 우리가 지도를 바라보는 높이다. 줌 레벨이 크면 클수록 지도가 확대되고, 작으면 작을수록 지도가 축소된다.</p>\n<p>즉, 줌 레벨 역시 우리가 바라보는 방식에 따라 결정되므로, <code class=\"inline-code\">View</code> 객체가 관련된 정보를 갖고 있을 것이다.</p>\n\n\t\t\t\t<div class=\"block-code\">\n\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t<p>TYPESCRIPT</p>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t<pre class=\"language-typescript\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token keyword\">const</span> zoom<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">=</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">getView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getZoom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr></tbody></table></pre>\n\t\t\t\t</div>\n\t\t\t<ul>\n<li><code class=\"inline-code\">getView()</code>: 맵의 <code class=\"inline-code\">View</code> 객체를 반환하는 메서드</li>\n<li><code class=\"inline-code\">getZoom()</code>: 맵의 줌 레벨을 <code class=\"inline-code\">number</code> 형태로 반환하는 메서드 (undefined 가능성 있음)</li>\n</ul>\n<p>우리가 원하는 줌 레벨은 <code class=\"inline-code\">getZoom()</code>에서 얻을 수 있다. <code class=\"inline-code\">getZoom()</code>은 줌 레벨을 숫자로 반환하되, <code class=\"inline-code\">undefined</code>를 반환할 가능성이 있으므로 값의 예외처리가 필요하다는 점을 참고하자.</p>\n<br />\n\n<p>줌 레벨의 경우, 지도를 스크롤 할 때마다 값이 변경된다. 따라서, 이벤트를 통해 줌 레벨 변경 시마다 적절히 반영해주는 것이 중요하다.</p>\n<p>지도의 이동이 끝날 때 발생하는 이벤트인 <code class=\"inline-code\">moveend</code>가 가장 적절하다. 지도의 이동이 완전히 끝난 후에 줌 레벨을 측정하는 것이 정확하기 때문. 반대로 지도가 시작할 때 발생하는 이벤트인 <code class=\"inline-code\">movestart</code>를 사용할 경우, 줌의 이동이 끝나기 전에 측정되므로, 정확한 값이 표시되지 않는다.</p>\n\n\t\t\t\t<div class=\"block-code\">\n\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t<p>TYPESCRIPT</p>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t<pre class=\"language-typescript\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0>map<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'moveend'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1><span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2>    <span class=\"token keyword\">const</span> zoom<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">=</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">getView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getZoom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr></tbody></table></pre>\n\t\t\t\t</div>\n\t\t\t<p>해당 이벤트에서 줌 레벨의 변경을 감지하고, 해당 값을 적절히 렌더링해서 사용한다.</p>\n<br />\n<br />\n\n\n\n\n\n<h2 id=\"3.-현재 영역 좌표 추출하기\">3. 현재 영역 좌표 추출하기 <a href=\"#3.-현재 영역 좌표 추출하기\">🔗</a></h2><p>현재 영역 좌표는 현재 우리가 지도를 바라보는 영역의 좌표다. 지도가 움직이고 확대/축소될 때마다 영역의 좌표가 변경된다.</p>\n<p>마찬가지로 영역 좌표 역시 우리가 바라보는 방식에 따라 결정되므로, <code class=\"inline-code\">View</code> 객체가 관련된 정보를 갖고 있을 것이다.</p>\n\n\t\t\t\t<div class=\"block-code\">\n\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t<p>TYPESCRIPT</p>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t<pre class=\"language-typescript\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span> minX<span class=\"token punctuation\">,</span> minY<span class=\"token punctuation\">,</span> maxX<span class=\"token punctuation\">,</span> maxY <span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">getView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">calculateExtent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr></tbody></table></pre>\n\t\t\t\t</div>\n\t\t\t<ul>\n<li><code class=\"inline-code\">getView()</code>: 맵의 <code class=\"inline-code\">View</code> 객체를 반환하는 메서드</li>\n<li><code class=\"inline-code\">calculateExtent()</code>: 맵의 현재 범위 좌표를 반환하는 메서드</li>\n</ul>\n<p><code class=\"inline-code\">calculateExtent()</code>를 통해 현재 좌표의 영역을 얻을 수 있다. 파라미터로 원하는 픽셀 영역을 입력할 수도 있으며, 이 경우 해당 픽셀에 해당하는 좌표를 반환한다.</p>\n<br />\n\n<p>현재 영역의 경우, 지도의 이동에 따라 값이 수시로 변하게 된다. 따라서, 지도 이동 시 이벤트를 캐치하여 지도의 영역을 계산하도록 설계해야한다.</p>\n<p><code class=\"inline-code\">Map</code> 객체에 <code class=\"inline-code\">on()</code> 메서드를 통해 원하는 이벤트를 삽입할 수 있다. 이 글에서는 <code class=\"inline-code\">pointermove</code> 이벤트에 해당 로직을 삽입한다. 지도를 이동하기 위해선 반드시 마우스의 움직임이 요구되기 때문.</p>\n\n\t\t\t\t<div class=\"block-code\">\n\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t<p>TYPESCRIPT</p>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t<pre class=\"language-typescript\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0>map<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pointermove'</span><span class=\"token punctuation\">,</span> e <span class=\"token operator\">=></span></td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1><span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2>    <span class=\"token comment\" data-tag=\"new\">// event에서 Map 객체를 호출할 수 있다.</span></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3>    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span> minX<span class=\"token punctuation\">,</span> minY<span class=\"token punctuation\">,</span> maxX<span class=\"token punctuation\">,</span> maxY <span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>map<span class=\"token punctuation\">.</span><span class=\"token function\">getView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">calculateExtent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr></tbody></table></pre>\n\t\t\t\t</div>\n\t\t\t<p>값이 변경되는 주기가 워낙 빠르므로, 상태값으로 관리하는 건 그리 좋지 못하다. 짧은 시간에 반복적인 상태값 변경이 일어나므로, 렌더링 문제가 일어나기 때문.</p>\n<br />\n<br />\n\n\n\n\n\n<h2 id=\"4.-마우스 위치 좌표 추출하기\">4. 마우스 위치 좌표 추출하기 <a href=\"#4.-마우스 위치 좌표 추출하기\">🔗</a></h2><p>마우스 위치 좌표는 현재 지도 상에 마우스가 위치한 좌표다. 지도 상에서 마우스가 움직일 때마다 좌표가 변경된다.</p>\n<p>엄밀히 따지면, 마우스의 위치는 <code class=\"inline-code\">Map</code>에 종속된 객체는 아니다. 마우스 관련 이벤트가 발생할 때, 이벤트에서 마우스의 위치를 반환해주므로, 필연적으로 마우스 이벤트 안에서 얻을 수 있다.</p>\n\n\t\t\t\t<div class=\"block-code\">\n\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t<p>TYPESCRIPT</p>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t<pre class=\"language-typescript\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0>map<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pointermove'</span><span class=\"token punctuation\">,</span> e <span class=\"token operator\">=></span></td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1><span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2>    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span> x<span class=\"token punctuation\">,</span> y <span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>coordinate<span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr></tbody></table></pre>\n\t\t\t\t</div>\n\t\t\t<p>현재 영역과 마찬가지로, 값의 변환이 짧은 시간에 반복적으로 이루어지므로, 상태값으로 관리할 경우 문제가 발생할 수 있다.</p>\n<br />\n<br />\n<br />\n\n\n\n\n\n\n\n\n\n\n<h1 id=\"지도-객체 변경하기\">지도 객체 변경하기 <a href=\"#지도-객체 변경하기\">🔗</a></h1><p>이미 선언된 <code class=\"inline-code\">Map</code> 객체와 하위 요소들도 적절한 메서드를 사용하여 변경할 수 있다. 이를 통해 <code class=\"inline-code\">Source</code> 객체나, <code class=\"inline-code\">Layer</code> 객체 등을 변경할 수도 있다. 즉, 사용자의 상호작용에 따라 지도의 성질을 이에 맞게 변환할 수 있는 것이다.</p>\n<p>이 장에서는 레이어를 변경하는 방법에 대해서만 다룬다.</p>\n<br />\n<br />\n\n\n\n\n\n<h2 id=\"레이어-추가하기\">레이어 추가하기 <a href=\"#레이어-추가하기\">🔗</a></h2><p>레이어를 동적으로 추가하는 기능을 통해, 사용자의 상호작용에 따른 지도 레이어의 변화를 구현할 수 있다.</p>\n<p>이를 통해 초기 화면은 기본 지도만 보여주지만, 이후 사용자의 선택을 통해 추가적인 지도를 표현해주는 식의 구현이 가능하다.</p>\n\n\t\t\t\t<div class=\"block-code\">\n\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t<p>TYPESCRIPT</p>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t<pre class=\"language-typescript\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token comment\" data-tag=\"new\">// 위성지도</span></td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1><span class=\"token keyword\">const</span> vworldSatelliteLayer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TileLayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2>    source<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token constant\">XYZ</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> url<span class=\"token operator\">:</span> <span class=\"token string\">'https://api.vworld.kr/req/wmts/1.0.0/2AAC4DD9-4F6F-3844-A740-E2DB6BDC8CEF/Satellite/{z}/{y}/{x}.jpeg'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3>    properties<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'base-vworld-satellite'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4>    minZoom<span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=5><td class=\"line-number\" data-number=\"5\">5</td><td class=\"line-code\" data-number=5>    maxZoom<span class=\"token operator\">:</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=6><td class=\"line-number\" data-number=\"6\">6</td><td class=\"line-code\" data-number=6>    zIndex<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=7><td class=\"line-number\" data-number=\"7\">7</td><td class=\"line-code\" data-number=7>    preload<span class=\"token operator\">:</span> <span class=\"token number\">Infinity</span></td></tr>\n<tr data-number=8><td class=\"line-number\" data-number=\"8\">8</td><td class=\"line-code\" data-number=8><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=9><td class=\"line-number\" data-number=\"9\">9</td><td class=\"line-code\" data-number=9></td></tr>\n<tr data-number=10><td class=\"line-number\" data-number=\"10\">10</td><td class=\"line-code\" data-number=10>map<span class=\"token punctuation\">.</span><span class=\"token function\">addLayer</span><span class=\"token punctuation\">(</span>vworldSatelliteLayer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr></tbody></table></pre>\n\t\t\t\t</div>\n\t\t\t<ul>\n<li><code class=\"inline-code\">addLayer()</code>: 맵의 <code class=\"inline-code\">Layer</code> 객체를 추가하는 메서드</li>\n</ul>\n<p><code class=\"inline-code\">BaseLayer</code>를 상속받아 구현된 <code class=\"inline-code\">Layer</code> 객체를 파라미터로 받아 <code class=\"inline-code\">Map</code> 객체에 레이어를 추가한다.</p>\n<br />\n<br />\n\n\n\n\n\n<h2 id=\"레이어-삭제하기\">레이어 삭제하기 <a href=\"#레이어-삭제하기\">🔗</a></h2><p>레이어를 동적으로 삭제하는 기능을 통해, 사용자의 상호작용에 따른 지도 레이어의 변화를 구현할 수 있다.</p>\n\n\t\t\t\t<div class=\"block-code\">\n\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t<p>TYPESCRIPT</p>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t<pre class=\"language-typescript\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token comment\" data-tag=\"new\">// 위성지도</span></td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1>map<span class=\"token punctuation\">.</span><span class=\"token function\">getAllLayers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>layer <span class=\"token operator\">=></span></td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2><span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>layer<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'target'</span><span class=\"token punctuation\">)</span></td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4>    <span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=5><td class=\"line-number\" data-number=\"5\">5</td><td class=\"line-code\" data-number=5>        map<span class=\"token punctuation\">.</span><span class=\"token function\">removeLayer</span><span class=\"token punctuation\">(</span>layer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=6><td class=\"line-number\" data-number=\"6\">6</td><td class=\"line-code\" data-number=6>    <span class=\"token punctuation\">}</span></td></tr>\n<tr data-number=7><td class=\"line-number\" data-number=\"7\">7</td><td class=\"line-code\" data-number=7><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr></tbody></table></pre>\n\t\t\t\t</div>\n\t\t\t<ul>\n<li><code class=\"inline-code\">getAllLayers()</code>: 맵에 선언된 <code class=\"inline-code\">Layer</code> 객체의 배열을 반환하는 메서드</li>\n<li><code class=\"inline-code\">addLayer()</code>: 맵의 <code class=\"inline-code\">Layer</code> 객체를 삭제하는 메서드</li>\n</ul>\n<p><code class=\"inline-code\">BaseLayer</code>를 상속받아 구현된 <code class=\"inline-code\">Layer</code> 객체를 파라미터로 받아 해당 레이어를 <code class=\"inline-code\">Map</code>에서 삭제한다.</p>\n<p><code class=\"inline-code\">getAllLayers()</code>를 통해 <code class=\"inline-code\">Map</code>의 레이어 배열을 받을 수 있으며, 이를 통해 원하는 레이어를 추출하여 제거할 수 있다.</p>\n<p>지금껏 <code class=\"inline-code\">Layer</code>를 선언할 때, 항상 <code class=\"inline-code\">properties</code> 객체를 지정했는데, 그 이유가 여기에 있다. 레이어명 규칙을 따서 <code class=\"inline-code\">properties</code>에 할당하면, 내가 원하는 레이어를 쉽게 찾을 수 있기 때문이다. 이런 고유값이 없다면 원하는 레이어를 찾기 난감하다.</p>\n<br />\n<br />\n\n\n\n\n\n<h2 id=\"기타\">기타 <a href=\"#기타\">🔗</a></h2><p>그 밖에도 <code class=\"inline-code\">Map</code> 객체는 하위 객체의 동적 CUD를 위한 다양한 메서드를 제공한다. 비단, <code class=\"inline-code\">Layer</code> 뿐만 아니라, <code class=\"inline-code\">Control</code>, <code class=\"inline-code\">Overlay</code>, <code class=\"inline-code\">Interaction</code> 등의 하위 객체를 동적으로 관리할 수 있다. 원리는 <code class=\"inline-code\">Layer</code>와 동일하다.</p>\n<p>추가하려는 객체를 생성한 뒤, <code class=\"inline-code\">Map</code>의 메서드 중 적절한 것을 사용하여 추가하고, 삭제하고싶은 요소를 찾아 메서드로 제거하는 방식이다.</p>\n<br />\n<br />\n<br />\n\n\n\n\n\n\n\n\n\n\n<h1 id=\"맵-정보 컴포넌트 만들기\">맵 정보 컴포넌트 만들기 <a href=\"#맵-정보 컴포넌트 만들기\">🔗</a></h1><p><code class=\"inline-code\">Map</code> 객체를 활용하여 필요한 정보를 제공하는 맵 정보 컴포넌트를 만들면, 여러 지도에서 재사용하기 편할 것이다.</p>\n<p>위에서 언급한 방법을 통해 컴포넌트를 구현해보자.</p>\n<br />\n<br />\n\n\n\n\n\n<h2 id=\"배경지도-변경 컴포넌트\">배경지도 변경 컴포넌트 <a href=\"#배경지도-변경 컴포넌트\">🔗</a></h2><p>배경지도를 변경하는 컴포넌트를 만들어보자. 배경지도는 OSM과 VWorld 지도 중 하이브리드 지도를 제외한 4개로, 총 5개의 지도 중 하나를 선택할 수 있다.</p>\n<p>이 경우 <code class=\"inline-code\">select</code>가 적절할 것이다.</p>\n<p>사용할 레이어의 객체들은 아래와 같다.</p>\n\n\t\t\t\t<div class=\"block-code\">\n\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t<p>TYPESCRIPT</p>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t<pre class=\"language-typescript\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token keyword\">import</span> TileLayer <span class=\"token keyword\">from</span> <span class=\"token string\">'ol/layer/Tile'</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">OSM</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">XYZ</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ol/source'</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> osmLayer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TileLayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4>    source<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token constant\">OSM</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> attributions<span class=\"token operator\">:</span> <span class=\"token string\">'&lt;p>Developed by &lt;a href=\"https://itcode.dev\" target=\"_blank\">RWB&lt;/a>&lt;/p>'</span><span class=\"token punctuation\">,</span> cacheSize<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=5><td class=\"line-number\" data-number=\"5\">5</td><td class=\"line-code\" data-number=5>    properties<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'base-osm'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=6><td class=\"line-number\" data-number=\"6\">6</td><td class=\"line-code\" data-number=6>    zIndex<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=7><td class=\"line-number\" data-number=\"7\">7</td><td class=\"line-code\" data-number=7>    preload<span class=\"token operator\">:</span> <span class=\"token number\">Infinity</span></td></tr>\n<tr data-number=8><td class=\"line-number\" data-number=\"8\">8</td><td class=\"line-code\" data-number=8><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=9><td class=\"line-number\" data-number=\"9\">9</td><td class=\"line-code\" data-number=9></td></tr>\n<tr data-number=10><td class=\"line-number\" data-number=\"10\">10</td><td class=\"line-code\" data-number=10><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> vworldBaseLayer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TileLayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=11><td class=\"line-number\" data-number=\"11\">11</td><td class=\"line-code\" data-number=11>    source<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token constant\">XYZ</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> url<span class=\"token operator\">:</span> <span class=\"token string\">'https://api.vworld.kr/req/wmts/1.0.0/2AAC4DD9-4F6F-3844-A740-E2DB6BDC8CEF/Base/{z}/{y}/{x}.png'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=12><td class=\"line-number\" data-number=\"12\">12</td><td class=\"line-code\" data-number=12>    properties<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'base-vworld-base'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=13><td class=\"line-number\" data-number=\"13\">13</td><td class=\"line-code\" data-number=13>    minZoom<span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=14><td class=\"line-number\" data-number=\"14\">14</td><td class=\"line-code\" data-number=14>    maxZoom<span class=\"token operator\">:</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=15><td class=\"line-number\" data-number=\"15\">15</td><td class=\"line-code\" data-number=15>    zIndex<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=16><td class=\"line-number\" data-number=\"16\">16</td><td class=\"line-code\" data-number=16>    preload<span class=\"token operator\">:</span> <span class=\"token number\">Infinity</span></td></tr>\n<tr data-number=17><td class=\"line-number\" data-number=\"17\">17</td><td class=\"line-code\" data-number=17><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=18><td class=\"line-number\" data-number=\"18\">18</td><td class=\"line-code\" data-number=18></td></tr>\n<tr data-number=19><td class=\"line-number\" data-number=\"19\">19</td><td class=\"line-code\" data-number=19><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> vworldGrayLayer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TileLayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=20><td class=\"line-number\" data-number=\"20\">20</td><td class=\"line-code\" data-number=20>    source<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token constant\">XYZ</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> url<span class=\"token operator\">:</span> <span class=\"token string\">'https://api.vworld.kr/req/wmts/1.0.0/2AAC4DD9-4F6F-3844-A740-E2DB6BDC8CEF/gray/{z}/{y}/{x}.png'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=21><td class=\"line-number\" data-number=\"21\">21</td><td class=\"line-code\" data-number=21>    properties<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'base-vworld-gray'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=22><td class=\"line-number\" data-number=\"22\">22</td><td class=\"line-code\" data-number=22>    minZoom<span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=23><td class=\"line-number\" data-number=\"23\">23</td><td class=\"line-code\" data-number=23>    maxZoom<span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=24><td class=\"line-number\" data-number=\"24\">24</td><td class=\"line-code\" data-number=24>    zIndex<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=25><td class=\"line-number\" data-number=\"25\">25</td><td class=\"line-code\" data-number=25>    preload<span class=\"token operator\">:</span> <span class=\"token number\">Infinity</span></td></tr>\n<tr data-number=26><td class=\"line-number\" data-number=\"26\">26</td><td class=\"line-code\" data-number=26><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=27><td class=\"line-number\" data-number=\"27\">27</td><td class=\"line-code\" data-number=27></td></tr>\n<tr data-number=28><td class=\"line-number\" data-number=\"28\">28</td><td class=\"line-code\" data-number=28><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> vworldMidnightLayer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TileLayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=29><td class=\"line-number\" data-number=\"29\">29</td><td class=\"line-code\" data-number=29>    source<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token constant\">XYZ</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> url<span class=\"token operator\">:</span> <span class=\"token string\">'https://api.vworld.kr/req/wmts/1.0.0/2AAC4DD9-4F6F-3844-A740-E2DB6BDC8CEF/midnight/{z}/{y}/{x}.png'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=30><td class=\"line-number\" data-number=\"30\">30</td><td class=\"line-code\" data-number=30>    properties<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'base-vworld-midnight'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=31><td class=\"line-number\" data-number=\"31\">31</td><td class=\"line-code\" data-number=31>    minZoom<span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=32><td class=\"line-number\" data-number=\"32\">32</td><td class=\"line-code\" data-number=32>    maxZoom<span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=33><td class=\"line-number\" data-number=\"33\">33</td><td class=\"line-code\" data-number=33>    zIndex<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=34><td class=\"line-number\" data-number=\"34\">34</td><td class=\"line-code\" data-number=34>    preload<span class=\"token operator\">:</span> <span class=\"token number\">Infinity</span></td></tr>\n<tr data-number=35><td class=\"line-number\" data-number=\"35\">35</td><td class=\"line-code\" data-number=35><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=36><td class=\"line-number\" data-number=\"36\">36</td><td class=\"line-code\" data-number=36></td></tr>\n<tr data-number=37><td class=\"line-number\" data-number=\"37\">37</td><td class=\"line-code\" data-number=37><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> vworldSatelliteLayer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TileLayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=38><td class=\"line-number\" data-number=\"38\">38</td><td class=\"line-code\" data-number=38>    source<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token constant\">XYZ</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> url<span class=\"token operator\">:</span> <span class=\"token string\">'https://api.vworld.kr/req/wmts/1.0.0/2AAC4DD9-4F6F-3844-A740-E2DB6BDC8CEF/Satellite/{z}/{y}/{x}.jpeg'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=39><td class=\"line-number\" data-number=\"39\">39</td><td class=\"line-code\" data-number=39>    properties<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'base-vworld-satellite'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=40><td class=\"line-number\" data-number=\"40\">40</td><td class=\"line-code\" data-number=40>    minZoom<span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=41><td class=\"line-number\" data-number=\"41\">41</td><td class=\"line-code\" data-number=41>    maxZoom<span class=\"token operator\">:</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=42><td class=\"line-number\" data-number=\"42\">42</td><td class=\"line-code\" data-number=42>    zIndex<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=43><td class=\"line-number\" data-number=\"43\">43</td><td class=\"line-code\" data-number=43>    preload<span class=\"token operator\">:</span> <span class=\"token number\">Infinity</span></td></tr>\n<tr data-number=44><td class=\"line-number\" data-number=\"44\">44</td><td class=\"line-code\" data-number=44><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr></tbody></table></pre>\n\t\t\t\t</div>\n\t\t\t<p><code class=\"inline-code\">properties</code> 객체의 <code class=\"inline-code\">name</code>을 통해 지도 종류별 고유값을 지정하여 관리한다. 추후 레이어를 추출할 때, 해당 값이 키가 될 것이다.</p>\n<p>배경지도는 기본적으로 <code class=\"inline-code\">name</code>의 접두사로 <code class=\"inline-code\">base</code>가 붙도록 통일했다.</p>\n\n\t\t\t\t<div class=\"block-code\">\n\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t<p>TSX</p>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t<pre class=\"language-tsx\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>layerState<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setLayerState</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1>    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>base-osm<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">OSM</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2>    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>base-vworld-base<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">VWorld 기본</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3>    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>base-vworld-gray<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">VWorld 흑백</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4>    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>base-vworld-midnight<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">VWorld 야간</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></td></tr>\n<tr data-number=5><td class=\"line-number\" data-number=\"5\">5</td><td class=\"line-code\" data-number=5>    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>base-vworld-satellite<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">VWorld 위성</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></td></tr>\n<tr data-number=6><td class=\"line-number\" data-number=\"6\">6</td><td class=\"line-code\" data-number=6></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></td></tr></tbody></table></pre>\n\t\t\t\t</div>\n\t\t\t<p><code class=\"inline-code\">layerState</code>, <code class=\"inline-code\">setLayerState()</code>는 레이어의 고유값에 대한 상태 관리 객체다.</p>\n<p>해당 컴포넌트의 값이 변경될 때마다 <code class=\"inline-code\">option</code>의 <code class=\"inline-code\">value</code>를 상태값으로 지정하고, <code class=\"inline-code\">select</code>에 값을 자동으로 반영하도록 구성된다.</p>\n\n\t\t\t\t<div class=\"block-code\">\n\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t<p>TYPESCRIPT</p>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t<pre class=\"language-typescript\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1><span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2>    <span class=\"token comment\" data-tag=\"new\">// 배경지도 전체 삭제</span></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3>    map<span class=\"token punctuation\">.</span><span class=\"token function\">getAllLayers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>layer <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>layer<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'base'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>layer <span class=\"token operator\">=></span> map<span class=\"token punctuation\">.</span><span class=\"token function\">removeLayer</span><span class=\"token punctuation\">(</span>layer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4></td></tr>\n<tr data-number=5><td class=\"line-number\" data-number=\"5\">5</td><td class=\"line-code\" data-number=5>    <span class=\"token comment\" data-tag=\"new\">// 선택한 값에 따라 레이어 추가</span></td></tr>\n<tr data-number=6><td class=\"line-number\" data-number=\"6\">6</td><td class=\"line-code\" data-number=6>    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>layerState<span class=\"token punctuation\">)</span></td></tr>\n<tr data-number=7><td class=\"line-number\" data-number=\"7\">7</td><td class=\"line-code\" data-number=7>    <span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=8><td class=\"line-number\" data-number=\"8\">8</td><td class=\"line-code\" data-number=8>        <span class=\"token keyword\">case</span> <span class=\"token string\">'base-vworld-base'</span><span class=\"token operator\">:</span></td></tr>\n<tr data-number=9><td class=\"line-number\" data-number=\"9\">9</td><td class=\"line-code\" data-number=9>            map<span class=\"token punctuation\">.</span><span class=\"token function\">addLayer</span><span class=\"token punctuation\">(</span>vworldBaseLayer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=10><td class=\"line-number\" data-number=\"10\">10</td><td class=\"line-code\" data-number=10>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=11><td class=\"line-number\" data-number=\"11\">11</td><td class=\"line-code\" data-number=11></td></tr>\n<tr data-number=12><td class=\"line-number\" data-number=\"12\">12</td><td class=\"line-code\" data-number=12>        <span class=\"token keyword\">case</span> <span class=\"token string\">'base-vworld-gray'</span><span class=\"token operator\">:</span></td></tr>\n<tr data-number=13><td class=\"line-number\" data-number=\"13\">13</td><td class=\"line-code\" data-number=13>            map<span class=\"token punctuation\">.</span><span class=\"token function\">addLayer</span><span class=\"token punctuation\">(</span>vworldGrayLayer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=14><td class=\"line-number\" data-number=\"14\">14</td><td class=\"line-code\" data-number=14>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=15><td class=\"line-number\" data-number=\"15\">15</td><td class=\"line-code\" data-number=15></td></tr>\n<tr data-number=16><td class=\"line-number\" data-number=\"16\">16</td><td class=\"line-code\" data-number=16>        <span class=\"token keyword\">case</span> <span class=\"token string\">'base-vworld-midnight'</span><span class=\"token operator\">:</span></td></tr>\n<tr data-number=17><td class=\"line-number\" data-number=\"17\">17</td><td class=\"line-code\" data-number=17>            map<span class=\"token punctuation\">.</span><span class=\"token function\">addLayer</span><span class=\"token punctuation\">(</span>vworldMidnightLayer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=18><td class=\"line-number\" data-number=\"18\">18</td><td class=\"line-code\" data-number=18>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=19><td class=\"line-number\" data-number=\"19\">19</td><td class=\"line-code\" data-number=19></td></tr>\n<tr data-number=20><td class=\"line-number\" data-number=\"20\">20</td><td class=\"line-code\" data-number=20>        <span class=\"token keyword\">case</span> <span class=\"token string\">'base-vworld-satellite'</span><span class=\"token operator\">:</span></td></tr>\n<tr data-number=21><td class=\"line-number\" data-number=\"21\">21</td><td class=\"line-code\" data-number=21>            map<span class=\"token punctuation\">.</span><span class=\"token function\">addLayer</span><span class=\"token punctuation\">(</span>vworldSatelliteLayer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=22><td class=\"line-number\" data-number=\"22\">22</td><td class=\"line-code\" data-number=22>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=23><td class=\"line-number\" data-number=\"23\">23</td><td class=\"line-code\" data-number=23></td></tr>\n<tr data-number=24><td class=\"line-number\" data-number=\"24\">24</td><td class=\"line-code\" data-number=24>        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></td></tr>\n<tr data-number=25><td class=\"line-number\" data-number=\"25\">25</td><td class=\"line-code\" data-number=25>            map<span class=\"token punctuation\">.</span><span class=\"token function\">addLayer</span><span class=\"token punctuation\">(</span>osmLayer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=26><td class=\"line-number\" data-number=\"26\">26</td><td class=\"line-code\" data-number=26>            <span class=\"token function\">setExtState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=27><td class=\"line-number\" data-number=\"27\">27</td><td class=\"line-code\" data-number=27>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=28><td class=\"line-number\" data-number=\"28\">28</td><td class=\"line-code\" data-number=28>    <span class=\"token punctuation\">}</span></td></tr>\n<tr data-number=29><td class=\"line-number\" data-number=\"29\">29</td><td class=\"line-code\" data-number=29><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span> layerState <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr></tbody></table></pre>\n\t\t\t\t</div>\n\t\t\t<p><code class=\"inline-code\">useEffect()</code>를 통해 <code class=\"inline-code\">layerState</code>가 변경될 때마다 로직을 수행하도록 구성한다.</p>\n<p>배경지도 레이어를 전부 삭제하고 변경된 값에 따라 미리 지정된 레이어를 추가하며, 엉뚱한 값이 들어올 경우 OSM으로 기본 지정된다.</p>\n<p>OSM으로 선택될 시, VWorld의 확장 지도는 사용이 불가능하도록 할 것이다.</p>\n<br />\n<br />\n\n\n\n\n\n<h2 id=\"확장지도-변경 컴포넌트\">확장지도 변경 컴포넌트 <a href=\"#확장지도-변경 컴포넌트\">🔗</a></h2><p>확장지도의 출력 여부를 변경하는 컴포넌트를 만들어보자. VWorld의 하이브리드 지도가 이에 해당하며, On/Off 형식으로 토글하는 것이 적절하다.</p>\n<p>이러한 구조 상, <code class=\"inline-code\">input[type=checkbox]</code>가 적절할 것이다.</p>\n<p>사용할 레이어의 객체들은 아래와 같다.</p>\n\n\t\t\t\t<div class=\"block-code\">\n\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t<p>TYPESCRIPT</p>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t<pre class=\"language-typescript\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token keyword\">import</span> TileLayer <span class=\"token keyword\">from</span> <span class=\"token string\">'ol/layer/Tile'</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">XYZ</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ol/source'</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> vworldHybridLayer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TileLayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4>    source<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token constant\">XYZ</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> url<span class=\"token operator\">:</span> <span class=\"token string\">'https://api.vworld.kr/req/wmts/1.0.0/2AAC4DD9-4F6F-3844-A740-E2DB6BDC8CEF/Hybrid/{z}/{y}/{x}.png'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=5><td class=\"line-number\" data-number=\"5\">5</td><td class=\"line-code\" data-number=5>    properties<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'ext-vworld-hybrid'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=6><td class=\"line-number\" data-number=\"6\">6</td><td class=\"line-code\" data-number=6>    minZoom<span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=7><td class=\"line-number\" data-number=\"7\">7</td><td class=\"line-code\" data-number=7>    maxZoom<span class=\"token operator\">:</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=8><td class=\"line-number\" data-number=\"8\">8</td><td class=\"line-code\" data-number=8>    zIndex<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=9><td class=\"line-number\" data-number=\"9\">9</td><td class=\"line-code\" data-number=9>    preload<span class=\"token operator\">:</span> <span class=\"token number\">Infinity</span></td></tr>\n<tr data-number=10><td class=\"line-number\" data-number=\"10\">10</td><td class=\"line-code\" data-number=10><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr></tbody></table></pre>\n\t\t\t\t</div>\n\t\t\t<p><code class=\"inline-code\">properties</code> 객체의 <code class=\"inline-code\">name</code>을 통해 지도 종류별 고유값을 지정하여 관리한다. 추후 레이어를 추출할 때, 해당 값이 키가 될 것이다.</p>\n<p>배경지도는 기본적으로 <code class=\"inline-code\">name</code>의 접두사로 <code class=\"inline-code\">ext</code>가 붙도록 통일했다. 배경지도를 변경할 때, <code class=\"inline-code\">name</code>이 <code class=\"inline-code\">base</code>로 시작하는 모든 레이어를 삭제하는데, 이 때 확장지도는 이를 피할 수 있을 것이다.</p>\n\n\t\t\t\t<div class=\"block-code\">\n\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t<p>TSX</p>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t<pre class=\"language-tsx\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>checkbox<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>ext<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">checked</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>extState<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">disabled</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>layerState <span class=\"token operator\">===</span> <span class=\"token string\">'base-osm'</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setExtState</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>checked<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></td></tr></tbody></table></pre>\n\t\t\t\t</div>\n\t\t\t<p><code class=\"inline-code\">extState</code>, <code class=\"inline-code\">setExtState()</code>는 확장지도 표출 여부에 대한 상태 관리 객체다.</p>\n<p>체크/해제할 때마다 상태값을 변경하고, <code class=\"inline-code\">input[type=checkbox]</code>에 값을 반영하도록 구성한다.</p>\n<p>추가로 배경지도가 OSM일 경우, 확장지도의 사용을 막기 위해 <code class=\"inline-code\">layerState === &#39;base-osm&#39;</code>일 경우 비활성화 시킨다.</p>\n\n\t\t\t\t<div class=\"block-code\">\n\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t<p>TYPESCRIPT</p>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t<pre class=\"language-typescript\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1><span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2>    <span class=\"token comment\" data-tag=\"new\">// 확장 레이어를 추가할 경우</span></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>extState<span class=\"token punctuation\">)</span></td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4>    <span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=5><td class=\"line-number\" data-number=\"5\">5</td><td class=\"line-code\" data-number=5>        map<span class=\"token punctuation\">.</span><span class=\"token function\">addLayer</span><span class=\"token punctuation\">(</span>vworldHybridLayer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=6><td class=\"line-number\" data-number=\"6\">6</td><td class=\"line-code\" data-number=6>    <span class=\"token punctuation\">}</span></td></tr>\n<tr data-number=7><td class=\"line-number\" data-number=\"7\">7</td><td class=\"line-code\" data-number=7></td></tr>\n<tr data-number=8><td class=\"line-number\" data-number=\"8\">8</td><td class=\"line-code\" data-number=8>    <span class=\"token comment\" data-tag=\"new\">// 확장 레이어를 삭제할 경우</span></td></tr>\n<tr data-number=9><td class=\"line-number\" data-number=\"9\">9</td><td class=\"line-code\" data-number=9>    <span class=\"token keyword\">else</span></td></tr>\n<tr data-number=10><td class=\"line-number\" data-number=\"10\">10</td><td class=\"line-code\" data-number=10>    <span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=11><td class=\"line-number\" data-number=\"11\">11</td><td class=\"line-code\" data-number=11>        map<span class=\"token punctuation\">.</span><span class=\"token function\">getAllLayers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>layer <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>layer<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ext'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>layer <span class=\"token operator\">=></span> map<span class=\"token punctuation\">.</span><span class=\"token function\">removeLayer</span><span class=\"token punctuation\">(</span>layer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=12><td class=\"line-number\" data-number=\"12\">12</td><td class=\"line-code\" data-number=12>    <span class=\"token punctuation\">}</span></td></tr>\n<tr data-number=13><td class=\"line-number\" data-number=\"13\">13</td><td class=\"line-code\" data-number=13><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span> extState <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr></tbody></table></pre>\n\t\t\t\t</div>\n\t\t\t<p><code class=\"inline-code\">useEffect()</code>를 통해 <code class=\"inline-code\">extState</code>가 변경될 때마다 로직을 수행하도록 구성한다.</p>\n<p>확장지도를 사용할 경우 확장지도 레이어를 <code class=\"inline-code\">Map</code>에 추가하며, 사용하지 않을 경우 확장지도 레이어를 제거한다.</p>\n<br />\n<br />\n\n\n\n\n\n<h2 id=\"EPSG-코드 표시하기\">EPSG 코드 표시하기 <a href=\"#EPSG-코드 표시하기\">🔗</a></h2><p>지도의 EPSG 코드를 표시한다. 단순 <code class=\"inline-code\">input[type=text]</code>로 표시만 해준다.</p>\n<p>또한, 이 프로젝트의 모든 지도는 좌표계의 동적 변경 기능이 존재하지 않는다. 따라서, 지도가 렌더링 된 후 한 번만 확인하여 표시해주면 된다.</p>\n\n\t\t\t\t<div class=\"block-code\">\n\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t<p>TSX</p>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t<pre class=\"language-tsx\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>proj<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>epsg<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">readOnly</span> <span class=\"token punctuation\">/></span></span></td></tr></tbody></table></pre>\n\t\t\t\t</div>\n\t\t\t<p><code class=\"inline-code\">epsg</code>, <code class=\"inline-code\">setEpsg()</code>는 EPSG 코드에 대한 상태 관리 객체다.</p>\n<p><code class=\"inline-code\">Map</code>이 로딩됐을 때, 한 번만 수행해주면 된다. 따라서, 이벤트를 등록하되 한 번만 수행되면 된다.</p>\n\n\t\t\t\t<div class=\"block-code\">\n\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t<p>TYPESCRIPT</p>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t<pre class=\"language-typescript\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0>map<span class=\"token punctuation\">.</span><span class=\"token function\">once</span><span class=\"token punctuation\">(</span><span class=\"token string\">'postrender'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1><span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2>    <span class=\"token function\">setEpsg</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">.</span><span class=\"token function\">getView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProjection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr></tbody></table></pre>\n\t\t\t\t</div>\n\t\t\t<ul>\n<li><code class=\"inline-code\">once()</code>: 딱 한 번만 수행되는 이벤트를 등록하는 메서드<ul>\n<li><code class=\"inline-code\">postrender</code>: 지도 렌더링 후 수행</li>\n</ul>\n</li>\n<li><code class=\"inline-code\">getView()</code>: <code class=\"inline-code\">Map</code>의 <code class=\"inline-code\">View</code> 객체를 반환하는 메서드</li>\n<li><code class=\"inline-code\">getProjection()</code>: <code class=\"inline-code\">View</code>의 좌표계 객체를 반환하는 메서드</li>\n<li><code class=\"inline-code\">getCode()</code>: 좌표계 코드를 반환하는 메서드</li>\n</ul>\n<p><code class=\"inline-code\">Map</code>이 미처 렌더링되기 이전에 위 메서드를 호출하면 오류가 발생한다. 이 때문에 <code class=\"inline-code\">Map</code> 렌더링 이후 동작을 수행해야한다.</p>\n<p><code class=\"inline-code\">once()</code>로 한 번만 수행하는 이벤트를 등록했기 때문에, 첫 지도 렌더링이 끝난 후에만 동작한다. 이와 반대로 <code class=\"inline-code\">on()</code> 메서드를 사용하면 우리가 흔히 사용하는 일반적인 이벤트를 등록한다.</p>\n<p>만약 <code class=\"inline-code\">postrender</code>을 <code class=\"inline-code\">on()</code>으로 등록했다면, 지도 이동이나 확대/축소 등 지도가 렌더링되는 시점마다 동작을 수행할 것이다. EPSG 코드가 변하지 않는다는 점을 감안하면 연산 낭비.</p>\n<br />\n<br />\n\n\n\n\n\n<h2 id=\"줌-레벨 표시하기\">줌 레벨 표시하기 <a href=\"#줌-레벨 표시하기\">🔗</a></h2><p>줌 레벨을 표시한다. 단순 <code class=\"inline-code\">input[type=text]</code>로 표시만 해준다.</p>\n<p>줌 레벨의 경우, 지도의 확대/축소 시에 변경이 일어나므로, 이 동작과 가장 적합한 이벤트를 등록하는 것이 좋다. EPSG 코드와 달리 지속적으로 유지되는 이벤트여야한다.</p>\n\n\t\t\t\t<div class=\"block-code\">\n\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t<p>TSX</p>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t<pre class=\"language-tsx\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>zoom<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">readOnly</span> <span class=\"token punctuation\">/></span></span></td></tr></tbody></table></pre>\n\t\t\t\t</div>\n\t\t\t<p>줌 레벨부터는 상태관리로 값을 관리하지 않는다. 너무 많은 양의 상태 변환이 일어나면 렌더링에 문제가 발생할 수 있기 때문. 물론 줌 레벨의 경우 그 변화의 정도가 많지 않아서, 상태 관리를 사용해도 큰 문제는 발생하지 않는다.</p>\n\n\t\t\t\t<div class=\"block-code\">\n\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t<p>TYPESCRIPT</p>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t<pre class=\"language-typescript\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token comment\" data-tag=\"new\">/**</span></td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1><span class=\"token comment\" data-tag=\"new\"> * 줌 레벨 지정 메서드</span></td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2><span class=\"token comment\" data-tag=\"new\"> *</span></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3><span class=\"token comment\" data-tag=\"new\"> * @param {number} level: 줌 레벨</span></td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4><span class=\"token comment\" data-tag=\"new\"> */</span></td></tr>\n<tr data-number=5><td class=\"line-number\" data-number=\"5\">5</td><td class=\"line-code\" data-number=5><span class=\"token keyword\">function</span> <span class=\"token function\">setZoom</span><span class=\"token punctuation\">(</span>level<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span></td></tr>\n<tr data-number=6><td class=\"line-number\" data-number=\"6\">6</td><td class=\"line-code\" data-number=6><span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=7><td class=\"line-number\" data-number=\"7\">7</td><td class=\"line-code\" data-number=7>    <span class=\"token keyword\">const</span> tag <span class=\"token operator\">=</span> meta<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input[name=zoom]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=8><td class=\"line-number\" data-number=\"8\">8</td><td class=\"line-code\" data-number=8></td></tr>\n<tr data-number=9><td class=\"line-number\" data-number=\"9\">9</td><td class=\"line-code\" data-number=9>    <span class=\"token comment\" data-tag=\"new\">// 태그가 유효할 경우</span></td></tr>\n<tr data-number=10><td class=\"line-number\" data-number=\"10\">10</td><td class=\"line-code\" data-number=10>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tag<span class=\"token punctuation\">)</span></td></tr>\n<tr data-number=11><td class=\"line-number\" data-number=\"11\">11</td><td class=\"line-code\" data-number=11>    <span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=12><td class=\"line-number\" data-number=\"12\">12</td><td class=\"line-code\" data-number=12>        tag<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> level<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=13><td class=\"line-number\" data-number=\"13\">13</td><td class=\"line-code\" data-number=13>    <span class=\"token punctuation\">}</span></td></tr>\n<tr data-number=14><td class=\"line-number\" data-number=\"14\">14</td><td class=\"line-code\" data-number=14><span class=\"token punctuation\">}</span></td></tr></tbody></table></pre>\n\t\t\t\t</div>\n\t\t\t<p>줌 레벨을 표시하는 메서드를 만든다. <code class=\"inline-code\">level</code>을 파라미터로 받아, <code class=\"inline-code\">input</code>에 할당한다.</p>\n\n\t\t\t\t<div class=\"block-code\">\n\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t<p>TYPESCRIPT</p>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t<pre class=\"language-typescript\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0>map<span class=\"token punctuation\">.</span><span class=\"token function\">once</span><span class=\"token punctuation\">(</span><span class=\"token string\">'postrender'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1><span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2>    <span class=\"token keyword\">const</span> zoom <span class=\"token operator\">=</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">getView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getZoom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3></td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4>    <span class=\"token function\">setZoom</span><span class=\"token punctuation\">(</span>zoom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=5><td class=\"line-number\" data-number=\"5\">5</td><td class=\"line-code\" data-number=5><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=6><td class=\"line-number\" data-number=\"6\">6</td><td class=\"line-code\" data-number=6></td></tr>\n<tr data-number=7><td class=\"line-number\" data-number=\"7\">7</td><td class=\"line-code\" data-number=7>map<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'moveend'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></td></tr>\n<tr data-number=8><td class=\"line-number\" data-number=\"8\">8</td><td class=\"line-code\" data-number=8><span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=9><td class=\"line-number\" data-number=\"9\">9</td><td class=\"line-code\" data-number=9>    <span class=\"token keyword\">const</span> zoom <span class=\"token operator\">=</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">getView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getZoom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=10><td class=\"line-number\" data-number=\"10\">10</td><td class=\"line-code\" data-number=10></td></tr>\n<tr data-number=11><td class=\"line-number\" data-number=\"11\">11</td><td class=\"line-code\" data-number=11>    <span class=\"token function\">setZoom</span><span class=\"token punctuation\">(</span>zoom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=12><td class=\"line-number\" data-number=\"12\">12</td><td class=\"line-code\" data-number=12><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr></tbody></table></pre>\n\t\t\t\t</div>\n\t\t\t<ul>\n<li><code class=\"inline-code\">on()</code>: 지속적으로 수행되는 이벤트를 등록하는 메서드</li>\n<li><code class=\"inline-code\">once()</code>: 딱 한 번만 수행되는 이벤트를 등록하는 메서드<ul>\n<li><code class=\"inline-code\">postrender</code>: 지도 렌더링 후 수행</li>\n<li><code class=\"inline-code\">moveend</code>: 지도 이동 후 수행</li>\n</ul>\n</li>\n<li><code class=\"inline-code\">getView()</code>: <code class=\"inline-code\">Map</code>의 <code class=\"inline-code\">View</code> 객체를 반환하는 메서드</li>\n<li><code class=\"inline-code\">getZoom()</code>: 현재 <code class=\"inline-code\">View</code>의 줌 레벨을 반환하는 메서드. <code class=\"inline-code\">undefined</code>이 반환될 수 있으므로 적절한 예외처리가 필요하다.</li>\n</ul>\n<p>이벤트는 두 개를 등록한다. 하나는 한 번만 수행되는 <code class=\"inline-code\">postrender</code> 이벤트. 다른 하나는 지속적으로 수행되는 <code class=\"inline-code\">moveend</code> 이벤트다.</p>\n<p>줌 레벨의 경우, 지도가 완전히 이동된 후 추출해야 정확하게 나온다. <code class=\"inline-code\">movestart</code>와 같이 지도가 막 움직이기 시작할 때 줌 레벨을 추출하면, 현재 레벨에서 다음 레벨로 이동하는 도중의 사이값이 나올 수 있다. 예를 들자면, 지도가 움직이기 시작할 때 이벤트를 등록하면, <code class=\"inline-code\">14</code>에서 <code class=\"inline-code\">15</code>로 확대될 때, 그 중간값인 <code class=\"inline-code\">14.2235</code>와 같이 나오는 식이다.</p>\n<p><code class=\"inline-code\">postrender</code> 이벤트를 또 등록하는 이유는 초기값 설정의 필요성 때문. <code class=\"inline-code\">moveend</code> 이벤트만 등록했다면, 지도를 이동하기 전까진 줌 레벨을 표시할 수가 없다.</p>\n<br />\n<br />\n\n\n\n\n\n<h2 id=\"현재-영역 표시하기\">현재 영역 표시하기 <a href=\"#현재-영역 표시하기\">🔗</a></h2><p>현재 영역을 표시한다. 단순 <code class=\"inline-code\">input[type=text]</code>로 표시만 해준다.</p>\n<p>현재 영역의 경우, 지도의 이동 시에 변경이 일어나므로, 이 동작과 가장 적합한 이벤트를 등록하는 것이 좋다.</p>\n\n\t\t\t\t<div class=\"block-code\">\n\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t<p>TSX</p>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t<pre class=\"language-tsx\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>minX<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">readOnly</span> <span class=\"token punctuation\">/></span></span></td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>minY<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">readOnly</span> <span class=\"token punctuation\">/></span></span></td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>maxX<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">readOnly</span> <span class=\"token punctuation\">/></span></span></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>maxY<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">readOnly</span> <span class=\"token punctuation\">/></span></span></td></tr></tbody></table></pre>\n\t\t\t\t</div>\n\t\t\t<p>현재 영역의 경우, 지도를 이동할 때마다 값의 변경이 일어나므로 상태 관리를 사용하기 부적절하다.</p>\n<p>지도가 조금이라도 이동할 때마다 상태값이 미친듯이 바뀌기 때문이다. 만약 상태 관리를 사용한다면 지도를 이동할 때마다 버벅이는 현상을 볼 수 있다.</p>\n\n\t\t\t\t<div class=\"block-code\">\n\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t<p>TYPESCRIPT</p>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t<pre class=\"language-typescript\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token comment\" data-tag=\"new\">/**</span></td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1><span class=\"token comment\" data-tag=\"new\"> * 영역 지정 메서드</span></td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2><span class=\"token comment\" data-tag=\"new\"> *</span></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3><span class=\"token comment\" data-tag=\"new\"> * @param {number[]} pos: 영역</span></td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4><span class=\"token comment\" data-tag=\"new\"> */</span></td></tr>\n<tr data-number=5><td class=\"line-number\" data-number=\"5\">5</td><td class=\"line-code\" data-number=5><span class=\"token keyword\">function</span> <span class=\"token function\">setBoundary</span><span class=\"token punctuation\">(</span>pos<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></td></tr>\n<tr data-number=6><td class=\"line-number\" data-number=\"6\">6</td><td class=\"line-code\" data-number=6><span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=7><td class=\"line-number\" data-number=\"7\">7</td><td class=\"line-code\" data-number=7>    <span class=\"token keyword\">const</span> tag1 <span class=\"token operator\">=</span> boundary<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input[name=minX]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=8><td class=\"line-number\" data-number=\"8\">8</td><td class=\"line-code\" data-number=8>    <span class=\"token keyword\">const</span> tag2 <span class=\"token operator\">=</span> boundary<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input[name=minY]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=9><td class=\"line-number\" data-number=\"9\">9</td><td class=\"line-code\" data-number=9>    <span class=\"token keyword\">const</span> tag3 <span class=\"token operator\">=</span> boundary<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input[name=maxX]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=10><td class=\"line-number\" data-number=\"10\">10</td><td class=\"line-code\" data-number=10>    <span class=\"token keyword\">const</span> tag4 <span class=\"token operator\">=</span> boundary<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input[name=maxY]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=11><td class=\"line-number\" data-number=\"11\">11</td><td class=\"line-code\" data-number=11></td></tr>\n<tr data-number=12><td class=\"line-number\" data-number=\"12\">12</td><td class=\"line-code\" data-number=12>    <span class=\"token comment\" data-tag=\"new\">// 태그가 유효할 경우</span></td></tr>\n<tr data-number=13><td class=\"line-number\" data-number=\"13\">13</td><td class=\"line-code\" data-number=13>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tag1 <span class=\"token operator\">&amp;&amp;</span> tag2 <span class=\"token operator\">&amp;&amp;</span> tag3 <span class=\"token operator\">&amp;&amp;</span> tag4<span class=\"token punctuation\">)</span></td></tr>\n<tr data-number=14><td class=\"line-number\" data-number=\"14\">14</td><td class=\"line-code\" data-number=14>    <span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=15><td class=\"line-number\" data-number=\"15\">15</td><td class=\"line-code\" data-number=15>        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span> minX<span class=\"token punctuation\">,</span> minY<span class=\"token punctuation\">,</span> maxX<span class=\"token punctuation\">,</span> maxY <span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pos<span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=16><td class=\"line-number\" data-number=\"16\">16</td><td class=\"line-code\" data-number=16></td></tr>\n<tr data-number=17><td class=\"line-number\" data-number=\"17\">17</td><td class=\"line-code\" data-number=17>        tag1<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> minX<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=18><td class=\"line-number\" data-number=\"18\">18</td><td class=\"line-code\" data-number=18>        tag2<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> minY<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=19><td class=\"line-number\" data-number=\"19\">19</td><td class=\"line-code\" data-number=19>        tag3<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> maxX<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=20><td class=\"line-number\" data-number=\"20\">20</td><td class=\"line-code\" data-number=20>        tag4<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> maxY<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=21><td class=\"line-number\" data-number=\"21\">21</td><td class=\"line-code\" data-number=21>    <span class=\"token punctuation\">}</span></td></tr>\n<tr data-number=22><td class=\"line-number\" data-number=\"22\">22</td><td class=\"line-code\" data-number=22><span class=\"token punctuation\">}</span></td></tr></tbody></table></pre>\n\t\t\t\t</div>\n\t\t\t<p>현재 영역을 표시하는 메서드를 만든다. <code class=\"inline-code\">pos</code>를 파라미터로 받아, 각 <code class=\"inline-code\">input</code>에 할당한다.</p>\n\n\t\t\t\t<div class=\"block-code\">\n\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t<p>TYPESCRIPT</p>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t<pre class=\"language-typescript\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0>map<span class=\"token punctuation\">.</span><span class=\"token function\">once</span><span class=\"token punctuation\">(</span><span class=\"token string\">'postrender'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1><span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2>    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span> minX<span class=\"token punctuation\">,</span> minY<span class=\"token punctuation\">,</span> maxX<span class=\"token punctuation\">,</span> maxY <span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">getView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">calculateExtent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3></td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4>    <span class=\"token function\">setBoundary</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span> minX<span class=\"token punctuation\">,</span> minY<span class=\"token punctuation\">,</span> maxX<span class=\"token punctuation\">,</span> maxY <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=5><td class=\"line-number\" data-number=\"5\">5</td><td class=\"line-code\" data-number=5><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=6><td class=\"line-number\" data-number=\"6\">6</td><td class=\"line-code\" data-number=6></td></tr>\n<tr data-number=7><td class=\"line-number\" data-number=\"7\">7</td><td class=\"line-code\" data-number=7>map<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'postrender'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setBoundary</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">.</span><span class=\"token function\">getView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">calculateExtent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr></tbody></table></pre>\n\t\t\t\t</div>\n\t\t\t<ul>\n<li><code class=\"inline-code\">on()</code>: 지속적으로 수행되는 이벤트를 등록하는 메서드</li>\n<li><code class=\"inline-code\">once()</code>: 딱 한 번만 수행되는 이벤트를 등록하는 메서드<ul>\n<li><code class=\"inline-code\">postrender</code>: 지도 렌더링 후 수행</li>\n</ul>\n</li>\n<li><code class=\"inline-code\">getView()</code>: 맵의 <code class=\"inline-code\">View</code> 객체를 반환하는 메서드</li>\n<li><code class=\"inline-code\">calculateExtent()</code>: 맵의 현재 범위 좌표를 반환하는 메서드</li>\n</ul>\n<p>이벤트는 두 개를 등록한다. 이벤트 종류는 <code class=\"inline-code\">postrender</code>로 둘 다 동일하다. 초기 영역을 표시하기 위해 <code class=\"inline-code\">once()</code>로 한 번, 그 이후는 <code class=\"inline-code\">on()</code>으로 이벤트를 등록하여 지도의 이동이 있을 때마다 영역을 계산해서 표시한다.</p>\n<p>줌 레벨과 같은 이유로 지도의 렌더링이 완료된 후 영역을 계산하는 것이 가장 정확하다.</p>\n<br />\n<br />\n\n\n\n\n\n<h2 id=\"마우스-커서 위치 표시하기\">마우스 커서 위치 표시하기 <a href=\"#마우스-커서 위치 표시하기\">🔗</a></h2><p>마우스 커서 위치를 표시한다. 단순 <code class=\"inline-code\">input[type=text]</code>로 표시만 해준다.</p>\n<p>마우스 커서 위치의 경우, 마우스의 이동 시에 변경이 일어나므로, 이 동작과 가장 적합한 이벤트를 등록하는 것이 좋다.</p>\n\n\t\t\t\t<div class=\"block-code\">\n\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t<p>TSX</p>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t<pre class=\"language-tsx\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>x<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">readOnly</span> <span class=\"token punctuation\">/></span></span></td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>y<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">readOnly</span> <span class=\"token punctuation\">/></span></span></td></tr></tbody></table></pre>\n\t\t\t\t</div>\n\t\t\t<p>마우스 커서 위치 또한 상태 관리를 사용하기엔 부적절하다.</p>\n\n\t\t\t\t<div class=\"block-code\">\n\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t<p>TYPESCRIPT</p>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t<pre class=\"language-typescript\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token comment\" data-tag=\"new\">/**</span></td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1><span class=\"token comment\" data-tag=\"new\"> * 마우스 위치 지정 메서드</span></td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2><span class=\"token comment\" data-tag=\"new\"> *</span></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3><span class=\"token comment\" data-tag=\"new\"> * @param {number[]} pos: 마우스 위치</span></td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4><span class=\"token comment\" data-tag=\"new\"> */</span></td></tr>\n<tr data-number=5><td class=\"line-number\" data-number=\"5\">5</td><td class=\"line-code\" data-number=5><span class=\"token keyword\">function</span> <span class=\"token function\">setBoundary</span><span class=\"token punctuation\">(</span>pos<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></td></tr>\n<tr data-number=6><td class=\"line-number\" data-number=\"6\">6</td><td class=\"line-code\" data-number=6><span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=7><td class=\"line-number\" data-number=\"7\">7</td><td class=\"line-code\" data-number=7>    <span class=\"token keyword\">const</span> tag1 <span class=\"token operator\">=</span> boundary<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input[name=x]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=8><td class=\"line-number\" data-number=\"8\">8</td><td class=\"line-code\" data-number=8>    <span class=\"token keyword\">const</span> tag2 <span class=\"token operator\">=</span> boundary<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input[name=y]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=9><td class=\"line-number\" data-number=\"9\">9</td><td class=\"line-code\" data-number=9></td></tr>\n<tr data-number=10><td class=\"line-number\" data-number=\"10\">10</td><td class=\"line-code\" data-number=10>    <span class=\"token comment\" data-tag=\"new\">// 태그가 유효할 경우</span></td></tr>\n<tr data-number=11><td class=\"line-number\" data-number=\"11\">11</td><td class=\"line-code\" data-number=11>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tag1 <span class=\"token operator\">&amp;&amp;</span> tag2<span class=\"token punctuation\">)</span></td></tr>\n<tr data-number=12><td class=\"line-number\" data-number=\"12\">12</td><td class=\"line-code\" data-number=12>    <span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=13><td class=\"line-number\" data-number=\"13\">13</td><td class=\"line-code\" data-number=13>        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span> x<span class=\"token punctuation\">,</span> y <span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pos<span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=14><td class=\"line-number\" data-number=\"14\">14</td><td class=\"line-code\" data-number=14></td></tr>\n<tr data-number=15><td class=\"line-number\" data-number=\"15\">15</td><td class=\"line-code\" data-number=15>        tag1<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=16><td class=\"line-number\" data-number=\"16\">16</td><td class=\"line-code\" data-number=16>        tag2<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> y<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=17><td class=\"line-number\" data-number=\"17\">17</td><td class=\"line-code\" data-number=17>    <span class=\"token punctuation\">}</span></td></tr>\n<tr data-number=18><td class=\"line-number\" data-number=\"18\">18</td><td class=\"line-code\" data-number=18><span class=\"token punctuation\">}</span></td></tr></tbody></table></pre>\n\t\t\t\t</div>\n\t\t\t<p>마우스 커서 위치를 표시하는 메서드를 만든다. <code class=\"inline-code\">pos</code>를 파라미터로 받아, 각 <code class=\"inline-code\">input</code>에 할당한다.</p>\n\n\t\t\t\t<div class=\"block-code\">\n\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t<p>TYPESCRIPT</p>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t<pre class=\"language-typescript\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0>map<span class=\"token punctuation\">.</span><span class=\"token function\">once</span><span class=\"token punctuation\">(</span><span class=\"token string\">'postrender'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span></td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1><span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2>    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span> minX<span class=\"token punctuation\">,</span> minY<span class=\"token punctuation\">,</span> maxX<span class=\"token punctuation\">,</span> maxY <span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">getView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">calculateExtent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3>    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span> x<span class=\"token punctuation\">,</span> y <span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>minX <span class=\"token operator\">+</span> maxX<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>minY <span class=\"token operator\">+</span> maxY<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4></td></tr>\n<tr data-number=5><td class=\"line-number\" data-number=\"5\">5</td><td class=\"line-code\" data-number=5>    <span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span> x<span class=\"token punctuation\">,</span> y <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=6><td class=\"line-number\" data-number=\"6\">6</td><td class=\"line-code\" data-number=6><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr>\n<tr data-number=7><td class=\"line-number\" data-number=\"7\">7</td><td class=\"line-code\" data-number=7></td></tr>\n<tr data-number=8><td class=\"line-number\" data-number=\"8\">8</td><td class=\"line-code\" data-number=8>map<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pointermove'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>coordinate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></td></tr></tbody></table></pre>\n\t\t\t\t</div>\n\t\t\t<ul>\n<li><code class=\"inline-code\">on()</code>: 지속적으로 수행되는 이벤트를 등록하는 메서드</li>\n<li><code class=\"inline-code\">once()</code>: 딱 한 번만 수행되는 이벤트를 등록하는 메서드<ul>\n<li><code class=\"inline-code\">postrender</code>: 지도 렌더링 후 수행</li>\n<li><code class=\"inline-code\">pointermove</code>: 마우스 이동 시 수행</li>\n</ul>\n</li>\n<li><code class=\"inline-code\">getView()</code>: 맵의 <code class=\"inline-code\">View</code> 객체를 반환하는 메서드</li>\n<li><code class=\"inline-code\">calculateExtent()</code>: 맵의 현재 범위 좌표를 반환하는 메서드</li>\n<li><code class=\"inline-code\">e.coordinate</code>: 마우스 이벤트 객체의 좌표 객체</li>\n</ul>\n<p>지도 상에 종속된 위치가 아니라, 마우스의 위치이므로 다른 요소와 달리 마우스 관련 이벤트를 등록해야한다.</p>\n<p><code class=\"inline-code\">pointermove</code> 이벤트로 마우스 이동 시, 이벤트 객체의 마우스 위치를 통해 이를 표시할 수 있다.</p>\n<p><code class=\"inline-code\">postrender</code> 이벤트에선 초기값 표시를 위해, 지도의 중앙을 표시해준다. 지도의 중앙은 현재 영역을 적절히 계산해서 구하거나, <code class=\"inline-code\">map.getView().getCenter()</code>를 사용하면 된다.</p>\n<br />\n\n<p>위에서 언급한 요소를 모아 하나의 컴포넌트를 만들어 여러 지도에서 재사용할 수 있다. 이 프로젝트에선 <code class=\"inline-code\">MapBoard</code>라는 컴포넌트를 구현하여 지도의 정보를 표시한다.</p>\n<br />\n<br />\n<br />\n\n\n\n\n\n\n\n\n\n\n<h1 id=\"예제-확인하기\">예제 확인하기 <a href=\"#예제-확인하기\">🔗</a></h1><p>\n\t\t<a href=\"https://user-images.githubusercontent.com/50317129/164761404-8611d7a9-17ab-4201-8258-b4467e27ec8b.png\" target=\"_blank\" data-title=\"null\">\n\t\t\t<img src=\"https://user-images.githubusercontent.com/50317129/164761404-8611d7a9-17ab-4201-8258-b4467e27ec8b.png\" alt=\"image\" />\n\t\t</a>\n\t</p>\n<p><a href=\"https://project.itcode.dev/gis-dev/map-info\" target=\"_blank\">OpenLayers6 Sandbox - MapInfo</a>에서 이를 구현한 예제를 확인할 수 있다.</p>\n<p>우측 하단의 패널에서 지도와 관련된 정보 및 레이어 관리가 가능하다.</p>\n","meta":{"group":[{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 25. WebGL로 초대용량 데이터 표시하기","excerpt":"WFS 마커는 표현 대상이 많아지면 많아질수록 비용으로 직결된다고 언급한 적이 있었다. 하지만 만약, 정말 만약에, 수 많은 객체를 온전히 마커로 전부 보여줘야 한다면? 어떠한 이유로든 이러한 문제에 당면했을 경우, WebGL이 그 해결책이 될 수 있다. 이 장에서는 WebGL 렌더러를 활용하여 30만개의 마커를 표현해본다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-06-02T00:57:11+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer","OpenLayers","WFS","WebGL"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-06-02-gis-guide-for-programmer-25.md","url":["2022-06-02-gis-guide-for-programmer-25","2022","06","02","gis-guide-for-programmer-25"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 24. Heat Map 표현하기","excerpt":"데이터는 보는 관점에 따라, 전혀 새로운 결과를 도출하기도 한다. 지금까지 다뤘던 지도들은 하나같이 데이터를 지도 상에 있는 그대로 보여주는 것에 중점을 뒀었다. 이번 장에서는 Heat Map을 통해, 데이터를 바라보는 관점을 조금 바꿔본다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-06-02T00:27:57+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer","OpenLayers","WFS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-06-02-gis-guide-for-programmer-24.md","url":["2022-06-02-gis-guide-for-programmer-24","2022","06","02","gis-guide-for-programmer-24"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 23. Cluster Map 표현하기","excerpt":"지도에서 마커의 경우, 사용자와의 상호작용이 일어나는 주요소이기 때문에 통상 WFS 객체로 관리한다. 객체를 기반으로 렌더링하다보니, 데이터가 많아지면 많아질수록 곧 서비스의 비용으로 직결된다. 보다시피, 너무 많은 양의 마커는 데이터로써의 의미를 잃게 된다. 너무나도 많은 요소로 인해 시인성은 극도로 떨어지며, 유의미한 상호작용 또한 불가능하다. 최대한 많은 데이터를 보여주고자 흔히 하는 실수이기도 하다. 시인성 이전에, 저렇게 많은 마커를 표현하는 지도는 매우 느리다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-06-01T02:59:12+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer","OpenLayers","WFS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-06-01-gis-guide-for-programmer-23.md","url":["2022-06-01-gis-guide-for-programmer-23","2022","06","01","gis-guide-for-programmer-23"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 22. WFS Transaction으로 데이터 삭제하기","excerpt":"세 가지 WFS Transaction API 중, 마지막 단계로 데이터 삭제에 대해 다뤄보자.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-05-31T01:46:17+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer","OpenLayers","WFS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-05-31-gis-guide-for-programmer-22.md","url":["2022-05-31-gis-guide-for-programmer-22","2022","05","31","gis-guide-for-programmer-22"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 21. WFS Transaction으로 데이터 수정하기","excerpt":"세 가지 WFS Transaction API 중, 데이터를 수정하는 Update에 대해 다뤄보자.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-05-31T01:10:12+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer","OpenLayers","WFS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-05-31-gis-guide-for-programmer-21.md","url":["2022-05-31-gis-guide-for-programmer-21","2022","05","31","gis-guide-for-programmer-21"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 20. WFS Transaction으로 데이터 추가하기","excerpt":"지금까지는 GeoServer를 통해 데이터를 호출하고, 이를 표현하는 것이 전부였다. 객체로 표현을 하던, 이미지로 그리던, 데이터를 직접 표현해주던, 결국 어떠한 형태로든 데이터를 보여주는 수준에 그쳤다. 이 문서를 포함하여, 앞으로 서술할 3개 문서는 공간정보 데이터의 삽입/수정/삭제에 대해 다룬다. WFS Transaction 프로토콜을 활용하면 정해진 패턴으로 데이터의 CUD를 수행할 수 있다. 이 중 이 문서에서는 WFS Transaction Insert. 즉, 공간정보 데이터의 추가에 대해 다룬다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-05-30T00:55:46+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer","OpenLayers","WFS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-05-30-gis-guide-for-programmer-20.md","url":["2022-05-30-gis-guide-for-programmer-20","2022","05","30","gis-guide-for-programmer-20"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 19. WMS에 팝업 붙이기","excerpt":"지도에 표시된 마커 혹은 객체를 클릭하면, 팝업을 통해 해당 객체의 자세한 정보를 보여준다. 이 장에서는 WFS 지도에 팝업을 출력하여 마커의 세부 정보를 표현해본다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-05-28T20:55:23+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer","OpenLayers","WMS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-05-28-gis-guide-for-programmer-19.md","url":["2022-05-28-gis-guide-for-programmer-19","2022","05","28","gis-guide-for-programmer-19"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 18. WFS에 팝업 붙이기","excerpt":"지도에 표시된 마커 혹은 객체를 클릭하면, 팝업을 통해 해당 객체의 자세한 정보를 보여준다. 이 장에서는 WFS 지도에 팝업을 출력하여 마커의 세부 정보를 표현해본다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-05-25T23:00:06+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer","OpenLayers","WFS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-05-25-gis-guide-for-programmer-18.md","url":["2022-05-25-gis-guide-for-programmer-18","2022","05","25","gis-guide-for-programmer-18"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 17. WFS 객체에 상호작용 추가하기","excerpt":"WFS와 WMS의 가장 큰 특징은 데이터의 결과물이다. WFS는 GeoJSON으로 공간정보 요소를 반환해주는 반면, WMS는 공간정보 요소를 토대로 직접 지도를 렌더링하여 제공해준다. OpenLayers는 WFS의 데이터를 토대로 `canvas`에 객체를 렌더링한다. 공간정보를 토대로 일종의 도형을 그린다고 생각하면 쉽다. 이미지와 다르게 웹 상에서 직접 그려지는 객체이므로, 웹은 이를 인식하거나 조작할 수 있다는 큰 장점이 있다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-05-21T03:04:59+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer","OpenLayers"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-05-21-gis-guide-for-programmer-17.md","url":["2022-05-21-gis-guide-for-programmer-17","2022","05","21","gis-guide-for-programmer-17"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 16. WMS GetImage를 사용하여 지도에 이미지 표시하기","excerpt":"이 장에선 WFS를 통해 지도에 이미지를 표시하는 방법에 대해 다룬다. 이전 장의 WFS는 공간정보 데이터를 GeoJSON으로 받아 직접 객체로 표시하지만, WMS는 객체를 GeoServer에서 이미지로 렌더링한 이미지를 받아 표시한다. 즉, GeoServer로 부터 직접 Tile Map을 받아 표현한다고 생각하면 된다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-05-16T02:13:10+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer","OpenLayers","OGC","WMS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-05-16-gis-guide-for-programmer-16.md","url":["2022-05-16-gis-guide-for-programmer-16","2022","05","16","gis-guide-for-programmer-16"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 15. WFS GetFeature를 사용하여 지도에 객체 표시하기","excerpt":"지금까지는 온전히 OpenLayers만의 기능이였다면, 이 장부터 슬슬 GeoServer와의 연동을 다루게 된다. 그 중 첫 번째로 다룰 기능은, WFS다. GeoServer에서 WFS는 지정한 요소의 정보를 GeoJSON의 형태로 반환해준다. 이 정보를 적절히 활용하여 지도에 표시할 수 있다. 이러한 기능을 통해 직접 관리하거나 가공한 데이터를 지도에 표시할 수 있다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-05-15T02:48:50+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer","OpenLayers","OGC","WFS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-05-15-gis-guide-for-programmer-15.md","url":["2022-05-15-gis-guide-for-programmer-15","2022","05","15","gis-guide-for-programmer-15"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 14. 지도에 사용자의 위치 표시하기","excerpt":"사용자의 위치를 기반으로 다양한 서비스를 제공할 수 있겠지만, 그 중에서 가장 기본적인 기능은 사용자의 위치를 지도 상에 직접 표시하는 것이다. 이전 장에서 설명한 지오로케이션을 토대로, OpenLayers를 활용하여 위치를 지도에 표시한다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-04-04T01:56:03+09:00","type":"projects","category":"GIS","tag":["GIS","OpenLayers"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-04-04-gis-guide-for-programmer-14.md","url":["2022-04-04-gis-guide-for-programmer-14","2022","04","04","gis-guide-for-programmer-14"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 13. 브라우저에서 사용자 위치정보 수집하기","excerpt":"지도 서비스 중에서는 사용자의 위치를 분석하고, 위치에 더욱 적절한 컨텐츠를 제시하기도 한다. 일례로, 배달 어플은 사용자의 위치에 따라 일정 범위 내의 음식점만을 우선으로 보여준다던가 하는 방식이다. 어플리케이션의 경우, 주 구동 기기인 스마트폰의 GPS를 활용할 수 있다. 비슷하게 브라우저는 브라우저 자체적으로 사용자의 동의에 따라 위치정보를 수집하여 활용할 수 있다. 당연하게도 인터넷이 반드시 연결되어야 한다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-04-03T02:50:05+09:00","type":"projects","category":"GIS","tag":["GIS","OpenLayers"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-04-03-gis-guide-for-programmer-13.md","url":["2022-04-03-gis-guide-for-programmer-13","2022","04","03","gis-guide-for-programmer-13"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 12. 맵의 유용한 정보 표시하기","excerpt":"지도를 다루다보면, 내가 현재 보고있는 영역의 좌표, 지도 상에서 마우스가 위치한 좌표, 줌 레벨 등 다양한 정보를 얻어야할 경우가 생긴다. 이런 니즈를 충족하기 위해, 지도 상에 상태창을 만들어 관련 정보를 출력해주면 필요할 때 유용하게 사용할 수 있을 것이다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-22T22:37:21+09:00","type":"projects","category":"GIS","tag":["GIS","OpenLayers"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-22-gis-guide-for-programmer-12.md","url":["2022-03-22-gis-guide-for-programmer-12","2022","03","22","gis-guide-for-programmer-12"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 11. VWorld 맵 만들기","excerpt":"이전 장에서 OSM을 통해 지도를 표시해봤다. 하지만, OSM의 지도는 디테일함이 떨어진다는 무시할 수 없는 단점이 존재한다. OSM은 사용하기 쉬운 세계지도라는 큰 장점이 있음에도, 저 단점 하나로 인해 국내 서비스용 지도로 사용하기 어렵다. 즉, 예제 이상의 실질적인 서비스에 사용하려면 국내 지리에 특화된 지도가 필요하다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-21T23:51:45+09:00","type":"projects","category":"GIS","tag":["GIS","OpenLayers"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-21-gis-guide-for-programmer-11.md","url":["2022-03-21-gis-guide-for-programmer-11","2022","03","21","gis-guide-for-programmer-11"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 10. Open Street Map(OSM) 맵 만들기","excerpt":"OSM이란, 전세계 지도 종사자들이 자율적으로 관리하는 세계지도다. 즉, 지도 분야의 오픈 소스라고 생각하면 이해하기 쉽다. 각 국의 기여자들이 지도를 관리하고 있으며, 각 국가의 영역은 해당하는 국가의 언어로 표시된다. 전세계를 대상으로 하는 서비스에도 무리없이 적용 가능하다는 장점이 있다. 단, 한국 기준으로 지도의 퀄리티가 그리 뛰어나진 않다. OpenLayers는 라이브러리 단계에서 OSM을 기본 제공한다. 즉, 별다른 API 호출이나 설정 없이 간단한 코드 몇 줄 만으로도 웹 상에 세계지도를 띄울 수 있다. 이 장에서는 OpenLayers6를 활용하여 웹 상에 OSM을 띄우는 매우 기초적인 방법에 대해 다룬다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-15T04:53:00+09:00","type":"projects","category":"GIS","tag":["GIS","OpenLayers"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-19-gis-guide-for-programmer-10.md","url":["2022-03-19-gis-guide-for-programmer-10","2022","03","19","gis-guide-for-programmer-10"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 9. 데이터 필터링하기","excerpt":"WFS나 WMS를 호출할 때, 좀 더 다채로운 필터링이 필요한 경우가 존재할 수 있다. 특정 영역 밖의 객체를 호출한다거나, 특정 영역에 걸치는 데이터만 호출하는 것, 혹은 다양한 조건을 조합하여 데이터를 조회해야 할 수도 있다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-15T01:11:19+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-15-gis-guide-for-programmer-9.md","url":["2022-03-15-gis-guide-for-programmer-9","2022","03","15","gis-guide-for-programmer-9"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 8. 공간정보 데이터를 주문하는 법. OGC","excerpt":"OpenLayers는 웹 브라우저에서 지도나 GIS 서비스를 제공하기 위한 JavaScript Library다. GIS 라이브러리 중 진입 장벽은 가장 높지만, 그에 상응하는 강력한 기능을 제공한다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-14T23:37:32+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-14-gis-guide-for-programmer-8.md","url":["2022-03-14-gis-guide-for-programmer-8","2022","03","14","gis-guide-for-programmer-8"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 7. 공간정보 데이터를 관리하는 법. GeoServer","excerpt":"이전 장에서 공간정보 데이터를 DB에 넣어봤다. 이제 데이터를 적절한 방법으로 통신할 방법만 마련한다면, DB에 저장한 공간정보 데이터를 웹에서든 앱에서든 자유롭게 활용할 수 있을 것이다. 하지만 누누히 언급했듯이, 공간정보 데이터는 다른 데이터와 엄연한 차별점이 존재한다. 바로 공간 데이터라는 점이다. 공간정보 데이터는 일반적인 텍스트 기반의 데이터가 아니다보니, CRUD에 있어서 굉장히 취약하다. 좀 더 자유로운 통신을 위해 DB에 넣었음에도 CRUD에 전혀 강점이 없는 것. 즉, MyBatis든, JPA든, 일반적인 DB 통신으로는 공간정보 데이터를 온전히 받기가 어렵다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-07T01:12:33+09:00","type":"projects","category":"GIS","tag":["GIS","GeoServer"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-07-gis-guide-for-programmer-7.md","url":["2022-03-07-gis-guide-for-programmer-7","2022","03","07","gis-guide-for-programmer-7"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 6. 공간정보의 DB화","excerpt":"데이터의 CRUD 소요가 있는 서비스는 DB를 사용한다. 서비스 운영에 필요한 데이터를 DB에 저장하고, 이를 적절히 관리, 조작함으로써 서비스의 기능을 제공한다. GIS의 경우, 그 특성상 대용량 데이터를 자주 접하게 된다. 일례로, 전국의 건물 수는 몇백만을 우습게 상회하기 때문. 단순 row가 백만 단위인 것도 문제지만, 건물 정보의 특성 상 column의 갯수 또한 수십 개 정도다. 때문의 데이터의 용량이 매우 커진다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-05T04:35:41+09:00","type":"projects","category":"GIS","tag":["GIS","MariaDB","QGIS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-05-gis-guide-for-programmer-6.md","url":["2022-03-05-gis-guide-for-programmer-6","2022","03","05","gis-guide-for-programmer-6"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 5. OpenLayers","excerpt":"OpenLayers는 웹 브라우저에서 지도나 GIS 서비스를 제공하기 위한 JavaScript Library다. GIS 라이브러리 중 진입 장벽은 가장 높지만, 그에 상응하는 강력한 기능을 제공한다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-05T03:39:25+09:00","type":"projects","category":"GIS","tag":["GIS","OpenLayers"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-05-gis-guide-for-programmer-5.md","url":["2022-03-05-gis-guide-for-programmer-5","2022","03","05","gis-guide-for-programmer-5"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 4. QGIS 체험하기","excerpt":"이전에 대부분의 공간정보 데이터는 SHP를 기본으로 제공한다고 언급했었다. 그런데 문제는 이 SHP. 어떻게 여는지 모르겠다. GeoJSON이나 CSV 같은 텍스트 기반 데이터는 어찌됐든 열어서 검증을 해볼 수 있지만, SHP는 그게 안 된다는 말이다. 때문에 SHP를 열어서 조작할 수 있는 일종의 툴이 필요한데, 이미 여러 툴이 있으니 크게 문제되진 않는다. 가장 대표적인 툴은 두 가지가 있다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-05T03:05:25+09:00","type":"projects","category":"GIS","tag":["GIS","QGIS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-05-gis-guide-for-programmer-4.md","url":["2022-03-05-gis-guide-for-programmer-4","2022","03","05","gis-guide-for-programmer-4"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 3. 좌표계","excerpt":"1986년, NASA에서 우주왕복선 챌린저호를 발사했으나, 발사한 지 약 73초만에 폭발한 안타까운 사고가 있었다. 원인은 어이없게도 단위 실수. 국제적인 표준은 미터법임에도 불구하고, 미국을 포함한 몇몇 국가는 인치법을 표준으로 사용하고 있었다. 이러한 상황에서 우주선의 설계도 중 미터법으로 표기된 부품 O Ring을 인치법으로 제작했기 때문에 일어난 사고였다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-04T01:47:29+09:00","type":"projects","category":"GIS","tag":["GIS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-04-gis-guide-for-programmer-3.md","url":["2022-03-04-gis-guide-for-programmer-3","2022","03","04","gis-guide-for-programmer-3"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 2. GIS랑 인사하기","excerpt":"여러분들이 GIS를 처음 접했다면, 한 번 물어보고 싶다. 공간이란 뭘로 이루어져 있을까? 한 번 생각해보자. 다양한 답이 나왔을 것이라 생각한다. 무슨 답인지 내가 직접 못 듣는다는 게 좀 아쉽지만. 아마 대부분 추상적인 답이 나왔을 것이라 생각한다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-03T23:36:04+09:00","type":"projects","category":"GIS","tag":["GIS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-03-gis-guide-for-programmer-2.md","url":["2022-03-03-gis-guide-for-programmer-2","2022","03","03","gis-guide-for-programmer-2"]},{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 1. 머릿말","excerpt":"공간정보, 지리쪽에 업이 있거나 관심있는 사람이 아니라면, GIS라는 단어는 다소 생소한 단어다. 혹자는 GIS가 아니라 GPS 아니냐고 반문하기도 한다. GPS(Global Positioning System)는 3개 이상의 위성 신호를 통해 수신기의 위치를 계산할 수 있는 기법이다. GPS라 하면 흔히 네비게이션을 연상하기 쉽지만, 알게 모르게 GPS는 일상생활에 깊게 녹아들어 있다. 네비게이션, 스마트폰 지도, 배달 플랫폼의 라이더 위치 추적, 드론 군집비행, 군사학 등. GPS는 다양한 영역에 스며들어 그 이로움을 전해준다. 우리는 GPS를 통해, 공간정보라는 디지털 시대에서 공간을 디지털화한다는 것이 어떤 능력을 발휘하는 지 엿볼 수 있다. GIS(Global Information System)는 GPS와 같이 공간정보를 다루는 모든 기술에 대한 포괄적인 기술을 의미한다. GPS 뿐만 아니라, 지도, 좌표계와 같이 공간과 엮이는 모든 기술은 GIS라는 커다란 범주로 묶을 수 있다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-03T23:05:35+09:00","type":"projects","category":"GIS","tag":["GIS"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-03-gis-guide-for-programmer-1.md","url":["2022-03-03-gis-guide-for-programmer-1","2022","03","03","gis-guide-for-programmer-1"]}],"next":{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 11. VWorld 맵 만들기","excerpt":"이전 장에서 OSM을 통해 지도를 표시해봤다. 하지만, OSM의 지도는 디테일함이 떨어진다는 무시할 수 없는 단점이 존재한다. OSM은 사용하기 쉬운 세계지도라는 큰 장점이 있음에도, 저 단점 하나로 인해 국내 서비스용 지도로 사용하기 어렵다. 즉, 예제 이상의 실질적인 서비스에 사용하려면 국내 지리에 특화된 지도가 필요하다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-03-21T23:51:45+09:00","type":"projects","category":"GIS","tag":["GIS","OpenLayers"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-03-21-gis-guide-for-programmer-11.md","url":["2022-03-21-gis-guide-for-programmer-11","2022","03","21","gis-guide-for-programmer-11"]},"prev":{"header":{"title":"OpenLayers를 여행하는 개발자를 위한 안내서 - 13. 브라우저에서 사용자 위치정보 수집하기","excerpt":"지도 서비스 중에서는 사용자의 위치를 분석하고, 위치에 더욱 적절한 컨텐츠를 제시하기도 한다. 일례로, 배달 어플은 사용자의 위치에 따라 일정 범위 내의 음식점만을 우선으로 보여준다던가 하는 방식이다. 어플리케이션의 경우, 주 구동 기기인 스마트폰의 GPS를 활용할 수 있다. 비슷하게 브라우저는 브라우저 자체적으로 사용자의 동의에 따라 위치정보를 수집하여 활용할 수 있다. 당연하게도 인터넷이 반드시 연결되어야 한다.","coverImage":"https://user-images.githubusercontent.com/50317129/156607880-c5abad92-1991-4c01-b85f-7153bf89cb64.png","date":"2022-04-03T02:50:05+09:00","type":"projects","category":"GIS","tag":["GIS","OpenLayers"],"group":"OpenLayers를 여행하는 개발자를 위한 안내서","comment":true,"publish":true},"name":"2022-04-03-gis-guide-for-programmer-13.md","url":["2022-04-03-gis-guide-for-programmer-13","2022","04","03","gis-guide-for-programmer-13"]}}},"__N_SSG":true}