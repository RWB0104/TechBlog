{"pageProps":{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 1. OAuth2.0이란?","excerpt":"사이트를 돌아다니다보면 로그인이 필요한 사이트를 심심치않게 만나볼 수 있다. 그리고 이런 사이트들은 대부분 \"네이버로 로그인하기\"와 같은 플랫폼 로그인을 제공한다. 사이트 뿐만 아니라 근래 들어 출시되는 앱 역시 대부분 플랫폼을 통한 인증 서비스를 제공한다. 이를 활용하면 매우 간단한 절차를 통해 회원가입 또는 로그인을 수행할 수 있게 된다. 이러한 서비스는 네이버 뿐만 아니라 Google, 카카오 등 어느정도 규모있는 플랫폼의 대부분은 이러한 \"플랫폼으로 로그인하기\"와 같은 기능을 제공한다. 이렇게 플랫폼의 정보를 활용하여 타 사이트에서 인증을 수행하는 것을 OAuth 프로토콜이라 한다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-14T00:56:31","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-14-oauth2-java-server-1.md","url":["2021-10-14-oauth2-java-server-1","2021","10","14","oauth2-java-server-1"],"toc":"<ul><li><a href=\"#개요\">개요</a></li><li><a href=\"#OAuth\">OAuth</a></li><li><a href=\"#OAuth-Workflow\">OAuth Workflow</a></li><ul><li><a href=\"#인가-코드 승인 (Authorization Code Grant)\">인가 코드 승인 (Authorization Code Grant)</a></li><li><a href=\"#암시적-승인 (Implicit Grant)\">암시적 승인 (Implicit Grant)</a></li><li><a href=\"#리소스-소유자 암호 자격 승인 (Resource Owner Password Credentials Grant)\">리소스 소유자 암호 자격 승인 (Resource Owner Password Credentials Grant)</a></li><li><a href=\"#클라이언트-자격 승인 (Client Credentials Grant)\">클라이언트 자격 승인 (Client Credentials Grant)</a></li></ul><li><a href=\"#정리\">정리</a></li><li><a href=\"#참고\">참고</a></li></ul>","content":"<h1 id=\"개요\">개요 <a href=\"#개요\">🔗</a></h1><p>사이트를 돌아다니다보면 로그인이 필요한 사이트를 심심치않게 만나볼 수 있다. 그리고 이런 사이트들은 대부분 \"네이버로 로그인하기\"와 같은 플랫폼 로그인을 제공한다. 사이트 뿐만 아니라 근래 들어 출시되는 앱 역시 대부분 플랫폼을 통한 인증 서비스를 제공한다.</p>\n<p>\n\t\t<a href=\"https://user-images.githubusercontent.com/50317129/137170074-d678c0e1-d30a-4d38-91e5-543344e18ec3.png\" target=\"_blank\" data-title=\"null\">\n\t\t\t<img src=\"https://user-images.githubusercontent.com/50317129/137170074-d678c0e1-d30a-4d38-91e5-543344e18ec3.png\" alt=\"image\" />\n\t\t</a>\n\t\t</p>\n<p>이를 활용하면 매우 간단한 절차를 통해 회원가입 또는 로그인을 수행할 수 있게 된다. 이러한 서비스는 네이버 뿐만 아니라 Google, 카카오 등 어느정도 규모있는 플랫폼의 대부분은 이러한 \"플랫폼으로 로그인하기\"와 같은 기능을 제공한다.</p>\n<p>이렇게 플랫폼의 정보를 활용하여 타 사이트에서 인증을 수행하는 것을 OAuth 프로토콜이라 한다.</p>\n<h1 id=\"OAuth\">OAuth <a href=\"#OAuth\">🔗</a></h1><p>\n\t\t<a href=\"https://user-images.githubusercontent.com/50317129/137171256-3ca820ec-1435-4103-bc34-9c922832886c.png\" target=\"_blank\" data-title=\"null\">\n\t\t\t<img src=\"https://user-images.githubusercontent.com/50317129/137171256-3ca820ec-1435-4103-bc34-9c922832886c.png\" alt=\"image\" />\n\t\t</a>\n\t\t</p>\n<p>OAuth는 Open Authentication의 약자로, 인증을 위한 표준 프로토콜이다.</p>\n<p>이전의 인증 방식은 사이트 혹은 애플리케이션에 직접 회원가입을 수행하여 내 정보를 제공하고, 비밀번호를 통해 인증하는 비밀번호 인증 방식을 취한다. 물론 이 비밀번호 인증 방식은 인터넷의 초창기부터 지금까지 사용하는 기법이지만, 그렇다고 문제가 아주 없는 것은 아니였다.</p>\n<ul>\n<li>서비스마다 운영되는 중구난방적인 인증 시스템</li>\n<li>사이트의 신뢰성 문제</li>\n<li>인터넷을 사용할수록 과적되는 인증 정보</li>\n</ul>\n<p>OAuth 이전에는 이렇다할 인증 표준이 존재하지 않았다. 표준이 없다보니 인증 시스템은 서비스마다 개성이 넘처흘렀다. 사이트마다 요구하는 정보, 방식이 천차만별로 다르니 사용자 입장에서는 매우 혼란스러울 것이다.</p>\n<p>그래도 이 점은 나름 사이트를 구분할 수 있는 일종의 척도(?)가 되기도 한다만, 더 큰 문제는 해당 사이트를 신뢰할만한 지표가 전혀 없다는 것이다. 내 정보를 왜 가져가는지, 어떻게 보관하는지 알 길이 없는 사용자들은 울며 겨자먹기로 서비스에게 내 정보를 제공하게 된다.</p>\n<p>이런 사이트들을 조금만 돌아다니면서 상호작용을 하다보면, 나도 모르는 새에 계정정보가 쌓여있을 것이다. 인증의 주체가 되는 \"나\"는 하나인데, 인증 표준의 부재로 인해 각 서비스마다 나 자신을 인증하기 위한 여러 방법을 소유하게되는 것이다.</p>\n<br />\n\n<p>이러한 비효율성을 타파하기 위해 Twitter 주도하에 인증 표준이 설립되었고, 이 것이 OAuth의 시초다. OAuth 라는 표준 프로토콜이 정의됨에 따라 각 서비스는 공통된 인터페이스로 사용자에게 인증을 요구할 수 있고, 사용자 역시 익숙하고 신뢰성있는 대형 플랫폼에 인증 정보를 입력하기 때문에 보안적인 측면은 물론, 절차 또한 간소화되는 이점을 가지게 된다.</p>\n<p>OAuth는 1.0을 시작으로, 1.0에 세션 고정 공격이라는 보안 취약점이 발견됨에 따라 현재는 2.0을 사용하고 있다.</p>\n<blockquote>\n<p><b class=\"orange-400\">OAuth1.0의 몰락</b><br>OAuth1.0은 <span class=\"primary\">세션 고정 공격</span>이라는 보안 취약점을 가지고 있다. 이를 해결하기 위해 OAuth2.0에서는 이러한 문제들이 해결되었으며, OAuth2.0은 OAuth1.0을 완전히 대체한다.</p>\n</blockquote>\n<p>OAuth2.0은 그 방식에 따라 4가지 방식으로 구분한다.</p>\n<p>이를 설명하기 앞서 OAuth에서 사용하는 키워드에 대해 알아보자</p>\n\n\t\t\t<div class=\"table-wrapper\">\n\t\t\t\t<table>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n<th align=\"center\">키워드</th>\n<th align=\"center\">의미</th>\n</tr>\n\n\t\t\t\t\t</thead>\n\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n<td align=\"center\">User</td>\n<td align=\"center\">사용자</td>\n</tr>\n<tr>\n<td align=\"center\">Consumer</td>\n<td align=\"center\">OAuth를 제공하는 서비스 (웹 등)</td>\n</tr>\n<tr>\n<td align=\"center\">Service Provider</td>\n<td align=\"center\">OAuth 서비스 제공자 (NAVER 등)</td>\n</tr>\n<tr>\n<td align=\"center\">Access Token</td>\n<td align=\"center\">Consumer가 Service Provider의 자원에 접근하기 위한 인증 코드</td>\n</tr>\n<tr>\n<td align=\"center\">Refresh Token</td>\n<td align=\"center\">Access Token을 재발급하기 위한 코드</td>\n</tr>\n\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t<p>아마 대부분 User의 범주에 속해있을 것이다. 여기서 궁극적으로 구축할 서비스는 Consumer가 된다.</p>\n<p>간혹 Service Provider는 인증 서버와 자원 서버로 분리해서 다루기도 한다.</p>\n<p>NAVER, Google과 같은 플랫폼은 Service Provider가 되며, 인증 절차를 통해 Access Token과 Refresh Token을 전달받게 된다.</p>\n<h1 id=\"OAuth-Workflow\">OAuth Workflow <a href=\"#OAuth-Workflow\">🔗</a></h1><p>OAuth2.0은 구현 방식에 따라 4가지 방식으로 구분된다.</p>\n<h2 id=\"인가-코드 승인 (Authorization Code Grant)\">인가 코드 승인 (Authorization Code Grant) <a href=\"#인가-코드 승인 (Authorization Code Grant)\">🔗</a></h2><p>\n\t\t<a href=\"https://user-images.githubusercontent.com/50317129/137179813-de61fd8a-bbe6-4824-afdf-3652cde164bc.png\" target=\"_blank\" data-title=\"null\">\n\t\t\t<img src=\"https://user-images.githubusercontent.com/50317129/137179813-de61fd8a-bbe6-4824-afdf-3652cde164bc.png\" alt=\"image\" />\n\t\t</a>\n\t\t</p>\n<ul>\n<li>사용자가 Service Provider에 직접 인증을 수행</li>\n<li>인증에 성공하면 Consumer Frontend는 인가 코드를 전달받음</li>\n<li>Consumer는 인가 코드를 Service Provider에 전달하여 Access, Refresh Token을 반환받음</li>\n<li>Token 반환 이전에 인가 코드를 받는 과정이 추가되어 높은 수준의 보안을 제공함</li>\n<li>Consumer의 Backend에서 Token 교환이 일어나므로 중간에 이를 탈취하기 어려움</li>\n<li>웹에서 사용되는 가장 보편적인 인증 형태로, 이 프로젝트 또한 인가 코드 승인 형태가 적용됨</li>\n</ul>\n\n\t\t\t\t\t<div class=\"codeblock\">\n\t\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t\t<p>INPUT</p>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t\t<pre class=\"language-input\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0>GET /auth</td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1>Host: oauth2.example.com</td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3>response_type=code</td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4>&client_id=asj2y93bdjen3</td></tr>\n<tr data-number=5><td class=\"line-number\" data-number=\"5\">5</td><td class=\"line-code\" data-number=5>&redirect_url=https://oauth2.example.com/callback</td></tr>\n<tr data-number=6><td class=\"line-number\" data-number=\"6\">6</td><td class=\"line-code\" data-number=6>&state=6b773c55-b688-4a77-adaf-0bd25f4c4111</td></tr>\n<tr data-number=7><td class=\"line-number\" data-number=\"7\">7</td><td class=\"line-code\" data-number=7>&scope=email,profile</td></tr></tbody></table></pre>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t<div class=\"table-wrapper\">\n\t\t\t\t<table>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n<th align=\"center\">구분</th>\n<th align=\"center\">필수 여부</th>\n<th align=\"center\">내용</th>\n</tr>\n\n\t\t\t\t\t</thead>\n\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n<td align=\"center\">response_type</td>\n<td align=\"center\"><span class=\"red-400\">Y</span></td>\n<td align=\"center\">응답 타입으로, 값은 <code class=\"inline-code\">code</code>로 고정</td>\n</tr>\n<tr>\n<td align=\"center\">client_id</td>\n<td align=\"center\"><span class=\"red-400\">Y</span></td>\n<td align=\"center\">Service Provider에서 제공한 API KEY</td>\n</tr>\n<tr>\n<td align=\"center\">redirect_url</td>\n<td align=\"center\"><span class=\"red-400\">Y</span></td>\n<td align=\"center\">응답 반환 URL</td>\n</tr>\n<tr>\n<td align=\"center\">state</td>\n<td align=\"center\">N</td>\n<td align=\"center\">임의로 생성한 고유 상태값</td>\n</tr>\n<tr>\n<td align=\"center\">scope</td>\n<td align=\"center\">N</td>\n<td align=\"center\">요청 권한</td>\n</tr>\n\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t<br />\n<br />\n\n\n\t\t\t\t\t<div class=\"codeblock\">\n\t\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t\t<p>OUTPUT</p>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t\t<pre class=\"language-output\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0>GET /callback</td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1>Host: oauth2.example.com</td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3>code=dfnY865gHjUbnknt57yGV</td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4>&state=6b773c55-b688-4a77-adaf-0bd25f4c4111</td></tr></tbody></table></pre>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t<div class=\"table-wrapper\">\n\t\t\t\t<table>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n<th align=\"center\">구분</th>\n<th align=\"center\">내용</th>\n</tr>\n\n\t\t\t\t\t</thead>\n\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n<td align=\"center\">code</td>\n<td align=\"center\">인가 코드</td>\n</tr>\n<tr>\n<td align=\"center\">state</td>\n<td align=\"center\">요청에서 전달한 고유 상태값</td>\n</tr>\n\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t<p><code class=\"inline-code\">state</code>는 Consumer Backend에서 임의로 생성한 상태값으로, 통상 UUID를 하나 생성하여 사용한다.</p>\n<p><code class=\"inline-code\">code</code>와 입력했던 <code class=\"inline-code\">state</code>가 반환된다. <code class=\"inline-code\">code</code>를 통해 Service Provider에 요청하여 Access Token으로 교환할 수 있다.</p>\n<h2 id=\"암시적-승인 (Implicit Grant)\">암시적 승인 (Implicit Grant) <a href=\"#암시적-승인 (Implicit Grant)\">🔗</a></h2><p>\n\t\t<a href=\"https://user-images.githubusercontent.com/50317129/137179833-fe688388-0d29-47c0-b4db-c4a42b26dccd.png\" target=\"_blank\" data-title=\"null\">\n\t\t\t<img src=\"https://user-images.githubusercontent.com/50317129/137179833-fe688388-0d29-47c0-b4db-c4a42b26dccd.png\" alt=\"image\" />\n\t\t</a>\n\t\t</p>\n<ul>\n<li>인가 코드 승인과 달리, 인증 성공 시 Consumer는 Token을 직접 전달받음</li>\n<li>각 플랫폼에서 제공되는 JavaScript SDK를 사용하여 구현</li>\n<li>인가 코드 승인에 비해 서버가 필요하지 않아 구현이 간단함</li>\n<li>Token이 GET 방식으로 URL 파라미터에 담겨 전달되므로 보안에 취약하다.</li>\n</ul>\n\n\t\t\t\t\t<div class=\"codeblock\">\n\t\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t\t<p>INPUT</p>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t\t<pre class=\"language-input\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0>GET /auth</td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1>Host: oauth2.example.com</td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3>response_type=token</td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4>&client_id=asj2y93bdjen3</td></tr>\n<tr data-number=5><td class=\"line-number\" data-number=\"5\">5</td><td class=\"line-code\" data-number=5>&redirect_url=https://oauth2.example.com/callback</td></tr>\n<tr data-number=6><td class=\"line-number\" data-number=\"6\">6</td><td class=\"line-code\" data-number=6>&state=97c66e11-d0e0-4c86-833c-e08bed40748d</td></tr>\n<tr data-number=7><td class=\"line-number\" data-number=\"7\">7</td><td class=\"line-code\" data-number=7>&scope=email,profile</td></tr></tbody></table></pre>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t<div class=\"table-wrapper\">\n\t\t\t\t<table>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n<th align=\"center\">구분</th>\n<th align=\"center\">필수 여부</th>\n<th align=\"center\">내용</th>\n</tr>\n\n\t\t\t\t\t</thead>\n\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n<td align=\"center\">response_type</td>\n<td align=\"center\"><span class=\"red-400\">Y</span></td>\n<td align=\"center\">응답 타입으로, 값은 <code class=\"inline-code\">token</code>으로 고정</td>\n</tr>\n<tr>\n<td align=\"center\">client_id</td>\n<td align=\"center\"><span class=\"red-400\">Y</span></td>\n<td align=\"center\">Service Provider에서 제공한 API KEY</td>\n</tr>\n<tr>\n<td align=\"center\">redirect_url</td>\n<td align=\"center\"><span class=\"red-400\">Y</span></td>\n<td align=\"center\">응답 반환 URL</td>\n</tr>\n<tr>\n<td align=\"center\">state</td>\n<td align=\"center\">N</td>\n<td align=\"center\">임의로 생성한 고유 상태값</td>\n</tr>\n<tr>\n<td align=\"center\">scope</td>\n<td align=\"center\">N</td>\n<td align=\"center\">요청 권한</td>\n</tr>\n\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t<br />\n<br />\n\n\n\t\t\t\t\t<div class=\"codeblock\">\n\t\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t\t<p>OUTPUT</p>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t\t<pre class=\"language-output\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0>GET /callback</td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1>Host: oauth2.example.com</td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3>#access_token=kr40FkgksmGS92lffkGls</td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4>&token_type=Bearer</td></tr>\n<tr data-number=5><td class=\"line-number\" data-number=\"5\">5</td><td class=\"line-code\" data-number=5>&expires_in=3600</td></tr>\n<tr data-number=6><td class=\"line-number\" data-number=\"6\">6</td><td class=\"line-code\" data-number=6>&state=97c66e11-d0e0-4c86-833c-e08bed40748d</td></tr></tbody></table></pre>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t<div class=\"table-wrapper\">\n\t\t\t\t<table>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n<th align=\"center\">구분</th>\n<th align=\"center\">내용</th>\n</tr>\n\n\t\t\t\t\t</thead>\n\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n<td align=\"center\">access_token</td>\n<td align=\"center\">접근 토큰</td>\n</tr>\n<tr>\n<td align=\"center\">token_type</td>\n<td align=\"center\">접근 토큰의 타입으로, 통상 Bearer 사용</td>\n</tr>\n<tr>\n<td align=\"center\">expires_in</td>\n<td align=\"center\">토큰 유효기간 (초)</td>\n</tr>\n<tr>\n<td align=\"center\">state</td>\n<td align=\"center\">요청에서 전달한 고유 상태값</td>\n</tr>\n\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t<p>인가 코드 승인과 달리, 요청에 Access Token이 포함되어 전달된다.</p>\n<blockquote>\n<p><b class=\"orange-400\">파라미터가 왜 </b><code class=\"inline-code\">#</code><b class=\"orange-400\">으로 시작하지?</b><br><code class=\"inline-code\">#</code>은 URI Fragment라는 식별자다. 해당 식별자는 URL 접근 시 서버에 전달되지 않기 때문에 보안적인 측면에서 이점을 가져가기 위한 조치다.</p>\n</blockquote>\n<h2 id=\"리소스-소유자 암호 자격 승인 (Resource Owner Password Credentials Grant)\">리소스 소유자 암호 자격 승인 (Resource Owner Password Credentials Grant) <a href=\"#리소스-소유자 암호 자격 승인 (Resource Owner Password Credentials Grant)\">🔗</a></h2><p>\n\t\t<a href=\"https://user-images.githubusercontent.com/50317129/137179866-29962644-c0a7-42f8-a397-7b3b1c361082.png\" target=\"_blank\" data-title=\"null\">\n\t\t\t<img src=\"https://user-images.githubusercontent.com/50317129/137179866-29962644-c0a7-42f8-a397-7b3b1c361082.png\" alt=\"image\" />\n\t\t</a>\n\t\t</p>\n<ul>\n<li>Service Provider에 ID, PW를 전달하여 Token을 전달받음</li>\n<li>보안 구조가 비밀번호 기반의 인증 뿐이므로 이를 구현하는 Consumer는 신뢰성이 매우 높아야 함</li>\n</ul>\n\n\t\t\t\t\t<div class=\"codeblock\">\n\t\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t\t<p>INPUT</p>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t\t<pre class=\"language-input\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0>POST /auth</td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1>Host: oauth2.example.com</td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3>grant_type=password</td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4>&client_id=asj2y93bdjen3</td></tr>\n<tr data-number=5><td class=\"line-number\" data-number=\"5\">5</td><td class=\"line-code\" data-number=5>&username=username123</td></tr>\n<tr data-number=6><td class=\"line-number\" data-number=\"6\">6</td><td class=\"line-code\" data-number=6>&password=password123</td></tr>\n<tr data-number=7><td class=\"line-number\" data-number=\"7\">7</td><td class=\"line-code\" data-number=7>&scope=email,profile</td></tr></tbody></table></pre>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t<div class=\"table-wrapper\">\n\t\t\t\t<table>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n<th align=\"center\">구분</th>\n<th align=\"center\">필수 여부</th>\n<th align=\"center\">내용</th>\n</tr>\n\n\t\t\t\t\t</thead>\n\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n<td align=\"center\">grant_type</td>\n<td align=\"center\"><span class=\"red-400\">Y</span></td>\n<td align=\"center\">승인 타입으로, <code class=\"inline-code\">password</code>로 고정</td>\n</tr>\n<tr>\n<td align=\"center\">client_id</td>\n<td align=\"center\"><span class=\"red-400\">Y</span></td>\n<td align=\"center\">Service Provider에서 제공한 API KEY</td>\n</tr>\n<tr>\n<td align=\"center\">username</td>\n<td align=\"center\"><span class=\"red-400\">Y</span></td>\n<td align=\"center\">아이디</td>\n</tr>\n<tr>\n<td align=\"center\">password</td>\n<td align=\"center\"><span class=\"red-400\">Y</span></td>\n<td align=\"center\">비밀번호</td>\n</tr>\n<tr>\n<td align=\"center\">scope</td>\n<td align=\"center\">N</td>\n<td align=\"center\">요청 권한</td>\n</tr>\n\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t<br />\n<br />\n\n\n\t\t\t\t\t<div class=\"codeblock\">\n\t\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t\t<p>JSON</p>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t\t<pre class=\"language-json\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1>    <span class=\"token property\">\"access_token\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dGkdi93ns2kdkV9dkA3\"</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2>    <span class=\"token property\">\"token_type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Bearer\"</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3>    <span class=\"token property\">\"expires_in\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3600</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4>    <span class=\"token property\">\"scope\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"email,profile\"</span></td></tr>\n<tr data-number=5><td class=\"line-number\" data-number=\"5\">5</td><td class=\"line-code\" data-number=5><span class=\"token punctuation\">}</span></td></tr></tbody></table></pre>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t<div class=\"table-wrapper\">\n\t\t\t\t<table>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n<th align=\"center\">구분</th>\n<th align=\"center\">내용</th>\n</tr>\n\n\t\t\t\t\t</thead>\n\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n<td align=\"center\">access_token</td>\n<td align=\"center\">접근 토큰</td>\n</tr>\n<tr>\n<td align=\"center\">token_type</td>\n<td align=\"center\">접근 토큰의 타입으로, 통상 Bearer 사용</td>\n</tr>\n<tr>\n<td align=\"center\">expires_in</td>\n<td align=\"center\">토큰 유효기간 (초)</td>\n</tr>\n<tr>\n<td align=\"center\">scope</td>\n<td align=\"center\">요청 권한</td>\n</tr>\n\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t<h2 id=\"클라이언트-자격 승인 (Client Credentials Grant)\">클라이언트 자격 승인 (Client Credentials Grant) <a href=\"#클라이언트-자격 승인 (Client Credentials Grant)\">🔗</a></h2><p>\n\t\t<a href=\"https://user-images.githubusercontent.com/50317129/137179894-94e8f974-27cd-44b1-9c36-5e1d3dc69377.png\" target=\"_blank\" data-title=\"null\">\n\t\t\t<img src=\"https://user-images.githubusercontent.com/50317129/137179894-94e8f974-27cd-44b1-9c36-5e1d3dc69377.png\" alt=\"image\" />\n\t\t</a>\n\t\t</p>\n<ul>\n<li>사용자가 Access Token을 외부 저장소에서 받아 인증하는 형식</li>\n<li>클라이언트 자체가 인증 수단이므로 절차가 매우 간소함</li>\n<li>통상 자기 자신의 정보만을 호출함</li>\n</ul>\n\n\t\t\t\t\t<div class=\"codeblock\">\n\t\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t\t<p>INPUT</p>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t\t<pre class=\"language-input\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0>GET /auth</td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1>Host: oauth2.example.com</td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3>grant_type=client_credentials</td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4>&client_id=asj2y93bdjen3</td></tr>\n<tr data-number=5><td class=\"line-number\" data-number=\"5\">5</td><td class=\"line-code\" data-number=5>&client_secret=https://oauth2.example.com/callback</td></tr>\n<tr data-number=6><td class=\"line-number\" data-number=\"6\">6</td><td class=\"line-code\" data-number=6>&scope=email,profile</td></tr></tbody></table></pre>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t<div class=\"table-wrapper\">\n\t\t\t\t<table>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n<th align=\"center\">구분</th>\n<th align=\"center\">필수 여부</th>\n<th align=\"center\">내용</th>\n</tr>\n\n\t\t\t\t\t</thead>\n\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n<td align=\"center\">grant_type</td>\n<td align=\"center\"><span class=\"red-400\">Y</span></td>\n<td align=\"center\">응답 타입으로, 값은 <code class=\"inline-code\">client_credentials</code>로 고정</td>\n</tr>\n<tr>\n<td align=\"center\">client_id</td>\n<td align=\"center\"><span class=\"red-400\">Y</span></td>\n<td align=\"center\">Service Provider에서 제공한 API KEY</td>\n</tr>\n<tr>\n<td align=\"center\">client_secret</td>\n<td align=\"center\"><span class=\"red-400\">Y</span></td>\n<td align=\"center\">Service Provider에서 제공한 API Secret KEY</td>\n</tr>\n<tr>\n<td align=\"center\">scope</td>\n<td align=\"center\">N</td>\n<td align=\"center\">요청 권한</td>\n</tr>\n\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t<br />\n<br />\n\n\n\t\t\t\t\t<div class=\"codeblock\">\n\t\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t\t<p>JSON</p>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t\t<pre class=\"language-json\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token punctuation\">{</span></td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1>    <span class=\"token property\">\"access_token\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dGkdi93ns2kdkV9dkA3\"</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2>    <span class=\"token property\">\"token_type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Bearer\"</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3>    <span class=\"token property\">\"expires_in\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3600</span><span class=\"token punctuation\">,</span></td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4>    <span class=\"token property\">\"scope\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"email,profile\"</span></td></tr>\n<tr data-number=5><td class=\"line-number\" data-number=\"5\">5</td><td class=\"line-code\" data-number=5><span class=\"token punctuation\">}</span></td></tr></tbody></table></pre>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t<div class=\"table-wrapper\">\n\t\t\t\t<table>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n<th align=\"center\">구분</th>\n<th align=\"center\">내용</th>\n</tr>\n\n\t\t\t\t\t</thead>\n\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n<td align=\"center\">access_token</td>\n<td align=\"center\">접근 토큰</td>\n</tr>\n<tr>\n<td align=\"center\">token_type</td>\n<td align=\"center\">접근 토큰의 타입으로, 통상 Bearer 사용</td>\n</tr>\n<tr>\n<td align=\"center\">expires_in</td>\n<td align=\"center\">토큰 유효기간 (초)</td>\n</tr>\n<tr>\n<td align=\"center\">scope</td>\n<td align=\"center\">요청 권한</td>\n</tr>\n\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t<h1 id=\"정리\">정리 <a href=\"#정리\">🔗</a></h1><ul>\n<li>OAuth2.0은 인증을 위한 표준 프로토콜으로, OAuth 프로토콜을 준수하는 서비스는 기본적으로 공통된 API를 사용해서 인증을 수행할 수 있다.</li>\n<li>OAuth 프로토콜을 통해 인증 절차는 간소화하고, 보안 수준은 강화할 수 있다.</li>\n<li>OAuth의 방식은 4가지로 구분되며, 보편적으로 인가 코드 승인 방식을 사용한다.</li>\n<li>암시적 승인은 Serverless 서비스나 앱에서 주로 사용된다.</li>\n<li>나머지 방식은 특수한 환경에서 사용된다.</li>\n</ul>\n<p>다음 장에서는 구축할 시스템의 구성에 대해 다룬다.</p>\n<h1 id=\"참고\">참고 <a href=\"#참고\">🔗</a></h1><ul>\n<li><a href=\"https://itwiki.kr/w/OAuth\" target=\"_blank\">IT위키 - OAuth</a></li>\n<li><a href=\"https://docs.microsoft.com/ko-kr/azure/active-directory/develop/active-directory-v2-protocols\" target=\"_blank\">Microsoft OAuth</a></li>\n<li><a href=\"https://datatracker.ietf.org/doc/html/rfc6749\" target=\"_blank\">RFC6749</a></li>\n</ul>\n","meta":{"prev":{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 2. 인증서버 설계하기","excerpt":"OAuth2.0 프로토콜에 대한 사전 지식도 얻었으니, 이를 통해 인증서버를 직접 구축해보자. Frontend, Backend 부분으로 나누어 웹 페이지를 통해 소셜 로그인을 수행하고, 직접 구현한 인증서버에서 이를 처리하는 시스템 일체를 구축하는 것이 궁극적인 목표다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-14T22:12:25","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-14-oauth2-java-server-2.md","url":["2021-10-14-oauth2-java-server-2","2021","10","14","oauth2-java-server-2"]},"next":{"header":{"title":"[NextJS] 블로그 개편기 - 3. SCSS 입히기","excerpt":"원래 내 블로그는 JS-in-CSS 스타일 방식을 사용하고 있었다. 그 이유는 Material-UI 때문. Material-UI의 공식 예제에서 대놓고 JS-in-CSS 방식으로 설명하기 때문에, React 기초 수준이였던 난 당연히 이렇게 해야하는 줄 알고 있었다. 하지만 개발을 거듭하며, 그 중 몇몇은 복잡한 스타일을 강요받기도 하며 점점 스타일 구문이 비대해지는 컴포넌트가 생겨나기 시작했다. 이에 따라 JS-in-CSS의 단점이 점점 대두되기 시작했다. 대표적인 문제점으로 FOCU(Flash Of Unstyled Content). 스타일 렌더링에 시간이 소요되어, 사용자가 렌더링 이전의 페이지를 보게 되는 현상이다. 내 페이지의 경우 약 1초가 조금 안 되게 FOUC가 발생했는데, 사용자 경험을 극도로 해치는 일이였다. 블로그 개편을 마음먹게 된 가장 큰 이유 역시 이 FOCU 현상 때문이였으며, 관련 정보 조사 결과 CSS-in-CSS의 성능이 월등히 뛰어나다는 점을 확인했다.","coverImage":"https://user-images.githubusercontent.com/50317129/134931033-89954c3d-5e00-4b3b-85aa-54a1dfa29e46.png","date":"2021-09-24T13:17:24","type":"posts","category":"NextJS","tag":["NextJS","React","SCSS","CSS"],"group":"블로그 개편기","comment":true,"publish":true},"name":"2021-09-24-nextjs-reorganization-3.md","url":["2021-09-24-nextjs-reorganization-3","2021","09","24","nextjs-reorganization-3"]},"group":[{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 12. 마치며","excerpt":"그 동안 만들어 놓은건 많은데, 정작 정리같은 건 해두지 않았었다. GitHub를 활용하지 않기도 했고, 블로그도 딱히 운영하지 않고 있었으니.. 개인 서버도 샀겠다. 나름의 개발 포트폴리오를 위해 시험삼아 만든 프로젝트다. 개발부터 정리까지 차근차근 작성한 프로젝트는 이게 처음이 아닌가 싶다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-25T22:41:21","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-25-oauth2-java-server-12.md","url":["2021-10-25-oauth2-java-server-12","2021","10","25","oauth2-java-server-12"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 11. OAuth 서비스 심사 신청하기","excerpt":"OAuth 서비스를 등록하고 인증 서버까지 별도로 구축했지만, 이렇게 했다고 해서 그 즉시 사용 가능한 것은 아니다. 이 장에서는 OAuth 서비스 심사를 신청하여 OAuth 서비스를 온전히 사용할 수 있도록 한다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-25T22:41:21","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-25-oauth2-java-server-11.md","url":["2021-10-25-oauth2-java-server-11","2021","10","25","oauth2-java-server-11"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 10. 컨트롤러 구현하기","excerpt":"Jersey 라이브러리를 통해 요청을 받아 응답을 반환하는 컨트롤러를 구성해보자. Jersey에 대해 자세히 알아보고 싶다면 이전 글을 참고하자.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-25T02:24:17","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0","Jersey"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-25-oauth2-java-server-10.md","url":["2021-10-25-oauth2-java-server-10","2021","10","25","oauth2-java-server-10"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 9. Jersey로 RESTful API 서비스 제공하기","excerpt":"이 장에서는 Jersey를 활용하여 RESTful API 서비스를 제공하는 방법에 대해 다룬다. 이 프로젝트는 Jersey를 통해 요청을 받아 응답하므로, 컨트롤러를 구성하기 이전에 Jersey에 대해 잠깐 다루고 넘어간다. 통상 JAVA 서버를 구축하는데 Spring 프레임워크를 많이 사용할 것이다. 그럼에도 굳이 Jersey를 선택하는 이유는 일단 내가 Spring을 잘 모른다. 그것도 그거지만, Spring에 비해 규모가 작고 설정이 간단해서 온전히 RESTful 서버를 구축하는데 집중할 수 있다. Spring 설정의 악랄함은 고사하고, 이 프로젝트의 특성 상 복잡한 로직이나 다채로운 기능을 요구하지 않는다. Spring의 방대한 규모를 온전히 쓰지 못 하므로 배보다 배꼽이 더 크다는 뜻이다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-25T00:12:58","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0","Jersey"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-25-oauth2-java-server-9.md","url":["2021-10-25-oauth2-java-server-9","2021","10","25","oauth2-java-server-9"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 8. 프로세스 구현하기","excerpt":"4장부터 7장까지 진행하며 각 플랫폼의 인증 모듈을 구현했다. 이 장에서는 모듈을 사용하는 주체인 프로세스를 구현한다. 프로세스는 HTTP 메소드에 따라 구분하여 관리한다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-24T23:58:10","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0"],"group":"OAuth2.0 인증서버 구축기","comment":"trueㄴ","publish":true},"name":"2021-10-24-oauth2-java-server-8.md","url":["2021-10-24-oauth2-java-server-8","2021","10","24","oauth2-java-server-8"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 7. GitHub OAuth 서비스 신청 및 모듈 구현하기","excerpt":"마지막 플랫폼으로, GitHub에 OAuth 서비스를 신청하고 인증 모듈을 구현한다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-23T05:08:46","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0","scribeJAVA"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-23-oauth2-java-server-7.md","url":["2021-10-23-oauth2-java-server-7","2021","10","23","oauth2-java-server-7"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 6. KAKAO OAuth 서비스 신청 및 모듈 구현하기","excerpt":"세 번째 플랫폼으로, KAKAO에 OAuth 서비스를 신청하고 인증 모듈을 구현한다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-23T03:51:04","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0","scribeJAVA"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-23-oauth2-java-server-6.md","url":["2021-10-23-oauth2-java-server-6","2021","10","23","oauth2-java-server-6"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 5. Google OAuth 서비스 신청 및 모듈 구현하기","excerpt":"두 번째 플랫폼으로, Google에 OAuth 서비스를 신청하고 인증 모듈을 구현한다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-23T01:51:53","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0","scribeJAVA"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-23-oauth2-java-server-5.md","url":["2021-10-23-oauth2-java-server-5","2021","10","23","oauth2-java-server-5"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 4. NAVER OAuth 서비스 신청 및 모듈 구현하기","excerpt":"첫 번째 플랫폼으로, NAVER에 OAuth 서비스를 신청하고 인증 모듈을 구현한다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-22T22:25:16","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0","scribeJAVA"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-22-oauth2-java-server-4.md","url":["2021-10-22-oauth2-java-server-4","2021","10","22","oauth2-java-server-4"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 3. scribeJAVA로 OAuth2.0 인증 모듈 구현하기","excerpt":"OAuth 라이브러리인 scribeJAVA를 통해 인증 모듈을 구현해보자.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-20T01:26:40","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0","Jersey"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-20-oauth2-java-server-3.md","url":["2021-10-20-oauth2-java-server-3","2021","10","20","oauth2-java-server-3"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 2. 인증서버 설계하기","excerpt":"OAuth2.0 프로토콜에 대한 사전 지식도 얻었으니, 이를 통해 인증서버를 직접 구축해보자. Frontend, Backend 부분으로 나누어 웹 페이지를 통해 소셜 로그인을 수행하고, 직접 구현한 인증서버에서 이를 처리하는 시스템 일체를 구축하는 것이 궁극적인 목표다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-14T22:12:25","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-14-oauth2-java-server-2.md","url":["2021-10-14-oauth2-java-server-2","2021","10","14","oauth2-java-server-2"]},{"header":{"title":"[OAuth2.0] ScribeJAVA로 OAuth2.0 인증서버 구축하기 - 1. OAuth2.0이란?","excerpt":"사이트를 돌아다니다보면 로그인이 필요한 사이트를 심심치않게 만나볼 수 있다. 그리고 이런 사이트들은 대부분 \"네이버로 로그인하기\"와 같은 플랫폼 로그인을 제공한다. 사이트 뿐만 아니라 근래 들어 출시되는 앱 역시 대부분 플랫폼을 통한 인증 서비스를 제공한다. 이를 활용하면 매우 간단한 절차를 통해 회원가입 또는 로그인을 수행할 수 있게 된다. 이러한 서비스는 네이버 뿐만 아니라 Google, 카카오 등 어느정도 규모있는 플랫폼의 대부분은 이러한 \"플랫폼으로 로그인하기\"와 같은 기능을 제공한다. 이렇게 플랫폼의 정보를 활용하여 타 사이트에서 인증을 수행하는 것을 OAuth 프로토콜이라 한다.","coverImage":"https://user-images.githubusercontent.com/50317129/137171016-99af1db1-a346-4def-9329-6072b927bdc0.png","date":"2021-10-14T00:56:31","type":"posts","category":"JAVA","tag":["JAVA","OAuth2.0"],"group":"OAuth2.0 인증서버 구축기","comment":true,"publish":true},"name":"2021-10-14-oauth2-java-server-1.md","url":["2021-10-14-oauth2-java-server-1","2021","10","14","oauth2-java-server-1"]}]}},"__N_SSG":true}