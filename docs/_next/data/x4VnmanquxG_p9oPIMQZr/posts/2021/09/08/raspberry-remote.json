{"pageProps":{"page":{"type":"posts","prev":{"header":{"title":"[라즈베리파이 4] Let's Ecrypt로 Ubuntu 서버에 HTTPS 통신 제공하기","excerpt":"이전 장에서 Google Domains를 통해 dev 도메인을 발급받았다. 이 블로그의 주소는 실제로 구입한 https://blog.itcode.dev 도메인이 적용되어있다. dev 도메인은 강화된 보안정책이 적용되어있다. 해당 도메인으로의 모든 HTTP 통신은 반드시 HTTPS 보안 통신으로만 제공된다. 네트워크 계층에서 https 프로토콜로 라우팅하므로 좋든 싫든 HTTPS 서비스를 제공해야만 한다.","coverImage":"https://user-images.githubusercontent.com/50317129/131238727-666f2aaa-d759-4f62-af73-3856086da73d.png","date":"2021-09-06T16:50:40","type":"posts","category":"RaspberryPi","tag":["라즈베리파이","Ubuntu","Tomcat(톰캣)","SSL"],"comment":true,"publish":true},"name":"2021-09-06-raspberry-ssl-domain.md","content":"\r\n# 개요\r\n\r\n이전 장에서 Google Domains를 통해 `dev` 도메인을 발급받았다. 이 블로그의 주소는 실제로 구입한 https://blog.itcode.dev 도메인이 적용되어있다.\r\n\r\n`dev` 도메인은 강화된 보안정책이 적용되어있다. 해당 도메인으로의 모든 HTTP 통신은 반드시 HTTPS 보안 통신으로만 제공된다. 네트워크 계층에서 https 프로토콜로 라우팅하므로 좋든 싫든 HTTPS 서비스를 제공해야만 한다.\r\n\r\n<br />\r\n\r\n이 장에서는 Let's Encrypt로 SSL 인증서를 발급받아 라즈베이파이서버의 Tomcat에 적용한다. 기존의 1:1 도메인 매칭 SSL이 아니라, 여러 서브도메인에 전부 대응 가능한 와일드카드 인증서를 받을 것이다.\r\n\r\n> <b class=\"teal-600\">와일드카드(Wildcard) 인증서?</b>  \r\n> 프로그래밍에서의 <span class=\"primary\">와일드카드</span>란 무작위 대상의 허용이란 의미를 가진다. 도메인과 1:1 매칭되는 기존의 인증서와 달리, 와일드카드 인증서는 주체가 `*.example.com`로 표기되며, 모든 서브도메인에 적용이 가능하다.\r\n\r\n# Cerbot으로 SSL 인증서 발급하기\r\n\r\nUbuntu 서버에서 SSL 인증서를 발급받아보자. 일반적인 SSL 인증서는 인증 과정에서 웹 서버에 특정 파일을 배포한 뒤, 인증 서버에서 해당 파일의 접근 및 유효성 검증을 통해 도메인의 소유권을 확인한다.  \r\n하지만 와일드카드 인증서는 여러 서브도메인에 전부 적용되는 특별한 인증서라 위의 인증방식을 사용하지 않는다. 위의 인증방식은 하나의 도메인의 소유권만 보증하기 때문. <span class=\"orange-600\">와일드카드 인증서는 DNS 레코드를 통해 소유권을 인증</span>한다. DNS 레코드는 도메인의 소유권자만 설정 가능하기 때문.\r\n\r\n만약, 어떠한 이유로든 도메인의 DNS 설정을 변경할 수 없다면 와일드카드 인증서를 발급받을 수 없다.\r\n\r\n## 어? 전 윈도우로 하고싶은데....\r\n\r\nDNS 레코드 인증으로 진행하기 때문에 Tomcat에 파일을 배포할 필요가 없어서 아무데서나 진행해도 상관 없다.\r\n\r\nWindows 환경에서 인증서를 발급받는 방법은 이전에 작성한 게시물 [[SSL] Windows 10에서 Let's Encrypt로 SSL 인증서 무료 발급받기](/posts/2021/08/19/lets-encrypt)을 참고하길 바란다.\r\n\r\n## 준비물\r\n\r\n* Ubuntu OS\r\n* DNS Record 설정 권한\r\n\r\n필자는 Google Domains에서 도메인을 구입했으므로, Google Domains에서 DNS 설정을 관리할 수 있다. 만약, 가비아나 후이즈, 도레지 등 다른 도메인 사이트에서 도메인을 구매했다면 그 사이트에서 DNS 설정을 할 수 있으니 참고할 것.\r\n\r\n이 장에서는 Google Domains를 기준으로 진행한다.\r\n\r\n## 1. Certbot 설치하기\r\n\r\nUbuntu에서 Certbot을 설치한다.\r\n\r\n``` bash\r\nsudo apt-get install certbot\r\n```\r\n\r\n## 2. Certbot으로 인증 수행하기\r\n\r\nCertbot을 수행하여 인증서 발급을 수행한다.\r\n\r\n<p class=\"red-500\" align=\"center\">※ 아래의 itcode.dev 도메인은 예시로, 실제로 입력 시엔 직접 사용할 자신의 도메인을 입력한다.</p>\r\n\r\n``` bash\r\nsudo certbot certonly --manual --preferred-challenges dns --email psj2716@gmail.com -d *.itcode.dev\r\n```\r\n\r\n* `--manual` - 수동 설정\r\n* `--preferred-challenges` - 인증방식 지정\r\n* `--email` 소유주 이메일\r\n* `-d` - 도메인 지정\r\n\r\n위 명령어를 사용하면 별다른 명령어 입력 없이 즉시 인증을 수행할 수 있다. `-d`의 인자값으로 구입한 도메인을 입력하되, 서브도메인을 `*`로 지정함을 잊지말자.\r\n\r\n``` output\r\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\nPlease read the Terms of Service at\r\nhttps://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf. You must\r\nagree in order to register with the ACME server at\r\nhttps://acme-v02.api.letsencrypt.org/directory\r\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n(A)gree/(C)ancel:\r\n```\r\n\r\n<span class=\"pink-600\">서비스 이용 약관에 동의</span>해달라는 의미로, A를 입력하여 동의한다. 동의하지 않으면 SSL 발급을 진행할 수 없다.\r\n\r\n``` output\r\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\nWould you be willing to share your email address with the Electronic Frontier\r\nFoundation, a founding partner of the Let's Encrypt project and the non-profit\r\norganization that develops Certbot? We'd like to send you email about our work\r\nencrypting the web, EFF news, campaigns, and ways to support digital freedom.\r\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n(Y)es/(N)o:\r\n```\r\n\r\nCertbot 개발기관에서 웹 암호화, EFF 뉴스, 이벤트 등의 <span class=\"pink-600\">정보를 소유주의 이메일로 발송</span>하는데 동의하냐는 질문이다.\r\n\r\n좋으면 Y, 싫으면 N을 입력하자. <span class=\"red-400\">동의하지 않아도 SSL 발급엔 지장없다.</span>\r\n\r\n``` output\r\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\nNOTE: The IP of this machine will be publicly logged as having requested this\r\ncertificate. If you're running certbot in manual mode on a machine that is not\r\nyour server, please ensure you're okay with that.\r\n\r\nAre you OK with your IP being logged?\r\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n(Y)es/(N)o:\r\n```\r\n\r\n<span class=\"pink-600\">IP 수집에 동의</span>하냐는 질문으로, Y를 입력하여 동의한다. 동의하지 않으면 SSL 발급을 진행할 수 없다.\r\n\r\n``` output\r\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\nPlease deploy a DNS TXT record under the name\r\n_acme-challenge.itcode.dev with the following value:\r\n\r\n1sz-pJgM-3jL7mZacyByOO0S2lclAF0QmxtqujRuRHM\r\n\r\nBefore continuing, verify the record is deployed.\r\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\nPress Enter to Continue\r\n```\r\n\r\ncertbot에서 서브도메인명 `_acme-challenge`과 랜덤한 문자열을 제공한다. 제시한 도메인 `_acme-challenge.itcode.dev`의 DNS TXT Record에 제공한 값 `O3WQbIWv73aOzneZBu_4XAoE9ieZT1ZLdvbX7UPCkyk`을 할당하면 된다.\r\n\r\n도메인은 사용자가 입력한 값에 따라 달라지니 참고할 것.\r\n\r\n## 3. DNS TXT Record 설정\r\n\r\nDNS Record 종류엔 A, CNAME 등 여러 종류가 존재한다. 이 중 TXT 레코드에 값을 할당하면 된다.\r\n\r\nGoogle Domains의 DNS 설정에서 Record 하나를 추가하고, 타입을 TXT로 설정한다. 이후 certbot에서 제시한 값을 입력한다. 설정한 DNS 정보가 전파되기까지 수 분의 시간이 걸릴 수 있다. Google Domains의 경우 전파속도는 빠른 것 같다.\r\n\r\n``` bash\r\nnslookup -q=txt _acme-challenge.itcode.dev\r\n```\r\n\r\nTXT Record이므로 브라우저에서 해당 도메인에 접근해도 별다른 내용이 출력되지 않는다. `nslookup` 명령어를 통해 Record의 종류를 지정하여 조회해야한다.\r\n\r\n``` output\r\nServer:         127.0.0.53\r\nAddress:        127.0.0.53#53\r\n\r\nNon-authoritative answer:\r\n_acme-challenge.itcode.dev      text = \"1sz-pJgM-3jL7mZacyByOO0S2lclAF0QmxtqujRuRHM\"\r\n\r\nAuthoritative answers can be found from:\r\n```\r\n\r\n위 처럼 해당 도메인의 TXT Record에 입력한 문자열이 나오면 DNS 설정이 전파된 것으로, 인증을 진행할 수 있다. 만약, 값이 나오지 않는다면 시간을 두고 기다리자.\r\n\r\nEnter를 누르면 인증확인을 시도하는데, DNS 레코드 설정이 완료될 때까지 절대로 진행하지 말자.\r\n\r\n### 주의점\r\n\r\nDNS TXT Record가 미처 전파되지 않았음에도 불구하고 한국인 특성이 발동하여 certbot에 Enter를 눌러 인증확인 단계로 넘어가는 경우가 왕왕 발생한다.\r\n\r\n만약, TXT Record가 확인되지 않는다면, 관련 메시지와 함께 인증과정을 다시 시작한다. 문제는 이 때 <span class=\"red-600\">TXT Record에 등록할 문자열을 새로 갱신</span>한다. 즉, DNS TXT Record을 갱신된 값으로 재지정해야한다.\r\n\r\nDNS 전파가 느리다면 대기시간이 많이 늘어나버리니 주의할 것. 반드시 `nslookup` 명령어를 통해 DNS 적용 여부를 확인하자.\r\n\r\n## 4. 인증 확인 요청\r\n\r\nDNS TXT Record가 정상적으로 전파됐다면, 콘솔에서 Enter를 눌러 다음 단계로 넘어간다. certbot이 인증확인을 시도하며, 인증이 완료되면 <span class=\"blue-600\">인증서를 발급</span>해준다.\r\n\r\n``` bash\r\n# itcode.dev는 인증한 도메인 이름\r\ncd /etc/letsencrypt/live/itcode.dev\r\n```\r\n\r\n기본적으로 위 경로에 인증서가 생성된다. 마지막 폴더 `itcode.dev`는 도메인 이름이니, 각자가 입력한 도메인으로 변경하여 입력한다.\r\n\r\n* `cert.pem` - 도메인의 인증서\r\n* `chain.pem` - 발급기관의 인증서\r\n* `fullchain.pem` - 도메인과 발급기관의 통합 인증서\r\n* `privkey.pem` - 인증서의 개인키\r\n\r\nSSL은 도메인의 인증서 뿐만 아니라, 이를 발급해준 CA의 인증서까지 같이 검증한다. 도메인의 인증이 올바르더라도, 이를 발급해준 기관이 이상할 경우 해당 인증서 또한 믿을 수 없기 때문. 일종의 보증서라고 봐도 무방하다.\r\n\r\n일례로, 한국의 화폐 만원권이 만원의 가치를 가질 수 있는 이유는 한국은행이 이를 보증하기 때문. 반대로 핫한 가상화폐의 경우, 가상화폐의 가치를 보증해주는 기관이 없다. 때문에 가치가 수시로 변동하며, 언제든 그 가치와 기능을 잃을 수 있다.\r\n\r\n> <b class=\"teal-600\">fullchain.pem</b>의 존재의미  \r\n> 어차피 `cert.pem`과 `chain.pem`이 제공되는데, 둘의 통합인증서가 무슨 의미가 있냐고 생각할 수 있다. `fullchain.pem`은 두 인증서를 통합함으로써, `cert.pem`과 `chain.pem`의 매칭여부를 확인할 수 있다.\r\n\r\n# Tomcat에 SSL 인증서 적용하기\r\n\r\nTomcat Native 설치여부에 따라 적용방법이 조금씩 달라진다. SSL 인증서는 기본적으로 `pem` 확장자로 제공된다.\r\n\r\nTomcat Native는 `pem` 확장자 인증서를 바로 인식할 수 있지만, 일반적인 Tomcat은 `pem`을 인식할 수 없어 `jks` 등 다른 형태의 인증서로 변환해야한다.\r\n\r\n## Tomcat Native 설치\r\n\r\n``` bash\r\nsudo apt-get install libtcnative-1\r\n```\r\n\r\nUbuntu에선 위 라이브러리 설치를 통해 Tomcat Native를 적용할 수 있다.\r\n\r\n## Tomcat의 server.xml에 인증서 적용하기\r\n\r\n[[SSL] Tomcat에 SSL 적용하기](/posts/2021/08/20/apply-ssl#SSL-인증서%20적용하기) 게시글에서 자세한 내용을 확인할 수 있다.\r\n\r\n위 게시글의 방법대로 인증서를 적용하고 Tomcat을 재기동한 뒤 `https://itcode.dev`와 같이 HTTPS 프로토콜을 사용하여 접속을 시도하자. 반드시 접속 전에 HTTPS의 서비스 포트를 확인하자. Tomcat의 기본 HTTPS 포트는 8443이다.\r\n\r\nHTTPS 접속이 정상적이라면 성공이다. 인증서 정보 또한 확인할 수 있다.\r\n\r\n# 목표\r\n\r\n* <del class=\"grey-400\">라즈베리파이에 Ubuntu 서버를 구축한다.</del>\r\n* <del class=\"grey-400\">Tomcat을 구동하여 페이지를 호스팅한다.</del>\r\n* <del class=\"grey-400\">도메인을 입힌다.</del>\r\n* <del class=\"grey-400\">SSL 인증서를 발급하여 HTTPS 통신을 제공한다.</del>\r\n* SSH, RDP 등의 원격 통신환경을 구축한다.\r\n* MariaDB를 설치하여 DB 통신을 수행한다.","url":["2021-09-06-raspberry-ssl-domain","2021","09","06","raspberry-ssl-domain"]},"next":null},"group":[],"data":{"header":{"title":"[라즈베리파이 4] 원격 환경 구축하기 (SSH, RDP)","excerpt":"이제 얼추 라즈베리파이에 그럴듯한 웹서버 환경이 구축됐다. 하지만 라즈베리파이를 다루기 위해서 기기에 직접 모니터랑 키보드, 마우스를 연결해서 쓰긴 좀 번거롭다. 이 주제에서의 라즈베리파이는 어디까지나 서브로 운영되는 웹서버이므로, 메인 컴퓨터가 될 수 없다. 즉, 개발같은 대부분의 작업은 메인 컴퓨터에서 진행하고, 배포만 서버가 담당하는 방식이다. 이렇게 디바이스가 서로 나뉠 경우, 두 디바이스의 접근이 서로 원활해야한다. 한 마디로, 원격 환경이 필요하다. 이 장에서는 라즈베리파이에 원격 환경을 구축한다. SSH, RDP 통신을 구축함으로써 SSH 혹은 윈도우 PC 어디에서나 라즈베리파이에 접근할 수 있도록 구성한다.","coverImage":"https://user-images.githubusercontent.com/50317129/131238727-666f2aaa-d759-4f62-af73-3856086da73d.png","date":"2021-09-08T22:40:38","type":"posts","category":"RaspberryPi","tag":["라즈베리파이","Ubuntu","SSH","RDP"],"comment":true,"publish":true},"name":"2021-09-08-raspberry-remote.md","content":"<h1 id=\"개요\">개요 <a href=\"#개요\">🔗</a></h1><p>이제 얼추 라즈베리파이에 그럴듯한 웹서버 환경이 구축됐다. 하지만 라즈베리파이를 다루기 위해서 기기에 직접 모니터랑 키보드, 마우스를 연결해서 쓰긴 좀 번거롭다.</p>\n<p>이 주제에서의 라즈베리파이는 어디까지나 서브로 운영되는 웹서버이므로, 메인 컴퓨터가 될 수 없다. 즉, 개발같은 대부분의 작업은 메인 컴퓨터에서 진행하고, 배포만 서버가 담당하는 방식이다. 이렇게 디바이스가 서로 나뉠 경우, 두 디바이스의 접근이 서로 원활해야한다.</p>\n<p>한 마디로, 원격 환경이 필요하다. 이 장에서는 <span class=\"amber-600\">라즈베리파이에 원격 환경을 구축</span>한다. <span class=\"primary\">SSH</span>, <span class=\"primary\">RDP</span> 통신을 구축함으로써 SSH 혹은 윈도우 PC 어디에서나 라즈베리파이에 접근할 수 있도록 구성한다.</p>\n<h1 id=\"SSH-환경 구축하기\">SSH 환경 구축하기 <a href=\"#SSH-환경 구축하기\">🔗</a></h1><p><span class=\"primary\">SSH(Secure SHell)</span>는 네트워크에 연결된 PC에 로그인하여 원격 PC에서 해당 PC로 명령어를 실행하는 등의 Shell 통신을 수행하는 프로토콜이다.</p>\n<p>SSH 환경을 구축하여 원격으로 Ubuntu Shell에 접근할 수 있다. 이를 통해 원격으로 명령어를 입력하여 Ubuntu를 다룰 수 있다. Windows와 달리 Linux는 거의 모든 프로그램이 명령어 기반으로 동작하므로 어려움없이 Ubuntu를 다룰 수 있다.</p>\n<h2 id=\"준비물\">준비물 <a href=\"#준비물\">🔗</a></h2><ul>\n<li>openssh-server 패키지</li>\n<li>SSH(22) 서비스 포트 개방</li>\n</ul>\n<h2 id=\"OpenSSH-Server 패키지 설치\">OpenSSH Server 패키지 설치 <a href=\"#OpenSSH-Server 패키지 설치\">🔗</a></h2><p>OpenSSH 패키지는 크게 두 가지가 있는데, 하나는 OpenSSH Client, 다른 하나는 OpenSSH Server다.</p>\n<ul>\n<li><span class=\"teal-500\">OpenSSH Server</span> - 해당 OS에 SSH 서비스 환경을 구축함</li>\n<li><span class=\"teal-500\">OpenSSH Client</span> - 타 PC의 SSH 접속 기능을 추가함</li>\n</ul>\n<p>OpenSSH Server를 설치하여 Ubuntu에 SSH에 접근할 수 있도록 환경을 구성하자.</p>\n\n\t\t\t\t\t<div class=\"codeblock\">\n\t\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t\t<p>BASH</p>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t\t<pre class=\"language-bash\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> -y openssh-server</td></tr></tbody></table></pre>\n\t\t\t\t\t</div>\n\t\t\t\t<p>설치후 추가로 해야할 작업은 없다.</p>\n<h2 id=\"포트-개방\">포트 개방 <a href=\"#포트-개방\">🔗</a></h2><p>SSH가 서비스되는 포트를 개방한다. 기본적으로 22번 포트를 사용한다.</p>\n\n\t\t\t\t\t<div class=\"codeblock\">\n\t\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t\t<p>BASH</p>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t\t<pre class=\"language-bash\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token function\">sudo</span> ufw allow <span class=\"token number\">22</span></td></tr></tbody></table></pre>\n\t\t\t\t\t</div>\n\t\t\t\t<p>ufw를 통해 22번 포트를 개방한다.</p>\n<h2 id=\"SSH-접속하기\">SSH 접속하기 <a href=\"#SSH-접속하기\">🔗</a></h2><p>다른 PC에서 Ubuntu로 접속해보자. Windows 혹은 다른 Linux 기반 OS 등, SSH 프로토콜을 사용할 수 있는 모든 OS 및 프로그램이라면 가능하다.</p>\n\n\t\t\t\t\t<div class=\"codeblock\">\n\t\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t\t<p>BASH</p>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t\t<pre class=\"language-bash\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token function\">ssh</span> username@xxx.xxx.xxx.xxx</td></tr></tbody></table></pre>\n\t\t\t\t\t</div>\n\t\t\t\t<p>위 명령어를 통해 입력한 IP와 계정명으로 접근을 시도할 수 있다. IP는 라즈베리파이의 IP를, 계정명은 라즈베리파이의 계정명을 입력하면 된다. IP 대신 도메인을 입력해도 된다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/50317129/132518427-796d71c2-7331-4a99-8d7f-65eef29344bb.png\" alt=\"image\"></p>\n<p>접속정보가 유효하다면 비밀번호를 입력하여 로그인을 수행해야한다. 로그인이 완료되면 Shell에 명령어를 입력할 수 있으며, 이를 통해 원격지에서도 Ubuntu를 다룰 수 있게된다.</p>\n<h1 id=\"RDP-환경 구축하기\">RDP 환경 구축하기 <a href=\"#RDP-환경 구축하기\">🔗</a></h1><p class=\"red-500\" align=\"center\">※ Ubuntu에 UI가 존재하는 Ubuntu Desktop 혹은 이에 준하는 UI 패키지가 설치된 OS에만 적용 가능합니다.</p>\n\n<p>비록 Ubuntu가 대부분의 동작을 명령어로만 처리할 수 있긴 하지만, 간혹 몇몇 작업들은 반드시 UI가 필요하기도 하다. 이를테면 브라우저로 리눅스에서의 웹 페이지를 디버깅한다던가, 동영상을 본다던가. 혹시 Oracle DBMS를 설치하고자 한다면 반드시 UI를 사용할 수 있는 환경이 필요하다.</p>\n<p>심지어 우리가 설치한 Ubuntu도 UI가 있는데, 기껏 설치한 UI는 놀리고 SSH만 쓰기도 난감하다. 물론 라즈베리파이에 HDMI를 연결해서 쓰면 된다지만, 그 것도 번거롭긴 마찬가지다.</p>\n<p>내 경우 듀얼모니터를 사용하고 있어서 여건이 나쁘진 않다. 그러나 모니터가 하나라면 라즈베리파이를 연결한 순간 원래 PC는 사용이 제한되버린다.</p>\n<br />\n\n<p><img src=\"https://user-images.githubusercontent.com/50317129/132518566-fb8858ce-0b0c-4483-9a84-c3dc718f3e5f.png\" alt=\"image\"></p>\n<p>Windows에는 <span class=\"primary\">원격 데스크톱 연결</span>이라는 기능이 존재한다. Windows 간 원격이 가능한 기능으로써, 팀뷰어나 AnyDesk를 생각하면 된다. 일종의 내장 원격 프로그램.</p>\n<p>말로만 들어보면 왠지 Windows 간 통신만 지원할 것 같다. 필자도 그렇게 생각했었다. 하지만 Ubuntu는 내 생각 이상으로 잡다한게 많았다. xrdp 패키지를 설치하면 Windows의 RDP와 통신이 가능하다.</p>\n<h2 id=\"준비물\">준비물 <a href=\"#준비물\">🔗</a></h2><ul>\n<li>xrdp 패키지</li>\n<li>RDP(3389) 서비스 포트 개방</li>\n</ul>\n<h2 id=\"xrdp-패키지 설치\">xrdp 패키지 설치 <a href=\"#xrdp-패키지 설치\">🔗</a></h2>\n\t\t\t\t\t<div class=\"codeblock\">\n\t\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t\t<p>BASH</p>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t\t<pre class=\"language-bash\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> -y xrdp</td></tr></tbody></table></pre>\n\t\t\t\t\t</div>\n\t\t\t\t<p>위 명령어를 입력하여 설치한다.</p>\n<h2 id=\"포트-개방\">포트 개방 <a href=\"#포트-개방\">🔗</a></h2><p>RDP가 서비스되는 포트를 개방한다. 기본적으로 3389번 포트를 사용한다.</p>\n\n\t\t\t\t\t<div class=\"codeblock\">\n\t\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t\t<p>BASH</p>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t\t<pre class=\"language-bash\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token function\">sudo</span> ufw allow <span class=\"token number\">3389</span></td></tr></tbody></table></pre>\n\t\t\t\t\t</div>\n\t\t\t\t<p>ufw를 통해 3389번 포트를 개방한다.</p>\n<h2 id=\"RDP-접속하기\">RDP 접속하기 <a href=\"#RDP-접속하기\">🔗</a></h2><p>다른 Windows PC에서 Ubuntu로 접속해보자. 시작 프로그램에서 <span class=\"blue-400\">[원격 데스크톱 연결]</span>을 입력하여 프로그램을 실행하자.</p>\n<p><img src=\"https://user-images.githubusercontent.com/50317129/132518999-0293653c-ccef-4181-a084-71022f83fc47.png\" alt=\"image\"></p>\n<p>Ubuntu IP를 입력하여 연결한다. 정상적으로 연결되면 Ubuntu의 접속정보를 통해 로그인을 수행한다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/50317129/132519253-e4ec536d-d6a4-4fea-8905-50451a892a5b.png\" alt=\"image\"></p>\n<p>접속에 성공하면 원격으로 Ununtu UI를 다룰 수 있게 된다. 하지만 여러 기술적 한계와 효용성으로 인해 성능이 그리 좋지는 않은 것 같다. 끊김 현상이 좀 심한 것으로 보인다.</p>\n<h2 id=\"검은-화면만 나와요!\">검은 화면만 나와요! <a href=\"#검은-화면만 나와요!\">🔗</a></h2><p>분명히 정상적으로 잘 접속했는데, <span class=\"red-500\">검은화면만 뜨는 경우가 발생</span>하기도 한다.</p>\n<p>꽤 유명한 이슈로, 설정 몇 개만 수정하면 해결된다.</p>\n\n\t\t\t\t\t<div class=\"codeblock\">\n\t\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t\t<p>BASH</p>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t\t<pre class=\"language-bash\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token function\">sudo</span> <span class=\"token function\">vi</span> /etc/xrdp/startwm.sh</td></tr>\n<tr data-number=1><td class=\"line-number\" data-number=\"1\">1</td><td class=\"line-code\" data-number=1></td></tr>\n<tr data-number=2><td class=\"line-number\" data-number=\"2\">2</td><td class=\"line-code\" data-number=2><span class=\"token comment\" data-tag=\"new\"># 파일의 맨 아랫 줄에 아래 내용 추가</span></td></tr>\n<tr data-number=3><td class=\"line-number\" data-number=\"3\">3</td><td class=\"line-code\" data-number=3><span class=\"token builtin class-name\">unset</span> <span class=\"token environment constant\">DBUS_SESSION_BUS_ADDRESS</span></td></tr>\n<tr data-number=4><td class=\"line-number\" data-number=\"4\">4</td><td class=\"line-code\" data-number=4><span class=\"token builtin class-name\">unset</span> <span class=\"token environment constant\">XDG_RUNTIME_DIR</span></td></tr>\n<tr data-number=5><td class=\"line-number\" data-number=\"5\">5</td><td class=\"line-code\" data-number=5></td></tr>\n<tr data-number=6><td class=\"line-number\" data-number=\"6\">6</td><td class=\"line-code\" data-number=6><span class=\"token builtin class-name\">test</span> -x /etc/X11/Xsession <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">exec</span> /etc/X11/Xsession</td></tr>\n<tr data-number=7><td class=\"line-number\" data-number=\"7\">7</td><td class=\"line-code\" data-number=7><span class=\"token builtin class-name\">exec</span> /bin/sh /etc/X11/Xsession</td></tr>\n<tr data-number=8><td class=\"line-number\" data-number=\"8\">8</td><td class=\"line-code\" data-number=8></td></tr>\n<tr data-number=9><td class=\"line-number\" data-number=\"9\">9</td><td class=\"line-code\" data-number=9><span class=\"token comment\" data-tag=\"new\"># 파일 저장</span></td></tr>\n<tr data-number=10><td class=\"line-number\" data-number=\"10\">10</td><td class=\"line-code\" data-number=10>:wq</td></tr></tbody></table></pre>\n\t\t\t\t\t</div>\n\t\t\t\t<p><code class=\"inline-code\">/etc/xrdp/startwm.sh</code> 파일에 위 내용을 추가하고 저장하면 된다.</p>\n\n\t\t\t\t\t<div class=\"codeblock\">\n\t\t\t\t\t\t<div class=\"top\">\n\t\t\t\t\t\t\t<p>BASH</p>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button onclick=\"copyCode(this);\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-icon=\"clipboard\" class=\"i-clipboard\"><path fill=\"currentColor\" d=\"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm144 418c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h42v36c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-36h42c3.3 0 6 2.7 6 6z\"></path></svg></button>\n\n\t\t\t\t\t\t<pre class=\"language-bash\"><table><tbody><tr data-number=0><td class=\"line-number\" data-number=\"0\">0</td><td class=\"line-code\" data-number=0><span class=\"token function\">service</span> xrdp restart</td></tr></tbody></table></pre>\n\t\t\t\t\t</div>\n\t\t\t\t<p>이후 서비스를 재시작하고 시도하면 정상적으로 접속될 것이다.</p>\n<h1 id=\"목표\">목표 <a href=\"#목표\">🔗</a></h1><ul>\n<li><del class=\"grey-400\">라즈베리파이에 Ubuntu 서버를 구축한다.</del></li>\n<li><del class=\"grey-400\">Tomcat을 구동하여 페이지를 호스팅한다.</del></li>\n<li><del class=\"grey-400\">도메인을 입힌다.</del></li>\n<li><del class=\"grey-400\">SSL 인증서를 발급하여 HTTPS 통신을 제공한다.</del></li>\n<li><del class=\"grey-400\">SSH, RDP 등의 원격 통신환경을 구축한다.</del></li>\n<li>MariaDB를 설치하여 DB 통신을 수행한다.</li>\n</ul>\n<p>이로써 어디에서나 라즈베리파이의 Ubuntu에 접속하여 조작할 수 있다. Shell과 UI 둘 다 조작이 가능하므로 필요에 따라 원하는 방식으로 접근하면 될 것이다.</p>\n","url":["2021-09-08-raspberry-remote","2021","09","08","raspberry-remote"],"toc":[{"text":"개요","tag":"개요","depth":1},{"text":"SSH 환경 구축하기","tag":"SSH-환경 구축하기","depth":1},{"text":"준비물","tag":"준비물","depth":2},{"text":"OpenSSH Server 패키지 설치","tag":"OpenSSH-Server 패키지 설치","depth":2},{"text":"포트 개방","tag":"포트-개방","depth":2},{"text":"SSH 접속하기","tag":"SSH-접속하기","depth":2},{"text":"RDP 환경 구축하기","tag":"RDP-환경 구축하기","depth":1},{"text":"준비물","tag":"준비물","depth":2},{"text":"xrdp 패키지 설치","tag":"xrdp-패키지 설치","depth":2},{"text":"포트 개방","tag":"포트-개방","depth":2},{"text":"RDP 접속하기","tag":"RDP-접속하기","depth":2},{"text":"검은 화면만 나와요!","tag":"검은-화면만 나와요!","depth":2},{"text":"목표","tag":"목표","depth":1}]},"hash":"569bbd441fd"},"__N_SSG":true}