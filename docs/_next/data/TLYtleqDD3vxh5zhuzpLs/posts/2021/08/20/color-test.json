{"pageProps":{"header":{"title":"블로그 텍스트 색상 예시","excerpt":"색상 테스트","coverImage":"https://user-images.githubusercontent.com/50317129/130466968-83b176c7-2175-4740-85de-12914252d160.png","date":"2021-08-20T15:43:00","type":"posts","category":"잡담","tag":["개발 블로그"],"comment":true,"publish":true},"name":"2021-08-20-color-test.md","url":["2021-08-20-color-test","2021","08","20","color-test"],"toc":"<ul><li><a href=\"#빨간색\">빨간색</a></li><li><a href=\"#분홍색\">분홍색</a></li><li><a href=\"#보라색\">보라색</a></li><li><a href=\"#진한-보라색\">진한 보라색</a></li><li><a href=\"#남색\">남색</a></li><li><a href=\"#파란색\">파란색</a></li><li><a href=\"#밝은-파랑색\">밝은 파랑색</a></li><li><a href=\"#청록색\">청록색</a></li><li><a href=\"#암청색\">암청색</a></li><li><a href=\"#초록색\">초록색</a></li><li><a href=\"#연두색\">연두색</a></li><li><a href=\"#라임색\">라임색</a></li><li><a href=\"#노랑색\">노랑색</a></li><li><a href=\"#등색\">등색</a></li><li><a href=\"#주황색\">주황색</a></li><li><a href=\"#진한-주황색\">진한 주황색</a></li><li><a href=\"#갈색\">갈색</a></li><li><a href=\"#회색\">회색</a></li><li><a href=\"#푸른-회색\">푸른 회색</a></li></ul>","content":"<h1 id=\"빨간색\">빨간색 <a href=\"#빨간색\">🔗</a></h1><p class=\"red-50\">색상 테스트</p>\n<p class=\"red-100\">색상 테스트</p>\n<p class=\"red-200\">색상 테스트</p>\n<p class=\"red-300\">색상 테스트</p>\n<p class=\"red-400\">색상 테스트</p>\n<p class=\"red-500\">색상 테스트</p>\n<p class=\"red-600\">색상 테스트</p>\n<p class=\"red-700\">색상 테스트</p>\n<p class=\"red-800\">색상 테스트</p>\n<p class=\"red-900\">색상 테스트</p>\n<p class=\"red-A100\">색상 테스트</p>\n<p class=\"red-A200\">색상 테스트</p>\n<p class=\"red-A400\">색상 테스트</p>\n<p class=\"red-A700\">색상 테스트</p>\n\n<h1 id=\"분홍색\">분홍색 <a href=\"#분홍색\">🔗</a></h1><p class=\"pink-50\">색상 테스트</p>\n<p class=\"pink-100\">색상 테스트</p>\n<p class=\"pink-200\">색상 테스트</p>\n<p class=\"pink-300\">색상 테스트</p>\n<p class=\"pink-400\">색상 테스트</p>\n<p class=\"pink-500\">색상 테스트</p>\n<p class=\"pink-600\">색상 테스트</p>\n<p class=\"pink-700\">색상 테스트</p>\n<p class=\"pink-800\">색상 테스트</p>\n<p class=\"pink-900\">색상 테스트</p>\n<p class=\"pink-A100\">색상 테스트</p>\n<p class=\"pink-A200\">색상 테스트</p>\n<p class=\"pink-A400\">색상 테스트</p>\n<p class=\"pink-A700\">색상 테스트</p>\n\n<h1 id=\"보라색\">보라색 <a href=\"#보라색\">🔗</a></h1><p class=\"purple-50\">색상 테스트</p>\n<p class=\"purple-100\">색상 테스트</p>\n<p class=\"purple-200\">색상 테스트</p>\n<p class=\"purple-300\">색상 테스트</p>\n<p class=\"purple-400\">색상 테스트</p>\n<p class=\"purple-500\">색상 테스트</p>\n<p class=\"purple-600\">색상 테스트</p>\n<p class=\"purple-700\">색상 테스트</p>\n<p class=\"purple-800\">색상 테스트</p>\n<p class=\"purple-900\">색상 테스트</p>\n<p class=\"purple-A100\">색상 테스트</p>\n<p class=\"purple-A200\">색상 테스트</p>\n<p class=\"purple-A400\">색상 테스트</p>\n<p class=\"purple-A700\">색상 테스트</p>\n\n<h1 id=\"진한-보라색\">진한 보라색 <a href=\"#진한-보라색\">🔗</a></h1><p class=\"deepPurple-50\">색상 테스트</p>\n<p class=\"deepPurple-100\">색상 테스트</p>\n<p class=\"deepPurple-200\">색상 테스트</p>\n<p class=\"deepPurple-300\">색상 테스트</p>\n<p class=\"deepPurple-400\">색상 테스트</p>\n<p class=\"deepPurple-500\">색상 테스트</p>\n<p class=\"deepPurple-600\">색상 테스트</p>\n<p class=\"deepPurple-700\">색상 테스트</p>\n<p class=\"deepPurple-800\">색상 테스트</p>\n<p class=\"deepPurple-900\">색상 테스트</p>\n<p class=\"deepPurple-A100\">색상 테스트</p>\n<p class=\"deepPurple-A200\">색상 테스트</p>\n<p class=\"deepPurple-A400\">색상 테스트</p>\n<p class=\"deepPurple-A700\">색상 테스트</p>\n\n<h1 id=\"남색\">남색 <a href=\"#남색\">🔗</a></h1><p class=\"indigo-50\">색상 테스트</p>\n<p class=\"indigo-100\">색상 테스트</p>\n<p class=\"indigo-200\">색상 테스트</p>\n<p class=\"indigo-300\">색상 테스트</p>\n<p class=\"indigo-400\">색상 테스트</p>\n<p class=\"indigo-500\">색상 테스트</p>\n<p class=\"indigo-600\">색상 테스트</p>\n<p class=\"indigo-700\">색상 테스트</p>\n<p class=\"indigo-800\">색상 테스트</p>\n<p class=\"indigo-900\">색상 테스트</p>\n<p class=\"indigo-\">색상 테스트</p>\n<p class=\"indigo-\">색상 테스트</p>\n<p class=\"indigo-\">색상 테스트</p>\n<p class=\"indigo-\">색상 테스트</p>\n\n<h1 id=\"파란색\">파란색 <a href=\"#파란색\">🔗</a></h1><p class=\"blue-50\">색상 테스트</p>\n<p class=\"blue-100\">색상 테스트</p>\n<p class=\"blue-200\">색상 테스트</p>\n<p class=\"blue-300\">색상 테스트</p>\n<p class=\"blue-400\">색상 테스트</p>\n<p class=\"blue-500\">색상 테스트</p>\n<p class=\"blue-600\">색상 테스트</p>\n<p class=\"blue-700\">색상 테스트</p>\n<p class=\"blue-800\">색상 테스트</p>\n<p class=\"blue-900\">색상 테스트</p>\n<p class=\"blue-A100\">색상 테스트</p>\n<p class=\"blue-A200\">색상 테스트</p>\n<p class=\"blue-A400\">색상 테스트</p>\n<p class=\"blue-A700\">색상 테스트</p>\n\n<h1 id=\"밝은-파랑색\">밝은 파랑색 <a href=\"#밝은-파랑색\">🔗</a></h1><p class=\"lightBlue-50\">색상 테스트</p>\n<p class=\"lightBlue-100\">색상 테스트</p>\n<p class=\"lightBlue-200\">색상 테스트</p>\n<p class=\"lightBlue-300\">색상 테스트</p>\n<p class=\"lightBlue-400\">색상 테스트</p>\n<p class=\"lightBlue-500\">색상 테스트</p>\n<p class=\"lightBlue-600\">색상 테스트</p>\n<p class=\"lightBlue-700\">색상 테스트</p>\n<p class=\"lightBlue-800\">색상 테스트</p>\n<p class=\"lightBlue-900\">색상 테스트</p>\n<p class=\"lightBlue-A100\">색상 테스트</p>\n<p class=\"lightBlue-A200\">색상 테스트</p>\n<p class=\"lightBlue-A400\">색상 테스트</p>\n<p class=\"lightBlue-A700\">색상 테스트</p>\n\n<h1 id=\"청록색\">청록색 <a href=\"#청록색\">🔗</a></h1><p class=\"cyan-50\">색상 테스트</p>\n<p class=\"cyan-100\">색상 테스트</p>\n<p class=\"cyan-200\">색상 테스트</p>\n<p class=\"cyan-300\">색상 테스트</p>\n<p class=\"cyan-400\">색상 테스트</p>\n<p class=\"cyan-500\">색상 테스트</p>\n<p class=\"cyan-600\">색상 테스트</p>\n<p class=\"cyan-700\">색상 테스트</p>\n<p class=\"cyan-800\">색상 테스트</p>\n<p class=\"cyan-900\">색상 테스트</p>\n<p class=\"cyan-A100\">색상 테스트</p>\n<p class=\"cyan-A200\">색상 테스트</p>\n<p class=\"cyan-A400\">색상 테스트</p>\n<p class=\"cyan-A700\">색상 테스트</p>\n\n<h1 id=\"암청색\">암청색 <a href=\"#암청색\">🔗</a></h1><p class=\"teal-50\">색상 테스트</p>\n<p class=\"teal-100\">색상 테스트</p>\n<p class=\"teal-200\">색상 테스트</p>\n<p class=\"teal-300\">색상 테스트</p>\n<p class=\"teal-400\">색상 테스트</p>\n<p class=\"teal-500\">색상 테스트</p>\n<p class=\"teal-600\">색상 테스트</p>\n<p class=\"teal-700\">색상 테스트</p>\n<p class=\"teal-800\">색상 테스트</p>\n<p class=\"teal-900\">색상 테스트</p>\n<p class=\"teal-A100\">색상 테스트</p>\n<p class=\"teal-A200\">색상 테스트</p>\n<p class=\"teal-A400\">색상 테스트</p>\n<p class=\"teal-A700\">색상 테스트</p>\n\n<h1 id=\"초록색\">초록색 <a href=\"#초록색\">🔗</a></h1><p class=\"green-50\">색상 테스트</p>\n<p class=\"green-100\">색상 테스트</p>\n<p class=\"green-200\">색상 테스트</p>\n<p class=\"green-300\">색상 테스트</p>\n<p class=\"green-400\">색상 테스트</p>\n<p class=\"green-500\">색상 테스트</p>\n<p class=\"green-600\">색상 테스트</p>\n<p class=\"green-700\">색상 테스트</p>\n<p class=\"green-800\">색상 테스트</p>\n<p class=\"green-900\">색상 테스트</p>\n<p class=\"green-A100\">색상 테스트</p>\n<p class=\"green-A200\">색상 테스트</p>\n<p class=\"green-A400\">색상 테스트</p>\n<p class=\"green-A700\">색상 테스트</p>\n\n<h1 id=\"연두색\">연두색 <a href=\"#연두색\">🔗</a></h1><p class=\"lightGreen-50\">색상 테스트</p>\n<p class=\"lightGreen-100\">색상 테스트</p>\n<p class=\"lightGreen-200\">색상 테스트</p>\n<p class=\"lightGreen-300\">색상 테스트</p>\n<p class=\"lightGreen-400\">색상 테스트</p>\n<p class=\"lightGreen-500\">색상 테스트</p>\n<p class=\"lightGreen-600\">색상 테스트</p>\n<p class=\"lightGreen-700\">색상 테스트</p>\n<p class=\"lightGreen-800\">색상 테스트</p>\n<p class=\"lightGreen-900\">색상 테스트</p>\n<p class=\"lightGreen-A100\">색상 테스트</p>\n<p class=\"lightGreen-A200\">색상 테스트</p>\n<p class=\"lightGreen-A400\">색상 테스트</p>\n<p class=\"lightGreen-A700\">색상 테스트</p>\n\n<h1 id=\"라임색\">라임색 <a href=\"#라임색\">🔗</a></h1><p class=\"lime-50\">색상 테스트</p>\n<p class=\"lime-100\">색상 테스트</p>\n<p class=\"lime-200\">색상 테스트</p>\n<p class=\"lime-300\">색상 테스트</p>\n<p class=\"lime-400\">색상 테스트</p>\n<p class=\"lime-500\">색상 테스트</p>\n<p class=\"lime-600\">색상 테스트</p>\n<p class=\"lime-700\">색상 테스트</p>\n<p class=\"lime-800\">색상 테스트</p>\n<p class=\"lime-900\">색상 테스트</p>\n<p class=\"lime-A100\">색상 테스트</p>\n<p class=\"lime-A200\">색상 테스트</p>\n<p class=\"lime-A400\">색상 테스트</p>\n<p class=\"lime-A700\">색상 테스트</p>\n\n<h1 id=\"노랑색\">노랑색 <a href=\"#노랑색\">🔗</a></h1><p class=\"yellow-50\">색상 테스트</p>\n<p class=\"yellow-100\">색상 테스트</p>\n<p class=\"yellow-200\">색상 테스트</p>\n<p class=\"yellow-300\">색상 테스트</p>\n<p class=\"yellow-400\">색상 테스트</p>\n<p class=\"yellow-500\">색상 테스트</p>\n<p class=\"yellow-600\">색상 테스트</p>\n<p class=\"yellow-700\">색상 테스트</p>\n<p class=\"yellow-800\">색상 테스트</p>\n<p class=\"yellow-900\">색상 테스트</p>\n<p class=\"yellow-A100\">색상 테스트</p>\n<p class=\"yellow-A200\">색상 테스트</p>\n<p class=\"yellow-A400\">색상 테스트</p>\n<p class=\"yellow-A700\">색상 테스트</p>\n\n<h1 id=\"등색\">등색 <a href=\"#등색\">🔗</a></h1><p class=\"amber-50\">색상 테스트</p>\n<p class=\"amber-100\">색상 테스트</p>\n<p class=\"amber-200\">색상 테스트</p>\n<p class=\"amber-300\">색상 테스트</p>\n<p class=\"amber-400\">색상 테스트</p>\n<p class=\"amber-500\">색상 테스트</p>\n<p class=\"amber-600\">색상 테스트</p>\n<p class=\"amber-700\">색상 테스트</p>\n<p class=\"amber-800\">색상 테스트</p>\n<p class=\"amber-900\">색상 테스트</p>\n<p class=\"amber-A100\">색상 테스트</p>\n<p class=\"amber-A200\">색상 테스트</p>\n<p class=\"amber-A400\">색상 테스트</p>\n<p class=\"amber-A700\">색상 테스트</p>\n\n<h1 id=\"주황색\">주황색 <a href=\"#주황색\">🔗</a></h1><p class=\"orange-50\">색상 테스트</p>\n<p class=\"orange-100\">색상 테스트</p>\n<p class=\"orange-200\">색상 테스트</p>\n<p class=\"orange-300\">색상 테스트</p>\n<p class=\"orange-400\">색상 테스트</p>\n<p class=\"orange-500\">색상 테스트</p>\n<p class=\"orange-600\">색상 테스트</p>\n<p class=\"orange-700\">색상 테스트</p>\n<p class=\"orange-800\">색상 테스트</p>\n<p class=\"orange-900\">색상 테스트</p>\n<p class=\"orange-A100\">색상 테스트</p>\n<p class=\"orange-A200\">색상 테스트</p>\n<p class=\"orange-A400\">색상 테스트</p>\n<p class=\"orange-A700\">색상 테스트</p>\n\n<h1 id=\"진한-주황색\">진한 주황색 <a href=\"#진한-주황색\">🔗</a></h1><p class=\"deepOrange-50\">색상 테스트</p>\n<p class=\"deepOrange-100\">색상 테스트</p>\n<p class=\"deepOrange-200\">색상 테스트</p>\n<p class=\"deepOrange-300\">색상 테스트</p>\n<p class=\"deepOrange-400\">색상 테스트</p>\n<p class=\"deepOrange-500\">색상 테스트</p>\n<p class=\"deepOrange-600\">색상 테스트</p>\n<p class=\"deepOrange-700\">색상 테스트</p>\n<p class=\"deepOrange-800\">색상 테스트</p>\n<p class=\"deepOrange-900\">색상 테스트</p>\n<p class=\"deepOrange-A100\">색상 테스트</p>\n<p class=\"deepOrange-A200\">색상 테스트</p>\n<p class=\"deepOrange-A400\">색상 테스트</p>\n<p class=\"deepOrange-A700\">색상 테스트</p>\n\n<h1 id=\"갈색\">갈색 <a href=\"#갈색\">🔗</a></h1><p class=\"brown-50\">색상 테스트</p>\n<p class=\"brown-100\">색상 테스트</p>\n<p class=\"brown-200\">색상 테스트</p>\n<p class=\"brown-300\">색상 테스트</p>\n<p class=\"brown-400\">색상 테스트</p>\n<p class=\"brown-500\">색상 테스트</p>\n<p class=\"brown-600\">색상 테스트</p>\n<p class=\"brown-700\">색상 테스트</p>\n<p class=\"brown-800\">색상 테스트</p>\n<p class=\"brown-900\">색상 테스트</p>\n\n<h1 id=\"회색\">회색 <a href=\"#회색\">🔗</a></h1><p class=\"grey-50\">색상 테스트</p>\n<p class=\"grey-100\">색상 테스트</p>\n<p class=\"grey-200\">색상 테스트</p>\n<p class=\"grey-300\">색상 테스트</p>\n<p class=\"grey-400\">색상 테스트</p>\n<p class=\"grey-500\">색상 테스트</p>\n<p class=\"grey-600\">색상 테스트</p>\n<p class=\"grey-700\">색상 테스트</p>\n<p class=\"grey-800\">색상 테스트</p>\n<p class=\"grey-900\">색상 테스트</p>\n\n<h1 id=\"푸른-회색\">푸른 회색 <a href=\"#푸른-회색\">🔗</a></h1><p class=\"blueGrey-50\">색상 테스트</p>\n<p class=\"blueGrey-100\">색상 테스트</p>\n<p class=\"blueGrey-200\">색상 테스트</p>\n<p class=\"blueGrey-300\">색상 테스트</p>\n<p class=\"blueGrey-400\">색상 테스트</p>\n<p class=\"blueGrey-500\">색상 테스트</p>\n<p class=\"blueGrey-600\">색상 테스트</p>\n<p class=\"blueGrey-700\">색상 테스트</p>\n<p class=\"blueGrey-800\">색상 테스트</p>\n<p class=\"blueGrey-900\">색상 테스트</p>","meta":{"group":[{"header":{"title":"Tomcat 9 vs 10","excerpt":"필자는 Jersey 3 라이브러리를 활용하여 API 서버를 구성하고 있다. 코드를 작성하고 올바른 URL을 호출했음에도, 404 오류가 계속 출력됐다. 간단한 테스트 서블릿을 작성하고, 공식 문서와 아무리 비교를 해도 별다른 특이점을 찾을 수 없었다. 알고보니, Jersey 3는 Servlet 5.0을 지원하기 때문에 Servlet 5.0 스펙을 구현한 Tomcat 10 이상부터 구동이 가능하다는 것을 처음 알았다. 지금껏 톰캣의 버전을 크게 신경쓰지 않았으나, 이 계기로 Tomcat 9와 Tomcat 10에 큰 차이가 있다는 것을 깨달았다.","coverImage":"https://user-images.githubusercontent.com/50317129/145976356-6b5d1430-31c0-4c34-829e-6be8f747ab19.png","date":"2021-12-29T22:13:12+09:00","type":"posts","category":"알고리즘","tag":["JAVA(자바)","WAS","Tomcat(톰캣)"],"comment":true,"publish":true},"name":"2022-02-12-tomcat-9-and-10.md","url":["2022-02-12-tomcat-9-and-10","2022","02","12","tomcat-9-and-10"]},{"header":{"title":"[Ubuntu] Ubuntu 원격 프로토콜 보안 강화하기","excerpt":"SSH, SFTP와 같은 원격 프로토콜은 서버의 접근성을 향상시켜주지만, 서버의 보안성을 극도로 훼손한다. 공격자가 특정 서버의 IP를 알아냈을 경우, 해당 IP로 SSH 접속 시도를 할 수 있다. 굳이 IP가 아니더라도 해당 IP와 연결된 도메인을 통해서도 얼마든지 가능하다. 특정 도메인의 정보를 DNS서버에 요청하여 IP는 물론 소유자 정보까지 쉽게 취득할 수 있기 때문이다. 따라서 누군가가 내가 접속하려는 서버의 IP 혹은 도메인, SSH 서비스 포트, 계정정보를 알고 있다면 얼마든지 SSH 접속 시도를 하거나 서버에 피해를 줄 수 있다. 외부에 도메인을 공개하는 순간 국내는 물론 외국에서 여러 접속 시도가 들어오기도 한다. 특히 중국에서의 공격이 많이 들어오며, 인터넷에서 이와 관련된 경험담이나 피해사례를 쉽게 찾아볼 수 있다.","coverImage":"https://user-images.githubusercontent.com/50317129/133300948-2ee9b77a-1589-4afc-8489-fb402a13520f.png","date":"2021-09-15T01:53:21","type":"posts","category":"Ubuntu","tag":["Ubuntu","SSH","SFTP"],"comment":true,"publish":true},"name":"2021-09-15-increase-ubuntu-remote-security.md","url":["2021-09-15-increase-ubuntu-remote-security","2021","09","15","increase-ubuntu-remote-security"]},{"header":{"title":"[Ubuntu] ufw로 방화벽 포트 설정하기","excerpt":"모든 건물에는 입구가 존재한다. 일반적인 상황에서, 누구든지 해당 건물에 드나들기 위해선 좋든 싫든 입구를 통과해야한다. 이 입구라는 것이 또 마냥 열려있는 건 아니라서, 필요 시엔 개방되어있다가도 특정 시간에는 폐쇄되기도 한다. 심지어 어떤 곳은 까다롭기 그지없어서, 사람을 가려받기도 한다. 이를테면 보안구역이라던가, 금요일 밤의 클럽이라던가. PC통신도 이와 원리가 별반 다를 바 없다. 보기엔 그냥 막 통신하는 것 같아도, 저마다 할당받은 입구를 통해 PC에 드나든다. PC가 건물이라고 한다면, PC의 입구는 포트(PORT)라 할 수 있다.","coverImage":"https://user-images.githubusercontent.com/50317129/132039520-3efc64ec-28c2-499c-af29-dfe153f53852.png","date":"2021-09-04T01:26:20","type":"posts","category":"Ubuntu","tag":["Ubuntu","방화벽"],"comment":true,"publish":true},"name":"2021-09-04-firewall-with-ufw.md","url":["2021-09-04-firewall-with-ufw","2021","09","04","firewall-with-ufw"]},{"header":{"title":"블로그 텍스트 색상 예시","excerpt":"색상 테스트","coverImage":"https://user-images.githubusercontent.com/50317129/130466968-83b176c7-2175-4740-85de-12914252d160.png","date":"2021-08-20T15:43:00","type":"posts","category":"잡담","tag":["개발 블로그"],"comment":true,"publish":true},"name":"2021-08-20-color-test.md","url":["2021-08-20-color-test","2021","08","20","color-test"]},{"header":{"title":"블로그 개편기","excerpt":"이 블로그를 처음 개발한지가 한 5월 쯤으로 기억한다. 4월부터 접한 리액트에 흥미가 생겨 두서없이 만든게 시작이였으니, 결과물은 내 생각보다 훨씬 조잡하지 않았나 생각했다. 다행스럽게(?)도 블로그 또한 그런 내 믿음을 져버리기 싫었는지, 동작 과정에서 크고 작은 문제들을 보여주곤 했다. 동작 자체에 영향을 미칠 정도로 크리티컬한 문제는 아니였다만, 내 신경엔 영향을 미칠 정도로 거슬리는 부분이 몇 가지 있었다. 아무도 관심 없지만 이왕 만든거 이번 포스팅을 통해 블로그의 개선점을 정리해놓고자 한다.","coverImage":"https://user-images.githubusercontent.com/50317129/127343484-697c4678-edf3-49fa-8a4d-86775a804428.png","date":"2021-07-26T04:54:40","type":"posts","category":"React","tag":["React(리액트)","Next.js","개발 블로그","TypeScript","SCSS"],"comment":true,"publish":true},"name":"2021-07-26-brand-new.md","url":["2021-07-26-brand-new","2021","07","26","brand-new"]},{"header":{"title":"IntelliJ(인텔리제이) 시작 시 오류(java.net.BindException: Address already in use: bind)","excerpt":"","coverImage":"https://user-images.githubusercontent.com/50317129/121893356-d6d48480-cd58-11eb-80bb-d4611be3bd40.png","date":"2021-06-14T21:59:16","type":"posts","category":"JAVA","tag":["IntelliJ(인텔리제이)","Hyper-V","오류 해결책"],"comment":true,"publish":true},"name":"2021-06-14-intellij-error-onstart.md","url":["2021-06-14-intellij-error-onstart","2021","06","14","intellij-error-onstart"]},{"header":{"title":"[JAVA] split vs StringTokenizer","excerpt":"알고리즘을 풀다보면, 필연적으로 입력값 처리를 하게된다. 다양한 케이스에 대응하기 위해, 사용자의 값을 직접 입력받아 이를 처리하게 된다. 이 때, 우리는 십중팔구 이와 같은 상황이 발생한다. 데이터셋을 보내기 위해 데이터의 모음을 구분자(공백 혹은 쉼표)를 통해 하나의 문자열로 합쳐 전달한다.","coverImage":"https://www.textrazor.com/img/letters3.png","date":"2021-06-14T01:56:01","type":"posts","category":"JAVA","tag":["JAVA(자바)","String(문자열)","split","StringTokenizer"],"comment":true,"publish":true},"name":"2021-06-14-split-and-stringtokenizer.md","url":["2021-06-14-split-and-stringtokenizer","2021","06","14","split-and-stringtokenizer"]},{"header":{"title":"Compiler(컴파일러) & Interpreter(인터프리터)","excerpt":"천공카드 이래로 지금까지 컴퓨터 언어는 무수히 많은 발전을 거듭했다. 현재에 이르러서는 개발된 언어끼리의 시너지가 일어나 하루가 멀다하고 새로운 언어, 개념이 생성되고 있다. 하지만 그 아무리 새로운 언어로 구현한 소프트웨어라 하더라도, 결과적으로 프로그램의 실행 주체는 컴퓨터에게 있다. 우리가 아무리 새로운 언어니, 프레임워크니, 기술이니 지지고 볶고 하더라도 결국은 컴퓨터가 알아먹을 수 있어야 실행된다는 얘기다. 글로벌 시대답게 초등학생도 1개 이상의 외국어를 하는 마당에, 안타깝게도 우리 컴퓨터는 개발 이래로 초지일관 기계어만을 고집한다. 한글, 영어는 고사하고 우리가 개발할 때 사용하는 프로그래밍 언어라고 하는 대부분의 언어들. 심지어 C언어 보다도 저수준인 어셈블리어 조차 컴퓨터 입장에서는 외계어와 다를 바 없다.","coverImage":"https://user-images.githubusercontent.com/50317129/120613280-0a79f980-c491-11eb-81a9-15e63062db75.png","date":"2021-06-03T17:25:23","type":"posts","category":"CS","tag":["Compiler(컴파일러)","Interpreter(인터프리터)"],"comment":true,"publish":true},"name":"2021-06-03-compiler-interpreter.md","url":["2021-06-03-compiler-interpreter","2021","06","03","compiler-interpreter"]},{"header":{"title":"Unsupported major.minor version 에러 해결하기 (+Servlet 404 에러)","excerpt":"간혹 JAVA 프로그램을 실행하다보면 Unsupported major.minor version 52(숫자는 class 버전에 따라 다름) 오류가 출력되면서 정상적으로 동작하지 않는 오류가 발생한다. Unsupported major.minor version 오류는 직역하면 \"지원하지 않는 주/부 버전\"이다. JAVA 버전관련 오류라고 보면 된다.","coverImage":"https://user-images.githubusercontent.com/50317129/120079117-78b76880-c0ed-11eb-944d-c0d020228db3.png","date":"2021-05-30T02:16:35","type":"posts","category":"JAVA","tag":["JAVA","WAS","Tomcat(톰캣)","오류 해결책"],"comment":true,"publish":true},"name":"2021-05-30-unsupported-version-error.md","url":["2021-05-30-unsupported-version-error","2021","05","30","unsupported-version-error"]},{"header":{"title":"URI? URL? URN? 리소스 식별자 구분하기","excerpt":"우리가 인터넷 상에서 특정한 데이터에 접근할 때 URL이라는 것을 활용하여 접근한다. 원하는 자료의 URL을 얻으면, 브라우저 같은 HTTP 통신 프로그램에 해당 URL을 호출하여 응답을 얻는 것이다.","coverImage":"https://user-images.githubusercontent.com/50317129/120028437-a63ddc80-c02f-11eb-9d41-7c50d7002a42.png","date":"2021-05-29T03:30:17","type":"posts","category":"WEB","tag":["WEB(웹)","URI","URL","URN"],"comment":true,"publish":true},"name":"2021-05-29-uri-url-urn.md","url":["2021-05-29-uri-url-urn","2021","05","29","uri-url-urn"]},{"header":{"title":"Tomcat(톰캣) 현재 콘솔창에서 구동하기","excerpt":"오늘도 어느때와 다름없이 톰캣을 구동하는 A씨. 어제까지만 해도 잘 되던 톰캣이 무슨 오류가 있는지 구동 중에 바로 꺼져버린다. 꺼지기 직전의 순간 무슨 오류가 뜬 거 같은데..... 너무 빨라서 도통 확인할 수가 없다. 할 수 없이 일일이 로그를 찾아보며 오류를 수정하는 A씨. 건드린 것도 없는데, 왜 이러는 걸까?","coverImage":"https://user-images.githubusercontent.com/50317129/119212068-1b218b80-baf1-11eb-9a42-85945bceb7d9.png","date":"2021-05-26T16:32:16","type":"posts","category":"WAS","tag":["WAS","Tomcat(톰캣)","Console(콘솔)"],"comment":true,"publish":true},"name":"2021-05-26-tomcat-current-window.md","url":["2021-05-26-tomcat-current-window","2021","05","26","tomcat-current-window"]},{"header":{"title":"Tomcat(톰캣) 콘솔창 한글 인코딩 깨짐 현상 해결하기","excerpt":"톰캣을 구동하다보면 심심치않게 마주하는 오류(?)는 아니고 현상. Windows Console의 기본 인코딩과 Tomcat이 출력하는 인코딩이 서로 달라서 생긴다.","coverImage":"https://user-images.githubusercontent.com/50317129/119212068-1b218b80-baf1-11eb-9a42-85945bceb7d9.png","date":"2021-05-22T12:52:51","type":"posts","category":"WAS","tag":["WAS","Tomcat(톰캣)","Console(콘솔)"],"comment":true,"publish":true},"name":"2021-05-22-tomcat-encoding-euckr.md","url":["2021-05-22-tomcat-encoding-euckr","2021","05","22","tomcat-encoding-euckr"]},{"header":{"title":"도메인이란?","excerpt":"도메인을 이해하기 위해선, IP에 대해 짚고 넘어가야 한다. 인터넷에 연결된 모든 디바이스(컴퓨터, 스마트폰, 공유기 등)는 고유한 12자리 숫자로 구성된 IP주소를 가진다. IP를 유동성으로 나누면 크게 유동 IP, 고정 IP로 분류할 수 있다. 유동 IP: 임의의 시점마다 IP주소가 갱신되는 IP. 갱신 주기는 일정하지 않음. 대부분의 인터넷 회선에 적용됨. 고정 IP: 회선에 고정된 IP를 부여하며, 해당 회선의 IP는 갱신되지 않음. 부가서비스 형태로 제공되며, 쇼핑몰이나 회사 등 지속적으로 시스템을 운영해야 할 경우 적합함. 우리가 원하는 장소에 방문하기 위해 주소를 찾듯이, 특정 서버에서 운영하는 웹 사이트를 방문하기 위해선 해당 서버의 주소인 IP가 필요하다.","coverImage":"https://user-images.githubusercontent.com/50317129/120056028-b2985880-c074-11eb-8cc3-39f5f10a2c7f.png","date":"2021-05-22T12:52:51","type":"posts","category":"WEB","tag":["WEB(웹)","Domain(도메인)"],"comment":true,"publish":true},"name":"2021-05-22-about-domain.md","url":["2021-05-22-about-domain","2021","05","22","about-domain"]},{"header":{"title":"Jekyll에서 Next.js로","excerpt":"Jekyll에서 Next.js로의 블로그 이동기","coverImage":"https://user-images.githubusercontent.com/50317129/119211732-cf6de280-baee-11eb-8539-f2f5344fecb1.png","date":"2021-05-21T15:09:33","type":"posts","category":"잡담","tag":["React(리액트)","Next.js","개발 블로그","Jekyll"],"comment":true,"publish":true},"name":"2021-05-21-jekyll-to-nextjs.md","url":["2021-05-21-jekyll-to-nextjs","2021","05","21","jekyll-to-nextjs"]}],"next":{"header":{"title":"[SSL] Tomcat에 SSL 적용하기","excerpt":"SSL 인증서를 받았으니, 이를 적용해보자. 보통 Nginx 같은 웹서버나, Tomcat과 같은 WAS에 적용한다. 이 장에서는 Tomcat 9.0.50을 기준으로 설명한다.","coverImage":"https://user-images.githubusercontent.com/50317129/129755999-c5d6c474-d5c0-442a-b7c5-37b3cdf703a9.png","date":"2021-08-20T00:35:21","type":"posts","category":"WEB","tag":["CS","객체지향","SSL","Tomcat(톰캣)"],"group":"SSL","comment":true,"publish":true},"name":"2021-08-20-apply-ssl.md","url":["2021-08-20-apply-ssl","2021","08","20","apply-ssl"]},"prev":{"header":{"title":"[백준 / JAVA] 백준 알고리즘 1020번 디지털 카운터","excerpt":"지민이는 매 초마다 수가 증가하는 N자리의 디지털 카운터를 가지고 있다. 카운터에 나오는 수는 순환된다. 10^N-1에 이르면 다시 0부터 시작한다. 각 숫자는 다음과 같은 7개의 선분으로 이루어져 있다. 모든 인접한 두 개의 선분은 +로 이어져 있다. 예를 들어, 1은 두 개의 선분, 9는 다섯 개의 선분으로 이루어져 있다. 현재 카운터에 나와있는 숫자가 주어진다. 그럴 때, 현재 나와있는 숫자의 선분의 개수와 같은 숫자는 최소 몇 초가 지나야 나오는지 구하는 프로그램을 작성하시오. 1, 2, ..., 9, 그리고 0은 모두 2, 5, 5, 4, 5, 6, 3, 7, 5, 6개의 선분으로 이루어져 있고, 모든 수는 N자리를 채워야 하므로, N자리보다 작을 때는 앞에 0이 있을 수도 있다.","coverImage":"https://user-images.githubusercontent.com/50317129/120028591-d5ece480-c02f-11eb-88f0-e14fc647dd81.png","date":"2021-08-24T01:17:46","type":"posts","category":"알고리즘","tag":["백준","알고리즘","JAVA(자바)","Dynamic Programming(동적 프로그래밍)","PLATINUM","PLATINUM II"],"group":"백준 알고리즘","comment":true,"publish":true},"name":"2021-08-24-a1020.md","url":["2021-08-24-a1020","2021","08","24","a1020"]}}},"__N_SSG":true}