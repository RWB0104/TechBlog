{"pageProps":{"posts":[{"header":{"title":"[백준 / JAVA] 백준 알고리즘 1012번 유기농 배추","excerpt":"차세대 영농인 한나는 강원도 고랭지에서 유기농 배추를 재배하기로 하였다. 농약을 쓰지 않고 배추를 재배하려면 배추를 해충으로부터 보호하는 것이 중요하기 때문에, 한나는 해충 방지에 효과적인 배추흰지렁이를 구입하기로 결심한다. 이 지렁이는 배추근처에 서식하며 해충을 잡아 먹음으로써 배추를 보호한다. 특히, 어떤 배추에 배추흰지렁이가 한 마리라도 살고 있으면 이 지렁이는 인접한 다른 배추로 이동할 수 있어, 그 배추들 역시 해충으로부터 보호받을 수 있다.(한 배추의 상하좌우 네 방향에 다른 배추가 위치한 경우에 서로 인접해있다고 간주한다)","coverImage":"https://user-images.githubusercontent.com/50317129/120028591-d5ece480-c02f-11eb-88f0-e14fc647dd81.png","date":"2021-06-13T01:42:10","type":"posts","category":"알고리즘","tag":["백준","알고리즘","JAVA(자바)","DFS(깊이 우선 탐색)","BFS(너비 우선 탐색)","SILVER","SILVER II"],"group":"백준 알고리즘","comment":true,"publish":true},"name":"2021-06-13-a1012.md","content":"","url":["2021-06-13-a1012","2021","06","13","a1012"]},{"header":{"title":"[백준 / JAVA] 백준 알고리즘 1011번 Fly me to the Alpha Centauri","excerpt":"우현이는 어린 시절, 지구 외의 다른 행성에서도 인류들이 살아갈 수 있는 미래가 오리라 믿었다. 그리고 그가 지구라는 세상에 발을 내려 놓은 지 23년이 지난 지금, 세계 최연소 ASNA 우주 비행사가 되어 새로운 세계에 발을 내려 놓는 영광의 순간을 기다리고 있다. 그가 탑승하게 될 우주선은 Alpha Centauri라는 새로운 인류의 보금자리를 개척하기 위한 대규모 생활 유지 시스템을 탑재하고 있기 때문에, 그 크기와 질량이 엄청난 이유로 최신기술력을 총 동원하여 개발한 공간이동 장치를 탑재하였다. 하지만 이 공간이동 장치는 이동 거리를 급격하게 늘릴 경우 기계에 심각한 결함이 발생하는 단점이 있어서, 이전 작동시기에 k광년을 이동하였을 때는 k - 1 , k 혹은 k + 1 광년만을 다시 이동할 수 있다.","coverImage":"https://user-images.githubusercontent.com/50317129/120028591-d5ece480-c02f-11eb-88f0-e14fc647dd81.png","date":"2021-06-11T14:14:09","type":"posts","category":"알고리즘","tag":["백준","알고리즘","JAVA(자바)","SILVER","SILVER I"],"group":"백준 알고리즘","comment":true,"publish":true},"name":"2021-06-11-a1011.md","content":"","url":["2021-06-11-a1011","2021","06","11","a1011"]},{"header":{"title":"[백준 / JAVA] 백준 알고리즘 1010번 다리 놓기","excerpt":"재원이는 한 도시의 시장이 되었다. 이 도시에는 도시를 동쪽과 서쪽으로 나누는 큰 일직선 모양의 강이 흐르고 있다. 하지만 재원이는 다리가 없어서 시민들이 강을 건너는데 큰 불편을 겪고 있음을 알고 다리를 짓기로 결심하였다. 강 주변에서 다리를 짓기에 적합한 곳을 사이트라고 한다. 재원이는 강 주변을 면밀히 조사해 본 결과 강의 서쪽에는 N개의 사이트가 있고 동쪽에는 M개의 사이트가 있다는 것을 알았다. (N ≤ M)","coverImage":"https://user-images.githubusercontent.com/50317129/120028591-d5ece480-c02f-11eb-88f0-e14fc647dd81.png","date":"2021-06-09T14:14:09","type":"posts","category":"알고리즘","tag":["백준","알고리즘","JAVA(자바)","Combination(조합)","SILVER","SILVER V"],"group":"백준 알고리즘","comment":true,"publish":true},"name":"2021-06-09-a1010.md","content":"","url":["2021-06-09-a1010","2021","06","09","a1010"]},{"header":{"title":"[백준 / JAVA] 백준 알고리즘 1009번 분산처리","excerpt":"재용이는 최신 컴퓨터 10대를 가지고 있다. 어느 날 재용이는 많은 데이터를 처리해야 될 일이 생겨서 각 컴퓨터에 1번부터 10번까지의 번호를 부여하고, 10대의 컴퓨터가 다음과 같은 방법으로 데이터들을 처리하기로 하였다.","coverImage":"https://user-images.githubusercontent.com/50317129/120028591-d5ece480-c02f-11eb-88f0-e14fc647dd81.png","date":"2021-06-09T11:06:38","type":"posts","category":"알고리즘","tag":["백준","알고리즘","JAVA(자바)","수학","BRONZE","BRONZE IV"],"group":"백준 알고리즘","comment":true,"publish":true},"name":"2021-06-09-a1009.md","content":"","url":["2021-06-09-a1009","2021","06","09","a1009"]},{"header":{"title":"[백준 / JAVA] 백준 알고리즘 1008번 A / B","excerpt":"두 정수 A와 B를 입력받은 다음, A / B를 출력하는 프로그램을 작성하시오.","coverImage":"https://user-images.githubusercontent.com/50317129/120028591-d5ece480-c02f-11eb-88f0-e14fc647dd81.png","date":"2021-06-09T10:25:31","type":"posts","category":"알고리즘","tag":["백준","알고리즘","JAVA(자바)","사칙연산","BRONZE","BRONZE IV"],"group":"백준 알고리즘","comment":true,"publish":true},"name":"2021-06-09-a1008.md","content":"","url":["2021-06-09-a1008","2021","06","09","a1008"]},{"header":{"title":"[백준 / JAVA] 백준 알고리즘 1007번 벡터","excerpt":"평면 상에 N개의 점이 찍혀있고, 그 점을 집합 P라고 하자. 집합 P의 벡터 매칭은 벡터의 집합인데, 모든 벡터는 집합 P의 한 점에서 시작해서, 또 다른 점에서 끝나는 벡터의 집합이다. 또, P에 속하는 모든 점은 한 번씩 쓰여야 한다. V에 있는 벡터의 갯수는 P에 있는 점의 절반이다. 평면 상의 점이 주어졌을 때, 집합 P의 벡터 매칭에 있는 벡터의 합의 길이의 최솟값을 출력하는 프로그램을 작성하시오.","coverImage":"https://user-images.githubusercontent.com/50317129/120028591-d5ece480-c02f-11eb-88f0-e14fc647dd81.png","date":"2021-06-09T00:50:26","type":"posts","category":"알고리즘","tag":["백준","알고리즘","JAVA(자바)","Brute Force(무차별 대입 공격)","Combination(조합)","GOLD","GOLD II"],"group":"백준 알고리즘","comment":true,"publish":true},"name":"2021-06-09-a1007.md","content":"","url":["2021-06-09-a1007","2021","06","09","a1007"]},{"header":{"title":"[Jekyll] GitHub Pages를 이용해 나만의 블로그 만들기 - 4. Jekyll 쇼핑하기","excerpt":"GitHub는 각 프로젝트를 하나의 Repository로 관리한다. 생성한 Repository는 Git을 이용하여 관리할 수 있다. GitHub 페이지 자체로도 Repository 내부의 파일 생성, 수정, 삭제가 가능하지만 매우 번거로우므로 대부분 Git을 활용하는 것이 권장된다.","coverImage":"https://user-images.githubusercontent.com/50317129/90983201-582f1080-e5a7-11ea-970b-8d7d82cb2084.png","date":"2021-06-07T23:42:11","type":"posts","category":"Jekyll","tag":["GitHub Pages(깃허브 페이지)","Jekyll(지킬)","Blog(블로그)"],"group":"Jekyll Blog","comment":true,"publish":true},"name":"2021-06-07-jekyll-blog-jekyll-shopping.md","content":"","url":["2021-06-07-jekyll-blog-jekyll-shopping","2021","06","07","jekyll-blog-jekyll-shopping"]},{"header":{"title":"[Jekyll] GitHub Pages를 이용해 나만의 블로그 만들기 - 3. Git 설치하기","excerpt":"GitHub는 각 프로젝트를 하나의 Repository로 관리한다. 생성한 Repository는 Git을 이용하여 관리할 수 있다. GitHub 페이지 자체로도 Repository 내부의 파일 생성, 수정, 삭제가 가능하지만 매우 번거로우므로 대부분 Git을 활용하는 것이 권장된다.","coverImage":"https://user-images.githubusercontent.com/50317129/90983201-582f1080-e5a7-11ea-970b-8d7d82cb2084.png","date":"2021-06-06T23:42:11","type":"posts","category":"Jekyll","tag":["GitHub Pages(깃허브 페이지)","Jekyll(지킬)","Blog(블로그)","Git"],"group":"Jekyll Blog","comment":true,"publish":true},"name":"2021-06-06-jekyll-blog-prepare-git.md","content":"","url":["2021-06-06-jekyll-blog-prepare-git","2021","06","06","jekyll-blog-prepare-git"]},{"header":{"title":"[Jekyll] GitHub Pages를 이용해 나만의 블로그 만들기 - 2. GitHub와 친해지기","excerpt":"Jekyll은 GitHub를 통해 호스팅한다. 즉, Jekyll로 블로그를 만들기 위해선 GitHub를 조금이나마 알고 있어야 한다. 본문에서는 GitHub의 여러 기능은 제쳐두고, Jekyll 호스팅을 목적을 기준으로 설명한다.","coverImage":"https://user-images.githubusercontent.com/50317129/90983201-582f1080-e5a7-11ea-970b-8d7d82cb2084.png","date":"2021-06-06T23:29:32","type":"posts","category":"Jekyll","tag":["GitHub Pages(깃허브 페이지)","Jekyll(지킬)","Blog(블로그)","GitHub(깃허브)"],"group":"Jekyll Blog","comment":true,"publish":true},"name":"2021-06-06-jekyll-blog-github.md","content":"","url":["2021-06-06-jekyll-blog-github","2021","06","06","jekyll-blog-github"]},{"header":{"title":"[Jekyll] GitHub Pages를 이용해 나만의 블로그 만들기 - 1. Jekyll이란?","excerpt":"대형 포탈이나 크고 작은 플랫폼을 통해 자신만의 블로그를 만들 수 있다. 이러한 플랫폼을 통한 블로그는 연동된 계정과 버튼 클릭 몇 번으로 만들 수 있을 정도로 쉽고 간편하다. 하지만 이와 같은 블로그는 페이지의 기본 프레임이 정해져있고, 자유로운 커스터마이징이 제한된 편이다. 자신만의 색이나 가치관을 담은 블로그를 만들기 위해선 소위 \"기성품\"이 아닌 방법을 찾아야하는데, 이는 곧 자신이 직접 웹 페이지를 제작하고 퍼블리싱, 호스팅까지 전반적인 웹 서비스 자체를 구축해야하는 큰 작업으로 이어진다. 어찌어찌 페이지를 제작한다 하더라도, CSS를 통한 디자인이나 JavaScript같은 부가기능은 프레임 제작 이상으로 어렵다. 여기까지는 어떻게 자력으로 했다고 하더라도, 호스팅은 돈이 든다. DB까지 연동한다면 금액은 더욱 커지게 된다. 내가 원한건 단순한 블로그였는데.","coverImage":"https://user-images.githubusercontent.com/50317129/90983201-582f1080-e5a7-11ea-970b-8d7d82cb2084.png","date":"2021-06-06T23:18:25","type":"posts","category":"Jekyll","tag":["GitHub Pages(깃허브 페이지)","Jekyll(지킬)","Blog(블로그)"],"group":"Jekyll Blog","comment":true,"publish":true},"name":"2021-06-06-jekyll-blog-start.md","content":"","url":["2021-06-06-jekyll-blog-start","2021","06","06","jekyll-blog-start"]}],"categories":{"All":{"count":175,"flag":true},"GIS":{"count":9,"flag":true},"알고리즘":{"count":111,"flag":false},"NextJS":{"count":5,"flag":false},"JAVA":{"count":15,"flag":false},"Ubuntu":{"count":2,"flag":false},"RaspberryPi":{"count":7,"flag":false},"잡담":{"count":2,"flag":false},"WEB":{"count":7,"flag":false},"CS":{"count":10,"flag":false},"React":{"count":1,"flag":false},"Jekyll":{"count":4,"flag":false},"WAS":{"count":2,"flag":false}},"images":["https://user-images.githubusercontent.com/50317129/146303516-288b53c3-8648-43f5-9d2a-6ebef95f36f8.mp4","https://user-images.githubusercontent.com/50317129/146303553-d5ac3c36-c552-41b3-bd2e-15274fdee942.mp4","https://user-images.githubusercontent.com/50317129/146303559-67669141-ee25-466f-8668-f36f2c2142d6.mp4","https://user-images.githubusercontent.com/50317129/146303570-14a553b7-4172-4d91-90ee-55005188d5a0.mp4","https://user-images.githubusercontent.com/50317129/146303578-8bd99347-8167-4b49-975c-386bc8e4f74f.mp4","https://user-images.githubusercontent.com/50317129/146303602-2835aa08-33b3-47d2-941f-994a79f1cb61.mp4","https://user-images.githubusercontent.com/50317129/146303606-e5b84abe-760b-4480-b4c2-47e8aa15d76d.mp4","https://user-images.githubusercontent.com/50317129/146303611-54474d8c-f89a-49fd-a743-7ddd42d84c9c.mp4","https://user-images.githubusercontent.com/50317129/146303625-67b9afcc-88ed-4a64-8ba6-a27d0c5a210a.mp4","https://user-images.githubusercontent.com/50317129/146303633-791d39ac-1ad3-47e8-9169-0fb7c4b56087.mp4","https://user-images.githubusercontent.com/50317129/146303645-98f9902a-5380-425a-9204-5267b69fa4dc.mp4","https://user-images.githubusercontent.com/50317129/146303649-adda4ce7-e823-4012-ba0c-36546d763bcf.mp4","https://user-images.githubusercontent.com/50317129/146303652-0eb3a12a-34b4-494c-9ec9-4723dd5da903.mp4","https://user-images.githubusercontent.com/50317129/146303660-7d5c5856-4331-40fe-9fda-029ebe0bded7.mp4","https://user-images.githubusercontent.com/50317129/146303662-9a8b5bb4-f805-414b-a1f7-92ce16e95c90.mp4","https://user-images.githubusercontent.com/50317129/146303669-c3e5ece9-dba0-42ab-bd4c-a18ec7ce62d5.mp4","https://user-images.githubusercontent.com/50317129/146303672-6d735c23-01f8-44d3-9e37-69a25aea7fee.mp4","https://user-images.githubusercontent.com/50317129/146303693-918687df-9c4c-402e-a1f5-f9b33cc4facb.mp4","https://user-images.githubusercontent.com/50317129/146303695-be0ba3b8-7c67-4b62-a452-3354e10a84aa.mp4","https://user-images.githubusercontent.com/50317129/146303701-1a5dfaa5-dcae-49ef-a68a-606a3c03a7d7.mp4","https://user-images.githubusercontent.com/50317129/146303703-74af99cd-5f3f-4716-8c6b-587eefa35d46.mp4","https://user-images.githubusercontent.com/50317129/146303706-7a090198-7aaf-4370-b53c-60366725ba45.mp4","https://user-images.githubusercontent.com/50317129/146303723-889fd3d5-59ba-471c-92c9-98aa7cbc0b58.mp4","https://user-images.githubusercontent.com/50317129/146303728-702d8de1-86c5-403d-be3a-fea90cd4b318.mp4","https://user-images.githubusercontent.com/50317129/146303733-3eb6db41-1c23-475f-8a1d-a966d45e6554.mp4","https://user-images.githubusercontent.com/50317129/146303738-8c2df40b-88d4-4a77-ad31-5d14bf0ff672.mp4","https://user-images.githubusercontent.com/50317129/146303739-e3179069-7aa9-4393-8b2a-d729db7e054d.mp4","https://user-images.githubusercontent.com/50317129/146303754-ff55ef5c-4749-4eaa-996b-3646baa61c01.mp4","https://user-images.githubusercontent.com/50317129/146303759-2e0de415-0e4b-47e5-b26f-0cb3c76cdb68.mp4","https://user-images.githubusercontent.com/50317129/146303765-e8da715b-ff8d-4f63-bd69-3b4f8d68d6a8.mp4","https://user-images.githubusercontent.com/50317129/146303778-776e7c6c-3fda-48ce-91d7-727c61331fe5.mp4","https://user-images.githubusercontent.com/50317129/146303786-72faa7af-7cea-409f-9823-97fb79706747.mp4","https://user-images.githubusercontent.com/50317129/146303789-69bc1c89-44b3-4608-a369-23a055e647a9.mp4","https://user-images.githubusercontent.com/50317129/146303797-fb6f45ef-c4af-464c-8671-79b69608b833.mp4","https://user-images.githubusercontent.com/50317129/146303800-9b726d33-4cef-49c8-a097-aab9722533a7.mp4","https://user-images.githubusercontent.com/50317129/146303805-35387fd8-c6c9-492a-92c5-3bf5cc4bcfef.mp4","https://user-images.githubusercontent.com/50317129/146303814-2736dc05-ed07-4884-9cb9-d71df4df65e9.mp4","https://user-images.githubusercontent.com/50317129/146303822-fd81b3af-4e1a-4f26-8ab2-d24bb4641b3f.mp4","https://user-images.githubusercontent.com/50317129/146303828-3830c831-d959-4ecf-a9ef-9e46e3894a5c.mp4","https://user-images.githubusercontent.com/50317129/146303834-91c0efa7-61a5-42fb-bbbc-579a8ca0b29e.mp4"],"page":16,"total":18,"hash":"68edc3bd614"},"__N_SSG":true}