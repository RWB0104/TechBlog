{"pageProps":{"posts":[{"header":{"title":"[NextJS] 블로그 개편기 - 5. marked를 응용하여 코드블럭 디자인 개선하기","excerpt":"이전 장에서 marked를 활용하여 이 블로그만의 마크다운 변환기를 구현했다. 이 변환기를 활용하여 밋밋한 코드블럭을 좀 더 IDE 같게 개선해보자.","coverImage":"https://user-images.githubusercontent.com/50317129/134931033-89954c3d-5e00-4b3b-85aa-54a1dfa29e46.png","date":"2021-11-07T21:13:57","type":"posts","category":"NextJS","tag":["NextJS","React","Markdown","HTML","SCSS","TypeScript"],"group":"블로그 개편기","comment":true,"publish":true},"name":"2021-11-07-nextjs-reorganization-5.md","content":"","url":["2021-11-07-nextjs-reorganization-5","2021","11","07","nextjs-reorganization-5"]},{"header":{"title":"[NextJS] 블로그 개편기 - 4. marked를 활용한 마크다운 변환기 구현하기","excerpt":"정적 블로그는 마크다운을 적극적으로 사용한다. 일반적인 텍스트 기반에 매우 친숙하면서도 HTML과의 호환성 또한 매우 뛰어나기 때문이다. 기존의 블로그는 Remark, Rehype 플러그인을 사용했다. 여러 플러그인이 있어서 그냥저냥 사용하는덴 매우 편했지만, 사용자가 직접 변환과정을 커스터마이징하는 것이 매우 어려웠다. TOC, 코드블럭, 링크에 추가적인 기능, 디자인을 입히기 위해 HTML 태그를 입히고 싶은데, 관련 API가 없다보니 속절없이 주어진 태그만 그대로 사용할 수 밖에 없었다. 관련 정보를 찾아보던 중 marked 플러그인은 내가 원하는 요소를 충족시켜주는 것 같아, 블로그 개편 과정에서 마크다운 플러그인에도 많은 변화를 주었다. 이 장에서는 marked를 통해 마크다운을 HTML로 변환하는 과정에 대해 다룬다.","coverImage":"https://user-images.githubusercontent.com/50317129/134931033-89954c3d-5e00-4b3b-85aa-54a1dfa29e46.png","date":"2021-10-28T14:36:46","type":"posts","category":"NextJS","tag":["NextJS","React","Markdown"],"group":"블로그 개편기","comment":true,"publish":true},"name":"2021-10-28-nextjs-reorganization-4.md","content":"","url":["2021-10-28-nextjs-reorganization-4","2021","10","28","nextjs-reorganization-4"]},{"header":{"title":"[NextJS] 블로그 개편기 - 3. SCSS 입히기","excerpt":"원래 내 블로그는 JS-in-CSS 스타일 방식을 사용하고 있었다. 그 이유는 Material-UI 때문. Material-UI의 공식 예제에서 대놓고 JS-in-CSS 방식으로 설명하기 때문에, React 기초 수준이였던 난 당연히 이렇게 해야하는 줄 알고 있었다. 하지만 개발을 거듭하며, 그 중 몇몇은 복잡한 스타일을 강요받기도 하며 점점 스타일 구문이 비대해지는 컴포넌트가 생겨나기 시작했다. 이에 따라 JS-in-CSS의 단점이 점점 대두되기 시작했다. 대표적인 문제점으로 FOCU(Flash Of Unstyled Content). 스타일 렌더링에 시간이 소요되어, 사용자가 렌더링 이전의 페이지를 보게 되는 현상이다. 내 페이지의 경우 약 1초가 조금 안 되게 FOUC가 발생했는데, 사용자 경험을 극도로 해치는 일이였다. 블로그 개편을 마음먹게 된 가장 큰 이유 역시 이 FOCU 현상 때문이였으며, 관련 정보 조사 결과 CSS-in-CSS의 성능이 월등히 뛰어나다는 점을 확인했다.","coverImage":"https://user-images.githubusercontent.com/50317129/134931033-89954c3d-5e00-4b3b-85aa-54a1dfa29e46.png","date":"2021-09-24T13:17:24","type":"posts","category":"NextJS","tag":["NextJS","React","SCSS","CSS"],"group":"블로그 개편기","comment":true,"publish":true},"name":"2021-09-24-nextjs-reorganization-3.md","content":"","url":["2021-09-24-nextjs-reorganization-3","2021","09","24","nextjs-reorganization-3"]},{"header":{"title":"[NextJS] 블로그 개편기 - 2. Typescript 입히기","excerpt":"내가 JavaScript를 접하고 기본 개념 정도에 익숙해졌을 때, 개발 커뮤니티에서 전설처럼 들려오던 이야기를 듣게 되었다.","coverImage":"https://user-images.githubusercontent.com/50317129/134931033-89954c3d-5e00-4b3b-85aa-54a1dfa29e46.png","date":"2021-09-21T05:30:21","type":"posts","category":"NextJS","tag":["NextJS","React","TypeScript"],"group":"블로그 개편기","comment":true,"publish":true},"name":"2021-09-21-nextjs-reorganization-2.md","content":"","url":["2021-09-21-nextjs-reorganization-2","2021","09","21","nextjs-reorganization-2"]},{"header":{"title":"[NextJS] 블로그 개편기 - 1. Record One","excerpt":"인터넷으로 알음알음 React를 배워, 뭣도 모르고 호기롭게 블로그를 개발한지가 5월이였다. 그 때만 해도 이 재밌는 걸 가지고 뭐라도 만들어보고 싶다는 강한 열망에 사로잡혔었는데, 그 때 눈에 보였던 게 개발 블로그였다. 그 때 내가 사용하던 블로그는 Jekyll 기반의 GitHub 블로그였는데, 재밌어보여서 시작했다가 며칠 안 가 관둔지가 1년이 넘었었다. 블로그에 흥미가 떨어진 이유 중 하나가 뭐 좀 할라치면 남이 작성한 코드를 일일히 분석한다는 스트레스였다. 개발 블로그를 보자마자 떠오른 내 머릿속의 흐름은 대충 저랬다.","coverImage":"https://user-images.githubusercontent.com/50317129/134931033-89954c3d-5e00-4b3b-85aa-54a1dfa29e46.png","date":"2021-09-21T03:22:35","type":"posts","category":"NextJS","tag":["NextJS","React"],"group":"블로그 개편기","comment":true,"publish":true},"name":"2021-09-21-nextjs-reorganization-1.md","content":"","url":["2021-09-21-nextjs-reorganization-1","2021","09","21","nextjs-reorganization-1"]}],"categories":{"All":{"count":157,"flag":true},"알고리즘":{"count":102,"flag":true},"NextJS":{"count":5,"flag":false},"JAVA":{"count":15,"flag":false},"Ubuntu":{"count":2,"flag":false},"RaspberryPi":{"count":7,"flag":false},"잡담":{"count":2,"flag":false},"WEB":{"count":7,"flag":false},"CS":{"count":10,"flag":false},"React":{"count":1,"flag":false},"Jekyll":{"count":4,"flag":false},"WAS":{"count":2,"flag":false}},"images":["celeb1.webm","celeb10.webm","celeb11.webm","celeb12.webm","celeb13.webm","celeb14.webm","celeb15.webm","celeb16.webm","celeb17.webm","celeb2.webm","celeb3.webm","celeb4.webm","celeb5.webm","celeb6.webm","celeb7.webm","celeb8.webm","celeb9.webm","city1.webm","city10.webm","city11.webm","city12.webm","city13.webm","city2.webm","city3.webm","city4.webm","city5.webm","city6.webm","city7.webm","city8.webm","city9.webm","code1.webm","code2.webm","code3.webm","funk1.webm","funk2.webm","funk3.webm","funk4.webm","funk5.webm","funk6.webm","game1.webm"],"tag":"React","page":1,"total":1,"hash":"193d3b4c6f3"},"__N_SSG":true}