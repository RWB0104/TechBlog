{"pageProps":{"page":{"type":"posts","prev":{"title":"[Jekyll] GitHub Pages를 이용해 나만의 블로그 만들기 - 1. Jekyll이란?","excerpt":"초라기는 한국의 비밀국방기지(원타곤)를 습격하라는 임무를 받은 특급요원이다. 원타곤의 건물은 도넛 형태이며, 초라기는 효율적인 타격 포인트를 정하기 위해 구역을 아래와 같이 두 개의 원 모양으로 나누었다. (그림의 숫자는 각 구역의 번호이다.) 초라기는 각각 W명으로 구성된 특수소대를 다수 출동시켜 모든 구역에 침투시킬 예정이며, 각 구역 별로 적이 몇 명씩 배치되어 있는지는 초라기가 모두 알고 있다. 특수소대를 아래 조건에 따라 침투 시킬 수 있다.","coverImage":"https://user-images.githubusercontent.com/50317129/90983201-582f1080-e5a7-11ea-970b-8d7d82cb2084.png","date":"2021-06-07T22:42:02","type":"posts","category":"Jekyll","tag":["GitHub Pages(깃허브 페이지)","Jekyll(지킬)","Blog(블로그)"],"group":"Jekyll Blog","comment":true,"publish":true,"slug":"2021-06-07-jekyll-blog-start","content":"\r\n<p class=\"red-A400 center\">※ 본 게시물은 Jekyll 시절의 게시글을 토대로 복원한 게시물입니다.</p>\r\n\r\n# 개요\r\n\r\n대형 포탈이나 크고 작은 플랫폼을 통해 자신만의 블로그를 만들 수 있다. 이러한 플랫폼을 통한 블로그는 연동된 계정과 버튼 클릭 몇 번으로 만들 수 있을 정도로 쉽고 간편하다. 하지만 이와 같은 블로그는 페이지의 기본 프레임이 정해져있고, 자유로운 커스터마이징이 제한된 편이다. 자신만의 색이나 가치관을 담은 블로그를 만들기 위해선 소위 \"기성품\"이 아닌 방법을 찾아야하는데, 이는 곧 자신이 직접 <span class=\"green-A400\">웹 페이지를 제작하고 퍼블리싱, 호스팅까지 전반적인 웹 서비스 자체를 구축해야하는 큰 작업</span>으로 이어진다. 어찌어찌 페이지를 제작한다 하더라도, <span class=\"purple-A400\">CSS</span>를 통한 디자인이나 <span class=\"orange-A400\">JavaScript</span>같은 부가기능은 프레임 제작 이상으로 어렵다. 여기까지는 어떻게 자력으로 했다고 하더라도, 호스팅은 돈이 든다. DB까지 연동한다면 금액은 더욱 커지게 된다. 내가 원한건 단순한 블로그였는데.\r\n\r\n<p align=\"center\">\r\n\t<img src=\"https://user-images.githubusercontent.com/50317129/90330531-5d5cf000-dfe8-11ea-8a25-c5c89fa05a42.png\" width=\"820px\" />\r\n</p>\r\n\r\n<span class=\"primary\">GitHub Pages</span>를 활용하면 위와같은 문제의 대부분을 해결할 수 있다. <span class=\"primary\">GitHub</span>는 <span class=\"primary\">GitHub Pages</span> 프로젝트를 통해 특정한 이름을 가진 Repository 내부의 파일들을 <span class=\"primary\">github.io</span> 도메인으로 퍼블리싱해준다. 즉, 무료로 웹 호스팅을 제공받을 수 있는 셈이다. <span class=\"primary\">GitHub Pages</span>가 제시하는 방법에 따라 Repository를 만드는 것만으로도 유일하게 비용이 필요한 호스팅이라는 큰 산이 하나 사라진다.\r\n\r\n> Repository: GitHub에서 관리하는 프로젝트의 단위로, 각 계정마다 여러개의 Repository를 마음대로 생성, 수정, 삭제할 수 있다.\r\n\r\n안타깝게도 이는 호스팅과정을 라이트하게 만들어준 것일 뿐, 실제 페이지를 퍼블리싱하기 위해선 어쩔수 없이 웹 코딩 지식이 필요하다. 이를 위해 <span class=\"primary\">GitHub</span>는 <b class=\"primary\">Jekyll(지킬)</b>이라는 프레임워크를 통해 사용자들이 블로그 테마를 쉽게 만들고 이를 활용할 수 있는 환경을 제공하고 있다.\r\n\r\n필자는 어느정도 웹 관련 지식이 있음에도 불구하고 <span class=\"red-A400\">Ruby</span>와 <span class=\"primary\">Jekyll</span>이라는 다소 생소한 환경때문에 이를 이해하는데 다소 시간이 소요됐다. 이번 주제를 통해 웹에 있어서 나와 비슷하거나, 전무한 지식을 가진 사람들에게 내 블로그 구축기를 공유하고자 한다. 이 글은 <span class=\"primary\">Jekyll</span>이라는 개념을 처음 접하는 이들이 가급적 쉽게 이해함에 초점을 맞춘다.\r\n\r\n# Jekyll(지킬)이란?\r\n\r\n지킬 앤 하이드의 그 지킬 맞다. <span class=\"primary\">Jekyll</span>은 <span class=\"primary\">GitHub</span>의 설립자 중 하나인 Tom Preston-Werner가 <span class=\"red-A400\">Ruby</span>언어를 통해 개발한 프레임워크다. <span class=\"primary\">GitHub</span> 자체적으로 <span class=\"primary\">Jekyll</span> CMS(Contents Management System)을 내장하고 있어서 <span class=\"primary\">Jekyll</span> 호스팅에 매우 적합하다.(물론 굳이 Jekyll 기반이 아니여도 호스팅엔 문제가 없다.)\r\n\r\n웹을 나누는 구분 중에 정적(Static) 웹과 동적(Dynamic) 웹이 있다. <span class=\"primary\">Jekyll</span> 정적(Static) 웹 환경을 위한 프레임워크다.\r\n\r\n<p align=\"center\">\r\n\t<img src=\"https://user-images.githubusercontent.com/50317129/90335406-cdcb3780-e00f-11ea-87e2-b8c8ba8f576c.png\" width=\"820px\" />\r\n</p>\r\n\r\n**정적 웹**\r\n\r\n* 요청에 따라 미리 저장된 페이지를 응답\r\n* 웹 서버가 필요하지 않으므로, 서버 사양에 대한 영향이 적음\r\n* Back-end 코드가 없어 제작이 간편함\r\n* 속도가 빠름\r\n* 복잡한 로직이 필요 없는 소규모 사이트(블로그 등)에 적합함\r\n\r\n<p align=\"center\">\r\n\t<img src=\"https://user-images.githubusercontent.com/50317129/90335405-cb68dd80-e00f-11ea-9b08-7a9ec21c5eee.png\" width=\"820px\" />\r\n</p>\r\n\r\n**동적 웹**\r\n\r\n* 요청에 따라 웹 서버가 데이터를 가공하여 전달\r\n* DB연동을 통한 데이터 CRUD가 가능\r\n* 동일한 페이지도 요청에 따라 다양한 내용을 응답\r\n* 웹 서버 사양에 따라 속도 저하의 우려 있음\r\n* 복잡한 로직이 필요한 비즈니스 사이트(쇼핑몰 등)에 적합함\r\n\r\n우리가 사용하는 대부분의 사이트는 동적 웹의 형태가 대부분이다. 자체적인 회원가입 시스템, 간단한 게시판 등이 존재한다면 대부분 동적 웹으로 봐도 무방하다. 회원가입이나 게시판에는 반드시 DB가 필요하고, 이는 곧 DB와 사이트 간의 동작을 제어할 서버가 필요하다는 의미이기 때문. DB의 존재로 인해 실시간 데이터 CRUD가 가능하다. <span class=\"green-A400\">사용자가 페이지에서 무언가 의미있는 컨텐츠 활동을 할 수 있다면 동적 웹</span>이다.\r\n\r\n반대로, 정적 웹은 단순히 저장된 파일을 요청에 맞게 보여만 주므로, 사용자는 단순 사이트 관광객 그 이상 그 이하도 아니다. 블로그의 경우 로그인 같은 사용자 인증이 전혀 필요 없으며, 소유자외의 작성자가 필요하지 않기 때문에 정적 웹 형태로도 얼마든지 서비스를 제공할 수 있다. <span class=\"primary\">Jekyll</span>은 사용자가 작성한 코드를 하나의 웹 프로젝트 형태로 빌드한다. <span class=\"primary\">Jekyll</span>은 이러한 정적 웹 방식을 채택함으로써 빠른 속도를 확보하고 백엔드 코드에 대한 부담감을 없앴다.\r\n\r\n사용하기에 앞서, <span class=\"primary\">Jekyll</span>은 <span class=\"red-A400\">블로그 퍼블리싱의 주체가 자기 자신</span>에게 있다. 즉, 페이지 하나하나를 세세하게 컨트롤 할 수 있으며, 그래야만 한다. 이러한 자유도는 누군가에겐 강력한 장점이지만, 누군가에겐 없는게 나은 단점이 되기도 한다.\r\n\r\n<span class=\"green-A400\">Jekyll은 이런 분들께 적합해요!</span>\r\n\r\n* 판에 찍힌 블로그보다 자신만의 감각이 들어간 블로그를 만들고 싶은 사람\r\n* 웹에 대한 기초적인 지식이나 그에 준하는 센스를 가진 사람\r\n* 다양한 기능을 구현하고 싶은 사람\r\n* 위의 모든 사항을 재미로 느낄 수 있는 사람\r\n\r\n<span class=\"red-A400\">Jekyll은 이런 분들께 나빠요...</span>\r\n\r\n* 어찌됐든 안정적인 블로그를 얻고싶은 사람\r\n* 이런저런 난잡한 일에 시간을 투자하기 어려운 사람\r\n* 지금 당장 블로그를 시작하고 싶은 사람\r\n* 복잡한 것을 지양하는 사람\r\n\r\n<span class=\"primary\">Jekyll</span>은 하나부터 열까지 본인이 직접 구성해야한다. 그 흔한 댓글 기능조차 플러그인을 사용해서 구성해야한다. 즉, 통상 사이트 혹은 블로그라면 응당 존재해야할 기능조차 본인이 스스로 구성하지 않으면 안 된다. 원한다면 내 블로그에 무엇이든 구현할 수 있지만, 반대로 아무것도 구현하지 않은 단순한 페이지조각에 그친다. 기타 카테고리나 태그를 만들 때도 마찬가지. 이런걸 하면서 재미를 느끼지 못 한다면 개인적으로 별로 권하고 싶지 않다.\r\n\r\n물론 아름다운 테마를 적용할 수 있는건 독보적인 강점이지만, 이미 Tistory 정도만 가도 플랫폼 형태이면서 강력한 커스터마이징을 제공하기도 한다. 그럼에도 불구하고 <span class=\"primary\">Jekyll</span>을 선택한다면, <span class=\"primary\">Jekyll</span>은 당신에게 그 어떤 블로그에서도 접해보지 못한 색다른 경험을 제공해줄 것이다."},"next":-1},"group":[{"title":"[Jekyll] GitHub Pages를 이용해 나만의 블로그 만들기 - 1. Jekyll이란?","excerpt":"초라기는 한국의 비밀국방기지(원타곤)를 습격하라는 임무를 받은 특급요원이다. 원타곤의 건물은 도넛 형태이며, 초라기는 효율적인 타격 포인트를 정하기 위해 구역을 아래와 같이 두 개의 원 모양으로 나누었다. (그림의 숫자는 각 구역의 번호이다.) 초라기는 각각 W명으로 구성된 특수소대를 다수 출동시켜 모든 구역에 침투시킬 예정이며, 각 구역 별로 적이 몇 명씩 배치되어 있는지는 초라기가 모두 알고 있다. 특수소대를 아래 조건에 따라 침투 시킬 수 있다.","coverImage":"https://user-images.githubusercontent.com/50317129/90983201-582f1080-e5a7-11ea-970b-8d7d82cb2084.png","date":"2021-06-07T22:42:02","type":"posts","category":"Jekyll","tag":["GitHub Pages(깃허브 페이지)","Jekyll(지킬)","Blog(블로그)"],"group":"Jekyll Blog","comment":true,"publish":true,"slug":"2021-06-07-jekyll-blog-start","content":"\r\n<p class=\"red-A400 center\">※ 본 게시물은 Jekyll 시절의 게시글을 토대로 복원한 게시물입니다.</p>\r\n\r\n# 개요\r\n\r\n대형 포탈이나 크고 작은 플랫폼을 통해 자신만의 블로그를 만들 수 있다. 이러한 플랫폼을 통한 블로그는 연동된 계정과 버튼 클릭 몇 번으로 만들 수 있을 정도로 쉽고 간편하다. 하지만 이와 같은 블로그는 페이지의 기본 프레임이 정해져있고, 자유로운 커스터마이징이 제한된 편이다. 자신만의 색이나 가치관을 담은 블로그를 만들기 위해선 소위 \"기성품\"이 아닌 방법을 찾아야하는데, 이는 곧 자신이 직접 <span class=\"green-A400\">웹 페이지를 제작하고 퍼블리싱, 호스팅까지 전반적인 웹 서비스 자체를 구축해야하는 큰 작업</span>으로 이어진다. 어찌어찌 페이지를 제작한다 하더라도, <span class=\"purple-A400\">CSS</span>를 통한 디자인이나 <span class=\"orange-A400\">JavaScript</span>같은 부가기능은 프레임 제작 이상으로 어렵다. 여기까지는 어떻게 자력으로 했다고 하더라도, 호스팅은 돈이 든다. DB까지 연동한다면 금액은 더욱 커지게 된다. 내가 원한건 단순한 블로그였는데.\r\n\r\n<p align=\"center\">\r\n\t<img src=\"https://user-images.githubusercontent.com/50317129/90330531-5d5cf000-dfe8-11ea-8a25-c5c89fa05a42.png\" width=\"820px\" />\r\n</p>\r\n\r\n<span class=\"primary\">GitHub Pages</span>를 활용하면 위와같은 문제의 대부분을 해결할 수 있다. <span class=\"primary\">GitHub</span>는 <span class=\"primary\">GitHub Pages</span> 프로젝트를 통해 특정한 이름을 가진 Repository 내부의 파일들을 <span class=\"primary\">github.io</span> 도메인으로 퍼블리싱해준다. 즉, 무료로 웹 호스팅을 제공받을 수 있는 셈이다. <span class=\"primary\">GitHub Pages</span>가 제시하는 방법에 따라 Repository를 만드는 것만으로도 유일하게 비용이 필요한 호스팅이라는 큰 산이 하나 사라진다.\r\n\r\n> Repository: GitHub에서 관리하는 프로젝트의 단위로, 각 계정마다 여러개의 Repository를 마음대로 생성, 수정, 삭제할 수 있다.\r\n\r\n안타깝게도 이는 호스팅과정을 라이트하게 만들어준 것일 뿐, 실제 페이지를 퍼블리싱하기 위해선 어쩔수 없이 웹 코딩 지식이 필요하다. 이를 위해 <span class=\"primary\">GitHub</span>는 <b class=\"primary\">Jekyll(지킬)</b>이라는 프레임워크를 통해 사용자들이 블로그 테마를 쉽게 만들고 이를 활용할 수 있는 환경을 제공하고 있다.\r\n\r\n필자는 어느정도 웹 관련 지식이 있음에도 불구하고 <span class=\"red-A400\">Ruby</span>와 <span class=\"primary\">Jekyll</span>이라는 다소 생소한 환경때문에 이를 이해하는데 다소 시간이 소요됐다. 이번 주제를 통해 웹에 있어서 나와 비슷하거나, 전무한 지식을 가진 사람들에게 내 블로그 구축기를 공유하고자 한다. 이 글은 <span class=\"primary\">Jekyll</span>이라는 개념을 처음 접하는 이들이 가급적 쉽게 이해함에 초점을 맞춘다.\r\n\r\n# Jekyll(지킬)이란?\r\n\r\n지킬 앤 하이드의 그 지킬 맞다. <span class=\"primary\">Jekyll</span>은 <span class=\"primary\">GitHub</span>의 설립자 중 하나인 Tom Preston-Werner가 <span class=\"red-A400\">Ruby</span>언어를 통해 개발한 프레임워크다. <span class=\"primary\">GitHub</span> 자체적으로 <span class=\"primary\">Jekyll</span> CMS(Contents Management System)을 내장하고 있어서 <span class=\"primary\">Jekyll</span> 호스팅에 매우 적합하다.(물론 굳이 Jekyll 기반이 아니여도 호스팅엔 문제가 없다.)\r\n\r\n웹을 나누는 구분 중에 정적(Static) 웹과 동적(Dynamic) 웹이 있다. <span class=\"primary\">Jekyll</span> 정적(Static) 웹 환경을 위한 프레임워크다.\r\n\r\n<p align=\"center\">\r\n\t<img src=\"https://user-images.githubusercontent.com/50317129/90335406-cdcb3780-e00f-11ea-87e2-b8c8ba8f576c.png\" width=\"820px\" />\r\n</p>\r\n\r\n**정적 웹**\r\n\r\n* 요청에 따라 미리 저장된 페이지를 응답\r\n* 웹 서버가 필요하지 않으므로, 서버 사양에 대한 영향이 적음\r\n* Back-end 코드가 없어 제작이 간편함\r\n* 속도가 빠름\r\n* 복잡한 로직이 필요 없는 소규모 사이트(블로그 등)에 적합함\r\n\r\n<p align=\"center\">\r\n\t<img src=\"https://user-images.githubusercontent.com/50317129/90335405-cb68dd80-e00f-11ea-9b08-7a9ec21c5eee.png\" width=\"820px\" />\r\n</p>\r\n\r\n**동적 웹**\r\n\r\n* 요청에 따라 웹 서버가 데이터를 가공하여 전달\r\n* DB연동을 통한 데이터 CRUD가 가능\r\n* 동일한 페이지도 요청에 따라 다양한 내용을 응답\r\n* 웹 서버 사양에 따라 속도 저하의 우려 있음\r\n* 복잡한 로직이 필요한 비즈니스 사이트(쇼핑몰 등)에 적합함\r\n\r\n우리가 사용하는 대부분의 사이트는 동적 웹의 형태가 대부분이다. 자체적인 회원가입 시스템, 간단한 게시판 등이 존재한다면 대부분 동적 웹으로 봐도 무방하다. 회원가입이나 게시판에는 반드시 DB가 필요하고, 이는 곧 DB와 사이트 간의 동작을 제어할 서버가 필요하다는 의미이기 때문. DB의 존재로 인해 실시간 데이터 CRUD가 가능하다. <span class=\"green-A400\">사용자가 페이지에서 무언가 의미있는 컨텐츠 활동을 할 수 있다면 동적 웹</span>이다.\r\n\r\n반대로, 정적 웹은 단순히 저장된 파일을 요청에 맞게 보여만 주므로, 사용자는 단순 사이트 관광객 그 이상 그 이하도 아니다. 블로그의 경우 로그인 같은 사용자 인증이 전혀 필요 없으며, 소유자외의 작성자가 필요하지 않기 때문에 정적 웹 형태로도 얼마든지 서비스를 제공할 수 있다. <span class=\"primary\">Jekyll</span>은 사용자가 작성한 코드를 하나의 웹 프로젝트 형태로 빌드한다. <span class=\"primary\">Jekyll</span>은 이러한 정적 웹 방식을 채택함으로써 빠른 속도를 확보하고 백엔드 코드에 대한 부담감을 없앴다.\r\n\r\n사용하기에 앞서, <span class=\"primary\">Jekyll</span>은 <span class=\"red-A400\">블로그 퍼블리싱의 주체가 자기 자신</span>에게 있다. 즉, 페이지 하나하나를 세세하게 컨트롤 할 수 있으며, 그래야만 한다. 이러한 자유도는 누군가에겐 강력한 장점이지만, 누군가에겐 없는게 나은 단점이 되기도 한다.\r\n\r\n<span class=\"green-A400\">Jekyll은 이런 분들께 적합해요!</span>\r\n\r\n* 판에 찍힌 블로그보다 자신만의 감각이 들어간 블로그를 만들고 싶은 사람\r\n* 웹에 대한 기초적인 지식이나 그에 준하는 센스를 가진 사람\r\n* 다양한 기능을 구현하고 싶은 사람\r\n* 위의 모든 사항을 재미로 느낄 수 있는 사람\r\n\r\n<span class=\"red-A400\">Jekyll은 이런 분들께 나빠요...</span>\r\n\r\n* 어찌됐든 안정적인 블로그를 얻고싶은 사람\r\n* 이런저런 난잡한 일에 시간을 투자하기 어려운 사람\r\n* 지금 당장 블로그를 시작하고 싶은 사람\r\n* 복잡한 것을 지양하는 사람\r\n\r\n<span class=\"primary\">Jekyll</span>은 하나부터 열까지 본인이 직접 구성해야한다. 그 흔한 댓글 기능조차 플러그인을 사용해서 구성해야한다. 즉, 통상 사이트 혹은 블로그라면 응당 존재해야할 기능조차 본인이 스스로 구성하지 않으면 안 된다. 원한다면 내 블로그에 무엇이든 구현할 수 있지만, 반대로 아무것도 구현하지 않은 단순한 페이지조각에 그친다. 기타 카테고리나 태그를 만들 때도 마찬가지. 이런걸 하면서 재미를 느끼지 못 한다면 개인적으로 별로 권하고 싶지 않다.\r\n\r\n물론 아름다운 테마를 적용할 수 있는건 독보적인 강점이지만, 이미 Tistory 정도만 가도 플랫폼 형태이면서 강력한 커스터마이징을 제공하기도 한다. 그럼에도 불구하고 <span class=\"primary\">Jekyll</span>을 선택한다면, <span class=\"primary\">Jekyll</span>은 당신에게 그 어떤 블로그에서도 접해보지 못한 색다른 경험을 제공해줄 것이다."}],"post":{"title":"[Jekyll] GitHub Pages를 이용해 나만의 블로그 만들기 - 2. GitHub와 친해지기","excerpt":"초라기는 한국의 비밀국방기지(원타곤)를 습격하라는 임무를 받은 특급요원이다. 원타곤의 건물은 도넛 형태이며, 초라기는 효율적인 타격 포인트를 정하기 위해 구역을 아래와 같이 두 개의 원 모양으로 나누었다. (그림의 숫자는 각 구역의 번호이다.) 초라기는 각각 W명으로 구성된 특수소대를 다수 출동시켜 모든 구역에 침투시킬 예정이며, 각 구역 별로 적이 몇 명씩 배치되어 있는지는 초라기가 모두 알고 있다. 특수소대를 아래 조건에 따라 침투 시킬 수 있다.","coverImage":"https://user-images.githubusercontent.com/50317129/90983201-582f1080-e5a7-11ea-970b-8d7d82cb2084.png","date":"2021-06-07T22:42:02","type":"posts","category":"Jekyll","tag":["GitHub Pages(깃허브 페이지)","Jekyll(지킬)","Blog(블로그)","GitHub(깃허브)"],"group":"Jekyll Blog","comment":true,"publish":true,"slug":"2021-06-07-jekyll-blog-github","content":"<nav class=\"toc-wrap\"><ol class=\"toc-level toc-level-1\"><li class=\"toc-item toc-item-h1\"><a class=\"toc-link toc-link-h1\" href=\"#개요\">개요</a></li><li class=\"toc-item toc-item-h1\"><a class=\"toc-link toc-link-h1\" href=\"#github-속으로\">GitHub 속으로!</a></li></ol></nav><p class=\"red-A400 center\">※ 본 게시물은 Jekyll 시절의 게시글을 토대로 복원한 게시물입니다.</p>\n<h1 id=\"개요\"><a class=\"head-link\" href=\"#개요\"><span>🔗</span></a>개요</h1>\n<p><span class=\"primary\">Jekyll</span>은 <span class=\"primary\">GitHub</span>를 통해 호스팅한다. 즉, <span class=\"primary\">Jekyll</span>로 블로그를 만들기 위해선 <span class=\"primary\">GitHub</span>를 조금이나마 알고 있어야 한다. 본문에서는 <span class=\"primary\">GitHub</span>의 여러 기능은 제쳐두고, <span class=\"primary\">Jekyll</span> 호스팅을 목적을 기준으로 설명한다.</p>\n<h1 id=\"github-속으로\"><a class=\"head-link\" href=\"#github-속으로\"><span>🔗</span></a>GitHub 속으로!</h1>\n<p><span class=\"primary\">GitHub</span>는 개발자들을 위한 소스코드 형상관리 서비스를 제공해준다. Git을 저장하고 관리하는 대표적인 저장소로, 수 많은 오픈, 개인 소스가 존재한다. Git과 <span class=\"primary\">GitHub</span>는 그 자체만으로도 커다란 주제가 여러개 튀어나오니, 일단은 우리의 목표인 호스팅만을 알아보자.</p>\n<p><a href=\"https://github.com/\">GitHub 바로가기</a></p>\n<p align=\"center\">\n\t<img src=\"https://user-images.githubusercontent.com/50317129/90389062-d2512800-e0c3-11ea-8a59-f4980afab7b5.png\" width=\"820px\">\n</p>\n<p>접속하면 위와 같은 화면을 볼 수 있는데, 상단 우측의 <span class=\"lightBlue-A400\">Sign Up</span>을 클릭하여 회원가입을 진행한다.</p>\n<p align=\"center\">\n\t<img src=\"https://user-images.githubusercontent.com/50317129/90411265-777cf800-e0e6-11ea-95d5-372388b32bd2.png\" width=\"820px\">\n</p>\n<ul>\n<li>username: 닉네임</li>\n<li>Email address: 이메일 주소</li>\n<li>Password: 비밀번호</li>\n</ul>\n<p align=\"center\">\n\t<img src=\"https://user-images.githubusercontent.com/50317129/90412061-96c85500-e0e7-11ea-9a7b-8f71fa52f776.png\" width=\"820px\">\n</p>\n<p>계정을 생성하면 나오는 설문조사. 무시해도 무방하다.</p>\n<p align=\"center\">\n\t<img src=\"https://user-images.githubusercontent.com/50317129/90412232-d42ce280-e0e7-11ea-92e9-dc637cb2c8a9.png\" width=\"820px\">\n</p>\n<p>계정 생성이 완료되면 회원가입 시 작성한 이메일로 인증 코드를 전송하니 메일을 확인한다.</p>\n<p>만약, 이메일이 제대로 오지 않는다면, <span class=\"lightBlue-A400\">Resend verification email</span>을 통해 메일을 재발송할 수 있다. 혹은 이메일 주소를 잘못 입력했다면, <span class=\"lightBlue-A400\">Change your email settings</span>를 클릭하여 인증할 이메일 주소를 변경한다.</p>\n<p align=\"center\">\n\t<img src=\"https://user-images.githubusercontent.com/50317129/90412375-fde60980-e0e7-11ea-805b-7d4c58ab0b4d.png\" width=\"820px\">\n</p>\n<p>인증 이메일을 확인하고 <span class=\"lightBlue-A400\">Verify email address</span>를 클릭하여 인증을 완료한다. 계정 생성 과정이 끝난다.</p>\n<p align=\"center\">\n\t<img src=\"https://user-images.githubusercontent.com/50317129/90412420-0b9b8f00-e0e8-11ea-80a5-d28ff329a020.png\" width=\"820px\">\n</p>\n<p><span class=\"primary\">GitHub</span>에 접속하여 로그인을한다. 회원가입시 입력한 username이나 email 둘 중 아무거나 사용해도 상관없다. 위 화면이 뜨면 회원가입이 완료된 것이다.</p>"}},"__N_SSG":true}