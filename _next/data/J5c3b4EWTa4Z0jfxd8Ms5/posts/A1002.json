{"pageProps":{"post":{"title":"백준 알고리즘 A1002 터렛","excerpt":"조규현과 백승환은 터렛에 근무하는 직원이다. 하지만 워낙 존재감이 없어서 인구수는 차지하지 않는다. 다음은 조규현과 백승현의 사진이다.","coverImage":"http://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/images/boj-og-1200.png","date":"2021-04-21 21:56:10","type":"posts","category":"알고리즘","tag":["백준","알고리즘","JAVA"],"group":"백준 알고리즘","comment":true,"publish":true,"slug":"A1002","content":"<h1>터렛</h1>\n<p><img src=\"https://shields.io/badge/java-JDK%2014-lightgray?logo=java&#x26;style=plastic&#x26;logoColor=white&#x26;labelColor=orange\" alt=\"JAVA\"></p>\n<p>🔗 <a href=\"https://www.acmicpc.net/problem/1002\">전체 1002번 문제</a></p>\n<br />\n<h2>조건</h2>\n<table>\n<thead>\n<tr>\n<th align=\"center\">시간제한</th>\n<th align=\"center\">메모리 제한</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">2초</td>\n<td align=\"center\">128MB</td>\n</tr>\n</tbody>\n</table>\n<br />\n<h2>문제</h2>\n<p>조규현과 백승환은 터렛에 근무하는 직원이다. 하지만 워낙 존재감이 없어서 인구수는 차지하지 않는다. 다음은 조규현과 백승현의 사진이다.\r\n<br /></p>\n<p align=\"center\">\r\n\t<img src=\"https://www.acmicpc.net/upload/201003/dfcmhrjj_142c3w76qg8_b.jpg\" width=\"128px\" />\r\n</p>\r\n<br />\r\n이석원은 조규현과 백승환에게 상대편 마린(류재영)의 위치를 계산하라는 명령을 내렸다. 조규현과 백승환은 각각 자신의 터렛 위치에서 현재 적까지의 거리를 계산했다.\r\n<br />\r\n조규현의 좌표 (x<sub>1</sub>, y<sub>2</sub>)와 백승환의 좌표 (x<sub>2</sub>, y<sub>2</sub>)가 주어지고, 조규현이 계산한 류재명과의 거리 r<sub>1</sub>과 백승환이 계산한 류재명과의 거리 r<sub>2</sub>가 주어졌을 때, 류재명이 있을 수 있는 좌표의 수를 출력하는 프로그램을 작성하시오.\n<br />\n<h2>입력</h2>\n<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 다음과 같이 이루어져 있다.\r\n<br />\r\n한 줄에 x<sub>1</sub>, y<sub>1</sub>, r<sub>1</sub>, x<sub>2</sub>, y<sub>2</sub>, r<sub>2</sub>가 주어진다. x<sub>1</sub>, y<sub>1</sub>, x<sub>2</sub>, y<sub>2</sub>는 -10,000보다 크거나 같고, 10,000보다 작거나 같은 점수이고, r<sub>1</sub>, r<sub>2</sub>는 10,000보다 작거나 같은 자연수이다.</p>\n<br />\n<h2>출력</h2>\n<p>각 테스트 케이스마다 류재명이 있을 수 있는 위치의 수를 출력한다. 만약 류재명이 있을 수 있는 위치의 개수가 무한대일 경우에는 -1을 출력한다.</p>\n<br />\n<h2>케이스</h2>\n<ul>\n<li>\n<p>입력</p>\n<p>3\r\n<br />\r\n0 0 13 40 0 37\r\n<br />\r\n0 0 30 0 7 4\r\n<br />\r\n1 1 1 1 1 5</p>\n</li>\n</ul>\n<br />\n<ul>\n<li>\n<p>출력</p>\n<p>2\r\n<br />\r\n1\r\n<br />\r\n0</p>\n</li>\n</ul>\n<br />\n<h2>풀이</h2>\n<p>예제의 요소를 사람 이름으로 두었으나, 문제 이해에 방해가 되니 간단하게 서술하면 아래와 같다.<br />\r\n임의의 위치에 있는 점 A, B, C가 존재하며, A와 C의 거리, B와 C의 거리가 주어진다.\r\n<br />\r\n이 때, C가 실제로 위치할 수 있는 점의 갯수를 구하는 것. 즉, 간단하게 <strong>두 원의 접점을 구하는 문제</strong>라고 정의할 수 있다.\r\n<br />\r\n원이 완벽하게 겹칠 경우, <strong>그 수가 무수히 많으므로 -1로 표현</strong>하라는 조건이 포함된다.\r\n<br />\r\n<br />\r\n이를 그림으로 표현하면 아래와 같다.\r\n[대충 원 그림]\r\n<br />\r\n변수는 아래와 같이 정리할 수 있다.\r\n<br /></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">n</th>\n<th align=\"center\">x<sub>n</sub></th>\n<th align=\"center\">y<sub>n</sub></th>\n<th align=\"center\">r<sub>n</sub></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">1</td>\n<td align=\"center\">A의 x좌표</td>\n<td align=\"center\">A의 y좌표</td>\n<td align=\"center\">A의 반지름</td>\n</tr>\n<tr>\n<td align=\"center\">2</td>\n<td align=\"center\">B의 x좌표</td>\n<td align=\"center\">B의 y좌표</td>\n<td align=\"center\">B의 반지름</td>\n</tr>\n</tbody>\n</table>\n<br />\r\n케이스를 세분화하면 총 6가지로 나눌 수 있다.\r\n<br />\r\n<br />\n<ol>\n<li>두 원이 정확히 겹칠 경우 (-1)</li>\n<li>두 원이 서로 겹치면서 인접하지 않는 경우 (0)</li>\n<li>두 원이 서로 겹치지 않으면서 인접하지 않는 경우 (0)</li>\n<li>두 원이 서로 겹치면서 인접하는 경우 (1)</li>\n<li>두 원이 서로 겹치지 않으면서 인접하는 경우 (1)</li>\n<li>두 원이 서로 겹치면서 인접하지 않는 경우 (2)</li>\n</ol>\n<br />\n<p>본 풀이에선 x<sub>1</sub>, y<sub>1</sub>과 x<sub>2</sub>, y<sub>2</sub>의 거리(<code>distance</code>) 및 r<sub>1</sub>, r<sub>2</sub>를 합한 길이(<code>sum</code>)와 뺀 길이(<code>sub</code>)의 절대값을 이용하여 진행한다.\r\n<br />\r\n<br /></p>\n<p align=\"center\">\r\n\t<img src=\"https://latex.codecogs.com/svg.latex?%5Cfn_phv%20%7B%5Ccolor%7BWhite%7D%20distance%20=%20%5Csqrt%7B%28x_%7B1%7D%20-%20x_%7B2%7D%29%5E%7B2%7D%20&plus;%20%28y_%7B1%7D%20-%20y_%7B2%7D%29%5E%7B2%7D%7D%7D\" />\r\n</p>\n<p align=\"center\">\r\n\t<img src=\"https://latex.codecogs.com/svg.latex?%5Cfn_phv%20%7B%5Ccolor%7BWhite%7D%20sum%20%3D%20r_%7B1%7D%20&plus;%20r_%7B2%7D%7D\" />\r\n</p>\n<p align=\"center\">\r\n\t<img src=\"https://latex.codecogs.com/svg.latex?%5Cfn_phv%20%7B%5Ccolor%7BWhite%7D%20sub%20%3D%20%5Cleft%20%7C%20r_%7B1%7D%20-%20r_%7B2%7D%20%5Cright%20%7C%7D\" />\r\n</p>\n<ul>\n<li>\n<p>case 1 - 두 원이 정확히 겹칠 경우</p>\n<p>두 원의 위치 및 반지름이 서로 동일한 상황.\r\n<br />\r\n<code>distance</code>가 0이며, r<sub>1</sub>과 r<sub>2</sub>의 길이가 동일할 경우 성립한다.\r\n<br />\r\n<br /></p>\n</li>\n<li>\n<p>case 2 - 두 원이 서로 겹치면서 인접하지 않는 경우</p>\n<p>두 원의 원점과의 거리가 반지름의 차이보다 짧은 상황.\r\n<br />\r\n<code>distance &#x3C; sub</code>일 경우 성립한다.\r\n<br />\r\n<br /></p>\n</li>\n<li>\n<p>case 3 - 두 원이 서로 겹치지 않으면서 인접하지 않는 경우</p>\n<p>두 원의 원점과의 거리가 반지름의 합보다 긴 상황.\r\n<br />\r\n<code>distance > sum</code>일 경우 성립한다.\r\n<br />\r\n<br /></p>\n</li>\n<li>\n<p>case 4 - 두 원이 서로 겹치면서 인접하는 경우</p>\n<p>두 원의 원점과의 거리가 반지름의 차이와 일치하는 상황.\r\n<br />\r\n<code>distance == sub</code>일 경우 성립한다.\r\n<br />\r\n<br /></p>\n</li>\n<li>\n<p>case 5 - 두 원이 서로 겹치지 않으면서 인접하는 경우</p>\n<p>두 원의 원점과의 거리가 반지름의 합과 일치하는 상황.\r\n<br />\r\n<code>distance == sum</code>일 경우 성립한다.\r\n<br />\r\n<br /></p>\n</li>\n<li>\n<p>case 6 - 두 원이 서로 겹치면서 인접하지 않는 경우</p>\n<p>두 원이 서로 적당히 겹치는 상황.\r\n<br />\r\n<code>distance &#x3C; sum &#x26;&#x26; distance > sub</code>일 경우 성립한다.\r\n<br />\r\n<br /></p>\n</li>\n</ul>\n<p>굳이 식으로 표현하지 않아도, 위의 5개 케이스에 부합하지 않는 모든 상황에 적용하면 된다.</p>\n<p>위 케이스들을 <code>if</code>문을 사용하여 적절히 표현하면 된다. <code>switch</code>문의 경우 하나의 변수를 기준으로 분기를 판단하므로 해당 알고리즘에 적용하기엔 다소 부적절하다.</p>\n<br />\n<h2>전체 소스</h2>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token doc-comment comment\">/**\n * 백준 전체 1002 문제 알고리즘 클래스\n *\n * <span class=\"token keyword\">@author</span> RWB\n * <span class=\"token keyword\">@since</span> 2021.04.21 Wed 21:56:10\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token doc-comment comment\">/**\n\t * 메인 함수\n\t *\n\t * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">args</span>: [String[]] 매개변수\n\t */</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">Scanner</span> scanner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">int</span> length <span class=\"token operator\">=</span> scanner<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&#x3C;</span> length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">int</span> x1 <span class=\"token operator\">=</span> scanner<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> y1 <span class=\"token operator\">=</span> scanner<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> r1 <span class=\"token operator\">=</span> scanner<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">int</span> x2 <span class=\"token operator\">=</span> scanner<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> y2 <span class=\"token operator\">=</span> scanner<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> r2 <span class=\"token operator\">=</span> scanner<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">calcPoints</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> r1<span class=\"token punctuation\">,</span> x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">,</span> r2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token doc-comment comment\">/**\n\t * 접점 갯수 반환 함수\n\t *\n\t * case 1 - 두 원이 정확히 겹칠 경우 (-1)\n\t * case 2 - 두 원이 서로 겹치면서 인접하지 않는 경우 (0)\n\t * case 3 - 두 원이 서로 겹치지 않으면서 인접하지 않는 경우 (0)\n\t * case 4 - 두 원이 서로 겹치면서 인접하는 경우 (1)\n\t * case 5 - 두 원이 서로 겹치지 않으면서 인접하는 경우 (1)\n\t * case 6 - 두 원이 서로 겹치면서 인접하지 않는 경우 (2)\n\t *\n\t * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">x1</span>: [int] A의 x좌표\n\t * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">y1</span>: [int] A의 y좌표\n\t * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">r1</span>: [int] A와 C 사이의 거리\n\t * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">x2</span>: [int] B의 x좌표\n\t * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">y2</span>: [int] B의 y좌표\n\t * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">r2</span>: [int] B와 C 사이의 거리\n\t *\n\t * <span class=\"token keyword\">@return</span> [int] 접점 갯수\n\t */</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">calcPoints</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> r1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> r2<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// 두 점 사이의 거리 계산식</span>\n\t\t<span class=\"token keyword\">double</span> distance <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>x2 <span class=\"token operator\">-</span> x1<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>y2 <span class=\"token operator\">-</span> y1<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> r1 <span class=\"token operator\">+</span> r2<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> sub <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>r1 <span class=\"token operator\">-</span> r2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\">// case 1 - 두 원이 정확히 겹칠 경우</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>distance <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&#x26;&#x26;</span> r1 <span class=\"token operator\">==</span> r2<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\">// case 2 - 두 원이 서로 겹치면서 인접하지 않는 경우</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>distance <span class=\"token operator\">&#x3C;</span> sub<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\">// case 3 - 두 원이 서로 겹치지 않으면서 인접하지 않는 경우</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>distance <span class=\"token operator\">></span> sum<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\">// case 4 - 두 원이 서로 겹치면서 인접하는 경우</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>distance <span class=\"token operator\">==</span> sub<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\">// case 5 - 두 원이 서로 겹치지 않으면서 인접하는 경우</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>distance <span class=\"token operator\">==</span> sum<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\">// case 6 - 두 원이 서로 겹치면서 인접하지 않는 경우</span>\n\t\t<span class=\"token keyword\">else</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n"}},"__N_SSG":true}